name: CI
on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  unix:
    
    runs-on: ${{ matrix.os }}
     
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        luajit: [ON, OFF]

    steps:
      - uses: actions/checkout@v2

      - name: install mamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: environment-dev.yml
          environment-name: xeus-lua

      - name: install cxx compiler
        shell: bash -l {0}
        run: |
          $HOME/micromamba-bin/micromamba install cxx-compiler -c conda-forge -y

      - name: install luajit
        shell: bash -l {0}
        run: |
          $HOME/micromamba-bin/micromamba install luajit -c conda-forge -y
        if: matrix.luajit == 'ON'


      - name: cmake configure
        shell: bash -l {0}
        run: |
          mkdir -p bld
          cd bld
          cmake .. \
           -DXLUA_WITH_XWIDGETS=ON\
           -DXLUA_WITH_XCANVAS=ON\
           -DXEUS_LUA_USE_LUAJIT=${{matrix.luajit}} \
           -DCMAKE_PREFIX_PATH=$CONDA_PREFIX \
           -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX 

      - name: build
        shell: bash -l {0}
        run: |
          cd bld
          make -j8

      - name: install
        shell: bash -l {0}
        run: |
          cd bld
          make install

      # - name: test
      #   shell: bash -l {0}
      #   run: |
      #     cd test
      #     pytest .

  win:
    
    runs-on: ${{ matrix.os }}
     
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest]

    steps:
      - uses: actions/checkout@v2

      - name: install mamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: environment-dev.yml
          environment-name: xeus-lua

      - name: install cxx compiler
        shell: powershell
        run: |
          micromamba install cxx-compiler -c conda-forge -y

      - name: cmake configure
        shell: powershell
        run: |
          mkdir -p bld
          cd bld
          cmake .. -DCMAKE_BUILD_TYPE=Release  -DDEPENDENCY_SEARCH_PREFIX="%CONDA_PREFIX%\Library" -DCMAKE_PREFIX_PATH="%CONDA_PREFIX%\Library"

      - name: build
        shell: powershell
        run: |
          cd bld
          cmake --build . --target ALL_BUILD


  # emscripten_wasm_docker:
  #   runs-on: ubuntu-20.04

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       container: ["emscripten/emsdk:2.0.27", "emscripten/emsdk:2.0.32", "emscripten/emsdk:latest"]

    
  #   container: ${{ matrix.container}}
     
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Verify emscripten
  #       run: emcc -v


  #     - name: "install lua"
  #       run: |
  #         mkdir -p /opt/wasm_lua
  #         git clone https://github.com/DerThorsten/wasm_lua   /opt/wasm_lua
  #         cd /opt/wasm_lua && git checkout tags/0.1.0
  #         cd /opt/wasm_lua && \
  #         emmake make 
  #         echo "LS"
  #         ls
  #         cd /opt/wasm_lua/lua-5.3.4/src
  #         echo "LS src"
  #         ls

  #     - name: "install xtl"
  #       run: |
  #         mkdir -p /opt/xtl/build 
  #         git clone https://github.com/xtensor-stack/xtl.git  /opt/xtl/src
  #         cd /opt/xtl/src 
  #         git checkout 0.7.2
  #         cd /opt/xtl/build 
  #         emcmake cmake ../src/ -DCMAKE_INSTALL_PREFIX=/custom_sysroot
  #         emmake make -j2 install
  #     - name: "install nlohmann-json"
  #       run: |
  #         mkdir -p /opt/nlohmannjson/build 
  #         git clone https://github.com/nlohmann/json.git  /opt/nlohmannjson/src
  #         cd  /opt/nlohmannjson/src
  #         git checkout v3.9.0
  #         cd /opt/nlohmannjson/build 
  #         emcmake cmake ../src/  -DJSON_BuildTests=OFF -DCMAKE_INSTALL_PREFIX=/custom_sysroot
  #         emmake make -j2 install
  #     - name: "install xeus"
  #       run: |
  #         mkdir -p /opt/xeus/build 
  #         git clone https://github.com/jupyter-xeus/xeus.git  /opt/xeus/src
  #         cd  /opt/xeus/src
  #         git checkout 2.2.0
  #         cd /opt/xeus/build 
  #         emcmake cmake ../src \
  #           -DXEUS_EMSCRIPTEN_WASM_BUILD=ON \
  #           -DXEUS_BUILD_TESTS=ON \
  #           -DCMAKE_INSTALL_PREFIX=/custom_sysroot \
  #           -Dxtl_DIR=/custom_sysroot/share/cmake/xtl \
  #           -Dnlohmann_json_DIR=/custom_sysroot/lib/cmake/nlohmann_json 
  #         emmake make -j2
  #         emmake make -j2 install

  #     - name: "install xproperty"
  #       run: |
  #         mkdir -p /opt/xproperty/build 
  #         git clone https://github.com/jupyter-xeus/xproperty.git  /opt/xproperty/src
  #         cd  /opt/xproperty/src
  #         git checkout 0.11.0
  #         cd /opt/xproperty/build 
  #         emcmake cmake ../src \
  #           -Dxtl_DIR=/custom_sysroot/share/cmake/xtl \
  #           -DCMAKE_INSTALL_PREFIX=/custom_sysroot 
  #         emmake make -j2
  #         emmake make -j2 install


  #     - name: "install xwidgets"
  #       run: |
  #         mkdir -p /opt/xwidgets/build 
  #         git clone https://github.com/jupyter-xeus/xwidgets.git  /opt/xwidgets/src
  #         cd  /opt/xwidgets/src
  #         git checkout 0.26.1
  #         cd /opt/xwidgets/build 
  #         emcmake cmake ../src \
  #          -Dxproperty_DIR=/custom_sysroot/lib/cmake/xproperty \
  #          -Dxtl_DIR=/custom_sysroot/share/cmake/xtl \
  #          -Dnlohmann_json_DIR=/custom_sysroot/lib/cmake/nlohmann_json \
  #          -Dxeus_DIR=/custom_sysroot/lib/cmake/xeus \
  #          -DCMAKE_INSTALL_PREFIX=/custom_sysroot 
  #         emmake make -j2
  #         emmake make -j2 install

  #     - name: "install xcanvas"
  #       run: |
  #         mkdir -p /opt/xcanvas/build 
  #         git clone https://github.com/MartinRenou/xcanvas.git  /opt/xcanvas/src
  #         cd  /opt/xcanvas/src
  #         git checkout 0.2.1
  #         cd /opt/xcanvas/build 
  #         emcmake cmake ../src \
  #          -Dxproperty_DIR=/custom_sysroot/lib/cmake/xproperty \
  #          -Dxtl_DIR=/custom_sysroot/share/cmake/xtl \
  #          -Dxwidgets_DIR=/custom_sysroot/lib/cmake/xwidgets \
  #          -Dnlohmann_json_DIR=/custom_sysroot/lib/cmake/nlohmann_json \
  #          -Dxeus_DIR=/custom_sysroot/lib/cmake/xeus \
  #          -DXCANVAS_BUILD_SHARED_LIBS=OFF \
  #          -DXCANVAS_BUILD_STATIC_LIBS=ON \
  #          -DCMAKE_INSTALL_PREFIX=/custom_sysroot 
  #         emmake make -j2
  #         emmake make -j2 install


  #     - name: cmake configure rendered project
  #       shell: bash -l {0}
  #       run: |
  #         mkdir -p bld
  #         pwd
  #         cd bld
  #         pwd
  #         emcmake cmake $GITHUB_WORKSPACE \
  #          -DXEUS_LUA_EMSCRIPTEN_WASM_BUILD=ON \
  #          -Dxwidgets_DIR=/custom_sysroot/lib/cmake/xwidgets \
  #          -Dxcanvas_DIR=/custom_sysroot/lib/cmake/xcanvas \
  #          -Dxtl_DIR=/custom_sysroot/share/cmake/xtl \
  #          -Dnlohmann_json_DIR=/custom_sysroot/lib/cmake/nlohmann_json \
  #          -Dxeus_DIR=/custom_sysroot/lib/cmake/xeus \ 
  #          -DLUA_INCLUDE_DIR=/opt/wasm_lua/lua-5.3.4/src \
  #          -DLUA_LIBRARY=/opt/wasm_lua/lua-5.3.4/src/liblua.a \
  #          -DCMAKE_INSTALL_PREFIX=/custom_sysroot
  #     - name: build rendered project
  #       shell: bash -l {0}
  #       run: |
  #         cd bld
  #         emmake make -j2
  #     - name: install rendered project
  #       shell: bash -l {0}
  #       run: |
  #         cd bld
  #         make install

  emscripten_wasm:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        emsdk_ver: ["2.0.32", "latest"]

    steps:
      - uses: actions/checkout@v2

      - name: make_install_dir
        shell: bash -l {0}
        run: |
          mkdir -p $GITHUB_WORKSPACE/custom_sysroot
      - name: install emsdk
        shell: bash -l {0}
        run: |
          git clone https://github.com/emscripten-core/emsdk.git /opt/emsdk
          cd /opt/emsdk 
           
          ./emsdk install ${{matrix.emsdk_ver}}
           
      - name: install mamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: environment-dev.yml
          environment-name: xeus-mylang


      - name: "install lua"
        run: |
          cd /opt/emsdk
          ./emsdk activate ${{matrix.emsdk_ver}}
          source "/opt/emsdk/emsdk_env.sh"

          mkdir -p /opt/wasm_lua
          git clone https://github.com/DerThorsten/wasm_lua   /opt/wasm_lua
          cd /opt/wasm_lua && git checkout tags/0.1.0
          cd /opt/wasm_lua && \
          emmake make

      - name: "install xtl"
        run: |
          cd /opt/emsdk
          ./emsdk activate ${{matrix.emsdk_ver}}
          source "/opt/emsdk/emsdk_env.sh"

          mkdir -p /opt/xtl/build 
          git clone https://github.com/xtensor-stack/xtl.git  /opt/xtl/src
          cd /opt/xtl/src 
          git checkout 0.7.2
          cd /opt/xtl/build 
          emcmake cmake ../src/ -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/custom_sysroot
          emmake make -j2 install

      - name: "install nlohmann-json"
        run: |
          cd /opt/emsdk
          ./emsdk activate ${{matrix.emsdk_ver}}
          source "/opt/emsdk/emsdk_env.sh"

          mkdir -p /opt/nlohmannjson/build 
          git clone https://github.com/nlohmann/json.git  /opt/nlohmannjson/src
          cd  /opt/nlohmannjson/src
          git checkout v3.9.0
          cd /opt/nlohmannjson/build 
          emcmake cmake ../src/  -DJSON_BuildTests=OFF -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/custom_sysroot
          emmake make -j2 install

      - name: "install xeus"
        run: |
          cd /opt/emsdk
          ./emsdk activate ${{matrix.emsdk_ver}}
          source "/opt/emsdk/emsdk_env.sh"

          mkdir -p /opt/xeus/build 
          git clone https://github.com/jupyter-xeus/xeus.git  /opt/xeus/src
          cd  /opt/xeus/src
          git checkout 2.2.0
          cd /opt/xeus/build 
          emcmake cmake ../src \
            -DXEUS_EMSCRIPTEN_WASM_BUILD=ON \
            -DXEUS_BUILD_TESTS=ON \
            -Dxtl_DIR=$GITHUB_WORKSPACE/custom_sysroot/share/cmake/xtl \
            -Dnlohmann_json_DIR=$GITHUB_WORKSPACE/custom_sysroot/lib/cmake/nlohmann_json \
            -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/custom_sysroot 
          emmake make -j2
          emmake make -j2 install


      - name: "install xproperty"
        run: |
          cd /opt/emsdk
           
          ./emsdk activate ${{matrix.emsdk_ver}}
           
          source "/opt/emsdk/emsdk_env.sh"
          mkdir -p /opt/xproperty/build 
          git clone https://github.com/jupyter-xeus/xproperty.git  /opt/xproperty/src
          cd  /opt/xproperty/src
          git checkout 0.11.0
          cd /opt/xproperty/build 
          emcmake cmake ../src \
            -Dxtl_DIR=$GITHUB_WORKSPACE/custom_sysroot/share/cmake/xtl \
            -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/custom_sysroot 
          emmake make -j2
          emmake make -j2 install


      - name: "install xwidgets"
        run: |
          cd /opt/emsdk
           
          ./emsdk activate ${{matrix.emsdk_ver}}
           
          source "/opt/emsdk/emsdk_env.sh"
          mkdir -p /opt/xwidgets/build 
          git clone https://github.com/jupyter-xeus/xwidgets.git  /opt/xwidgets/src
          cd  /opt/xwidgets/src
          git checkout 0.26.1
          cd /opt/xwidgets/build 
          emcmake cmake ../src \
           -DXWIDGETS_BUILD_SHARED_LIBS=OFF \
           -DXWIDGETS_BUILD_STATIC_LIBS=ON \
           -Dxproperty_DIR=$GITHUB_WORKSPACE/custom_sysroot/lib/cmake/xproperty \
           -Dxtl_DIR=$GITHUB_WORKSPACE/custom_sysroot/share/cmake/xtl \
           -Dnlohmann_json_DIR=$GITHUB_WORKSPACE/custom_sysroot/lib/cmake/nlohmann_json \
           -Dxeus_DIR=$GITHUB_WORKSPACE/custom_sysroot/lib/cmake/xeus \
           -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/custom_sysroot 
          emmake make -j2
          emmake make -j2 install

      - name: "install xcanvas"
        run: |
          cd /opt/emsdk
           
          ./emsdk activate ${{matrix.emsdk_ver}}
           
          source "/opt/emsdk/emsdk_env.sh"
          mkdir -p /opt/xcanvas/build 
          git clone -b master https://github.com/martinRenou/xcanvas.git  /opt/xcanvas/src
          cd  /opt/xcanvas/src
          git checkout 0.2.2
          cd /opt/xcanvas/build 
          emcmake cmake ../src \
           -DXCANVAS_BUILD_SHARED_LIBS=OFF \
           -DXCANVAS_BUILD_STATIC_LIBS=ON \
           -Dxwidgets_DIR=$GITHUB_WORKSPACE/custom_sysroot/lib/cmake/xwidgets \
           -Dxproperty_DIR=$GITHUB_WORKSPACE/custom_sysroot/lib/cmake/xproperty \
           -Dxtl_DIR=$GITHUB_WORKSPACE/custom_sysroot/share/cmake/xtl \
           -Dnlohmann_json_DIR=$GITHUB_WORKSPACE/custom_sysroot/lib/cmake/nlohmann_json \
           -Dxeus_DIR=$GITHUB_WORKSPACE/custom_sysroot/lib/cmake/xeus \
           -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/custom_sysroot 
          emmake make -j2
          emmake make -j2 install


      - name: cmake configure this repo
        shell: bash -l {0}
        run: |
          cd /opt/emsdk
           
          ./emsdk activate ${{matrix.emsdk_ver}}
           
          source "/opt/emsdk/emsdk_env.sh"
          cd $GITHUB_WORKSPACE
          mkdir -p bld
          cd bld
          emcmake cmake .. \
           -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/custom_sysroot \
           -DXEUS_LUA_EMSCRIPTEN_WASM_BUILD=ON \
           -Dxtl_DIR=$GITHUB_WORKSPACE/custom_sysroot/share/cmake/xtl \
           -Dnlohmann_json_DIR=$GITHUB_WORKSPACE/custom_sysroot/lib/cmake/nlohmann_json \
           -Dxeus_DIR=$GITHUB_WORKSPACE/custom_sysroot/lib/cmake/xeus \
           -Dxproperty_DIR=$GITHUB_WORKSPACE/custom_sysroot/lib/cmake/xproperty \
           -Dxwidgets_DIR=$GITHUB_WORKSPACE/custom_sysroot/lib/cmake/xwidgets \
           -Dxcanvas_DIR=$GITHUB_WORKSPACE/custom_sysroot/lib/cmake/xcanvas \
           -DLUA_INCLUDE_DIR=/opt/wasm_lua/lua-5.3.4/src \
           -DLUA_LIBRARY=/opt/wasm_lua/lua-5.3.4/src/liblua.a \
           -DXLUA_WITH_XWIDGETS=ON \
           -DXLUA_WITH_XCANVAS=ON \
           -DXLUA_USE_SHARED_XWIDGETS=OFF\
           -DXLUA_USE_SHARED_XCANVAS=OFF

      - name: build  project
        shell: bash
        run: |
          cd /opt/emsdk
           
          ./emsdk activate ${{matrix.emsdk_ver}}
           
          source "/opt/emsdk/emsdk_env.sh"
          cd $GITHUB_WORKSPACE
          cd bld
          emmake make -j8
      - name: install  project
        shell: bash -l {0}
        run: |
          cd /opt/emsdk
           
          ./emsdk activate ${{matrix.emsdk_ver}}
           
          source "/opt/emsdk/emsdk_env.sh"
          cd $GITHUB_WORKSPACE
          cd bld
          make install