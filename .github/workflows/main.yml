name: CI
on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  unix:
    
    runs-on: ${{ matrix.os }}
     
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        luajit: [ON, OFF]

    steps:
      - uses: actions/checkout@v2

      - name: install mamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: environment-dev.yml
          environment-name: xeus-lua

      - name: install cxx compiler
        shell: bash -l {0}
        run: |
          $HOME/micromamba-bin/micromamba install cxx-compiler -c conda-forge -y

      - name: install luajit
        shell: bash -l {0}
        run: |
          $HOME/micromamba-bin/micromamba install luajit -c conda-forge -y
        if: matrix.luajit == 'ON'


      - name: cmake configure
        shell: bash -l {0}
        run: |
          mkdir -p bld
          cd bld
          cmake .. \
           -DXLUA_WITH_XWIDGETS=ON\
           -DXLUA_WITH_XCANVAS=ON\
           -DXEUS_LUA_USE_LUAJIT=${{matrix.luajit}} \
           -DCMAKE_PREFIX_PATH=$CONDA_PREFIX \
           -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX 

      - name: build
        shell: bash -l {0}
        run: |
          cd bld
          make -j8

      - name: install
        shell: bash -l {0}
        run: |
          cd bld
          make install

      # - name: test
      #   shell: bash -l {0}
      #   run: |
      #     cd test
      #     pytest .

  win:
    
    runs-on: ${{ matrix.os }}
     
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest]

    steps:
      - uses: actions/checkout@v2

      - name: install mamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: environment-dev.yml
          environment-name: xeus-lua

      - name: micromamba shell hook
        shell: powershell
        run: |
          micromamba shell hook -s cmd.exe -p C:\Users\runneradmin\micromamba-root
      
      - name: cmake configure
        shell: powershell
        run: |
          mkdir -p bld
          cd bld
          cmake .. -DCMAKE_BUILD_TYPE=Release  -DDEPENDENCY_SEARCH_PREFIX="%CONDA_PREFIX%\Library" -DCMAKE_PREFIX_PATH="%CONDA_PREFIX%\Library"

      - name: build
        shell: powershell
        run: |
          cd bld
          cmake --build . --target ALL_BUILD

  emscripten_wasm:

    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        emsdk: ["2.0.32", "latest"]
    steps:
      - uses: actions/checkout@v2
      - uses: docker-practice/actions-setup-docker@master
      - run: |
          chmod +x build_emscripten.sh
          ./build_emscripten.sh BUILD ${{ matrix.emsdk }}


