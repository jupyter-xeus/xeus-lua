{"version":3,"sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lib0/environment.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lib0/conditions.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lib0/map.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lib0/storage.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lib0/string.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/process/browser.js"],"names":["isNode","process","release","test","name","isBrowser","window","params","navigator","platform","args","computeParams","undefined","map","pargs","argv","currParamName","i","length","parg","set","push","location","search","slice","split","forEach","kv","key","value","string","getParam","defaultVal","get","getVariable","v","toUpperCase","storage","has","hasParam","create","Map","copy","m","r","k","setIfUndefined","createT","f","res","any","_localStorage","constructor","this","setItem","newValue","getItem","usePolyfill","localStorage","e","varStorage","onChange","eventHandler","addEventListener","fromCharCode","String","trimLeftRegex","fromCodePoint","fromCamelCaseRegex","fromCamelCase","s","separator","replace","trimLeft","match","toLowerCase","utf8TextEncoder","TextEncoder","encodeUtf8","str","encode","encodedString","unescape","encodeURIComponent","len","buf","Uint8Array","codePointAt","utf8TextDecoder","TextDecoder","fatal","ignoreBOM","decode","cachedSetTimeout","cachedClearTimeout","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","call","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","run","marker","runClearTimeout","Item","array","noop","nextTick","Array","arguments","prototype","apply","title","browser","env","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask"],"mappings":"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","file":"132.8f91fc9e86c295085c8b.js","sourcesContent":["/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\n\n/* istanbul ignore next */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release && /node|io\\.js/.test(process.release.name)\n/* istanbul ignore next */\nexport const isBrowser = typeof window !== 'undefined' && !isNode\n/* istanbul ignore next */\nexport const isMac = typeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* istanbul ignore next */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      /* istanbul ignore next */\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n    // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create()\n      // eslint-disable-next-line no-undef\n      ;(location.search || '?').slice(1).split('&').forEach(kv => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    } else {\n      params = map.create()\n    }\n  }\n  return params\n}\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nexport const hasParam = name => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* istanbul ignore next */\nexport const getParam = (name, defaultVal) => computeParams().get(name) || defaultVal\n// export const getArgs = name => computeParams() && args\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* istanbul ignore next */\nexport const getVariable = name => isNode ? conditions.undefinedToNull(process.env[name.toUpperCase()]) : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\nexport const getConf = name => computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nexport const hasConf = name => hasParam('--' + name) || getVariable(name) !== null\n\n/* istanbul ignore next */\nexport const production = hasConf('production')\n","/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* istanbul ignore next */\nexport const undefinedToNull = v => v === undefined ? null : v\n","/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template X,Y\n * @param {Map<X,Y>} m\n * @return {Map<X,Y>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template T,K\n * @param {Map<K, T>} map\n * @param {K} key\n * @param {function():T} createT\n * @return {T}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n","/* global localStorage, addEventListener */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* istanbul ignore next */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map()\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue)\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n\n/* istanbul ignore next */\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill()\nlet usePolyfill = true\n\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  /* istanbul ignore next */\n  if (typeof localStorage !== 'undefined') {\n    _localStorage = localStorage\n    usePolyfill = false\n  }\n} catch (e) { }\n\n/* istanbul ignore next */\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\nexport const varStorage = _localStorage\n\n/* istanbul ignore next */\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\n","/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* istanbul ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* istanbul ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* istanbul ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* istanbul ignore next */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* istanbul ignore next */\n  utf8TextDecoder = null\n}\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* istanbul ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"],"sourceRoot":""}