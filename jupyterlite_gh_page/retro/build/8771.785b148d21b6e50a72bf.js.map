{"version":3,"sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/mainmenu-extension/lib/index.js"],"names":["PLUGIN_ID","CommandIDs","createEditMenu","app","menu","trans","commands","addCommand","undo","label","__","isEnabled","Private","delegateEnabled","undoers","execute","delegateExecute","redo","clearCurrent","enabled","clearers","localizedLabel","delegateLabel","clearAll","goToLine","goToLiners","createFileMenu","router","closeAndCleanup","closeAndCleaners","shell","currentWidget","title","closable","createConsole","consoleCreators","shutdown","caption","isVisible","quitEntry","showDialog","body","buttons","Dialog","then","result","button","accept","setting","ServerConnection","apiURL","URLExt","baseUrl","method","ok","document","createElement","p1","textContent","p2","appendChild","Widget","node","window","close","catch","data","logout","navigate","hard","createKernelMenu","interruptKernel","kernelUsers","reconnectToKernel","restartKernel","restartKernelAndClear","changeKernel","shutdownKernel","shutdownAllKernels","undefined","serviceManager","sessions","running","next","shutdownAll","createViewMenu","lineNumbering","editorViewers","isToggled","delegateToggled","matchBrackets","wordWrap","createRunMenu","run","codeRunners","runAll","restartAndRunAll","createTabsMenu","labShell","tabGroup","disposable","activateById","args","id","widget","find","widgets","w","previousId","activatePreviouslyUsedTab","restored","populateTabs","isDisposed","dispose","length","isPreviouslyUsedTabAttached","each","push","command","addGroup","layoutModified","connect","currentChanged","_","oldValue","openEdit","openFile","openKernel","openView","openRun","runAbove","runBelow","openTabs","openSettings","openHelp","openFirst","requires","IRouter","ITranslator","optional","ICommandPalette","ILabShell","ISettingRegistry","provides","IMainMenu","activate","async","translator","palette","registry","load","MainMenu","addClass","loadSettingsMenu","aMenu","addMenu","rank","options","quitButton","PageConfig","toLowerCase","fileMenu","editMenu","kernelMenu","runMenu","viewMenu","tabsMenu","activateMenu","item","activeMenu","openActiveMenu","settingsMenu","helpMenu","activeIndex","addItem","category","add","it","predicate","value","displayInformation","location","reload","s","extender","tracker","has","count","size","executor","f","Promise","resolve","toggled","menuFactory","_a","canonical","loaded","populate","schema","_b","properties","menus","default","Object","keys","plugins","map","plugin","main","concat","reduceRight","acc","val","SettingRegistry","sort","a","b","Infinity","transform","compose","_c","_d","JSONExt","defaults","user","composite","fetch","raw","version","settings","currentMenus","Array","MenuFactory","filter","disabled","assign","items","forEach","changed","newMenus","pluginChanged","sender","oldMenus","toAdd"],"mappings":"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","file":"8771.785b148d21b6e50a72bf.js","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * @packageDocumentation\n * @module mainmenu-extension\n */\nimport { ILabShell, IRouter } from '@jupyterlab/application';\nimport { Dialog, ICommandPalette, MenuFactory, showDialog } from '@jupyterlab/apputils';\nimport { PageConfig, URLExt } from '@jupyterlab/coreutils';\nimport { IMainMenu, MainMenu } from '@jupyterlab/mainmenu';\nimport { ServerConnection } from '@jupyterlab/services';\nimport { ISettingRegistry, SettingRegistry } from '@jupyterlab/settingregistry';\nimport { ITranslator } from '@jupyterlab/translation';\nimport { each, find } from '@lumino/algorithm';\nimport { JSONExt } from '@lumino/coreutils';\nimport { Widget } from '@lumino/widgets';\nconst PLUGIN_ID = '@jupyterlab/mainmenu-extension:plugin';\n/**\n * A namespace for command IDs of semantic extension points.\n */\nexport var CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.openEdit = 'editmenu:open';\n    CommandIDs.undo = 'editmenu:undo';\n    CommandIDs.redo = 'editmenu:redo';\n    CommandIDs.clearCurrent = 'editmenu:clear-current';\n    CommandIDs.clearAll = 'editmenu:clear-all';\n    CommandIDs.find = 'editmenu:find';\n    CommandIDs.goToLine = 'editmenu:go-to-line';\n    CommandIDs.openFile = 'filemenu:open';\n    CommandIDs.closeAndCleanup = 'filemenu:close-and-cleanup';\n    CommandIDs.createConsole = 'filemenu:create-console';\n    CommandIDs.shutdown = 'filemenu:shutdown';\n    CommandIDs.logout = 'filemenu:logout';\n    CommandIDs.openKernel = 'kernelmenu:open';\n    CommandIDs.interruptKernel = 'kernelmenu:interrupt';\n    CommandIDs.reconnectToKernel = 'kernelmenu:reconnect-to-kernel';\n    CommandIDs.restartKernel = 'kernelmenu:restart';\n    CommandIDs.restartKernelAndClear = 'kernelmenu:restart-and-clear';\n    CommandIDs.changeKernel = 'kernelmenu:change';\n    CommandIDs.shutdownKernel = 'kernelmenu:shutdown';\n    CommandIDs.shutdownAllKernels = 'kernelmenu:shutdownAll';\n    CommandIDs.openView = 'viewmenu:open';\n    CommandIDs.wordWrap = 'viewmenu:word-wrap';\n    CommandIDs.lineNumbering = 'viewmenu:line-numbering';\n    CommandIDs.matchBrackets = 'viewmenu:match-brackets';\n    CommandIDs.openRun = 'runmenu:open';\n    CommandIDs.run = 'runmenu:run';\n    CommandIDs.runAll = 'runmenu:run-all';\n    CommandIDs.restartAndRunAll = 'runmenu:restart-and-run-all';\n    CommandIDs.runAbove = 'runmenu:run-above';\n    CommandIDs.runBelow = 'runmenu:run-below';\n    CommandIDs.openTabs = 'tabsmenu:open';\n    CommandIDs.activateById = 'tabsmenu:activate-by-id';\n    CommandIDs.activatePreviouslyUsedTab = 'tabsmenu:activate-previously-used-tab';\n    CommandIDs.openSettings = 'settingsmenu:open';\n    CommandIDs.openHelp = 'helpmenu:open';\n    CommandIDs.openFirst = 'mainmenu:open-first';\n})(CommandIDs || (CommandIDs = {}));\n/**\n * A service providing an interface to the main menu.\n */\nconst plugin = {\n    id: PLUGIN_ID,\n    requires: [IRouter, ITranslator],\n    optional: [ICommandPalette, ILabShell, ISettingRegistry],\n    provides: IMainMenu,\n    activate: async (app, router, translator, palette, labShell, registry) => {\n        const { commands } = app;\n        const trans = translator.load('jupyterlab');\n        const menu = new MainMenu(commands);\n        menu.id = 'jp-MainMenu';\n        menu.addClass('jp-scrollbar-tiny');\n        // Built menu from settings\n        if (registry) {\n            await Private.loadSettingsMenu(registry, (aMenu) => {\n                menu.addMenu(aMenu, { rank: aMenu.rank });\n            }, options => MainMenu.generateMenu(commands, options, trans), translator);\n        }\n        // Only add quit button if the back-end supports it by checking page config.\n        const quitButton = PageConfig.getOption('quitButton').toLowerCase();\n        menu.fileMenu.quitEntry = quitButton === 'true';\n        // Create the application menus.\n        createEditMenu(app, menu.editMenu, trans);\n        createFileMenu(app, menu.fileMenu, router, trans);\n        createKernelMenu(app, menu.kernelMenu, trans);\n        createRunMenu(app, menu.runMenu, trans);\n        createViewMenu(app, menu.viewMenu, trans);\n        // The tabs menu relies on lab shell functionality.\n        if (labShell) {\n            createTabsMenu(app, menu.tabsMenu, labShell, trans);\n        }\n        // Create commands to open the main application menus.\n        const activateMenu = (item) => {\n            menu.activeMenu = item;\n            menu.openActiveMenu();\n        };\n        commands.addCommand(CommandIDs.openEdit, {\n            label: trans.__('Open Edit Menu'),\n            execute: () => activateMenu(menu.editMenu)\n        });\n        commands.addCommand(CommandIDs.openFile, {\n            label: trans.__('Open File Menu'),\n            execute: () => activateMenu(menu.fileMenu)\n        });\n        commands.addCommand(CommandIDs.openKernel, {\n            label: trans.__('Open Kernel Menu'),\n            execute: () => activateMenu(menu.kernelMenu)\n        });\n        commands.addCommand(CommandIDs.openRun, {\n            label: trans.__('Open Run Menu'),\n            execute: () => activateMenu(menu.runMenu)\n        });\n        commands.addCommand(CommandIDs.openView, {\n            label: trans.__('Open View Menu'),\n            execute: () => activateMenu(menu.viewMenu)\n        });\n        commands.addCommand(CommandIDs.openSettings, {\n            label: trans.__('Open Settings Menu'),\n            execute: () => activateMenu(menu.settingsMenu)\n        });\n        commands.addCommand(CommandIDs.openTabs, {\n            label: trans.__('Open Tabs Menu'),\n            execute: () => activateMenu(menu.tabsMenu)\n        });\n        commands.addCommand(CommandIDs.openHelp, {\n            label: trans.__('Open Help Menu'),\n            execute: () => activateMenu(menu.helpMenu)\n        });\n        commands.addCommand(CommandIDs.openFirst, {\n            label: trans.__('Open First Menu'),\n            execute: () => {\n                menu.activeIndex = 0;\n                menu.openActiveMenu();\n            }\n        });\n        if (palette) {\n            // Add some of the commands defined here to the command palette.\n            palette.addItem({\n                command: CommandIDs.shutdown,\n                category: trans.__('Main Area')\n            });\n            palette.addItem({\n                command: CommandIDs.logout,\n                category: trans.__('Main Area')\n            });\n            palette.addItem({\n                command: CommandIDs.shutdownAllKernels,\n                category: trans.__('Kernel Operations')\n            });\n            palette.addItem({\n                command: CommandIDs.activatePreviouslyUsedTab,\n                category: trans.__('Main Area')\n            });\n        }\n        app.shell.add(menu, 'menu', { rank: 100 });\n        return menu;\n    }\n};\n/**\n * Create the basic `Edit` menu.\n */\nexport function createEditMenu(app, menu, trans) {\n    const commands = app.commands;\n    // Add the undo/redo commands the the Edit menu.\n    commands.addCommand(CommandIDs.undo, {\n        label: trans.__('Undo'),\n        isEnabled: Private.delegateEnabled(app, menu.undoers, 'undo'),\n        execute: Private.delegateExecute(app, menu.undoers, 'undo')\n    });\n    commands.addCommand(CommandIDs.redo, {\n        label: trans.__('Redo'),\n        isEnabled: Private.delegateEnabled(app, menu.undoers, 'redo'),\n        execute: Private.delegateExecute(app, menu.undoers, 'redo')\n    });\n    // Add the clear commands to the Edit menu.\n    commands.addCommand(CommandIDs.clearCurrent, {\n        label: () => {\n            const enabled = Private.delegateEnabled(app, menu.clearers, 'clearCurrent')();\n            let localizedLabel = trans.__('Clear');\n            if (enabled) {\n                localizedLabel = Private.delegateLabel(app, menu.clearers, 'clearCurrentLabel');\n            }\n            return localizedLabel;\n        },\n        isEnabled: Private.delegateEnabled(app, menu.clearers, 'clearCurrent'),\n        execute: Private.delegateExecute(app, menu.clearers, 'clearCurrent')\n    });\n    commands.addCommand(CommandIDs.clearAll, {\n        label: () => {\n            const enabled = Private.delegateEnabled(app, menu.clearers, 'clearAll')();\n            let localizedLabel = trans.__('Clear All');\n            if (enabled) {\n                localizedLabel = Private.delegateLabel(app, menu.clearers, 'clearAllLabel');\n            }\n            return localizedLabel;\n        },\n        isEnabled: Private.delegateEnabled(app, menu.clearers, 'clearAll'),\n        execute: Private.delegateExecute(app, menu.clearers, 'clearAll')\n    });\n    commands.addCommand(CommandIDs.goToLine, {\n        label: trans.__('Go to Line…'),\n        isEnabled: Private.delegateEnabled(app, menu.goToLiners, 'goToLine'),\n        execute: Private.delegateExecute(app, menu.goToLiners, 'goToLine')\n    });\n}\n/**\n * Create the basic `File` menu.\n */\nexport function createFileMenu(app, menu, router, trans) {\n    const commands = app.commands;\n    // Add a delegator command for closing and cleaning up an activity.\n    // This one is a bit different, in that we consider it enabled\n    // even if it cannot find a delegate for the activity.\n    // In that case, we instead call the application `close` command.\n    commands.addCommand(CommandIDs.closeAndCleanup, {\n        label: () => {\n            const localizedLabel = Private.delegateLabel(app, menu.closeAndCleaners, 'closeAndCleanupLabel');\n            return localizedLabel ? localizedLabel : trans.__('Close and Shutdown');\n        },\n        isEnabled: () => !!app.shell.currentWidget && !!app.shell.currentWidget.title.closable,\n        execute: () => {\n            // Check if we have a registered delegate. If so, call that.\n            if (Private.delegateEnabled(app, menu.closeAndCleaners, 'closeAndCleanup')()) {\n                return Private.delegateExecute(app, menu.closeAndCleaners, 'closeAndCleanup')();\n            }\n            // If we have no delegate, call the top-level application close.\n            return app.commands.execute('application:close');\n        }\n    });\n    // Add a delegator command for creating a console for an activity.\n    commands.addCommand(CommandIDs.createConsole, {\n        label: () => {\n            const localizedLabel = Private.delegateLabel(app, menu.consoleCreators, 'createConsoleLabel');\n            return localizedLabel\n                ? localizedLabel\n                : trans.__('New Console for Activity');\n        },\n        isEnabled: Private.delegateEnabled(app, menu.consoleCreators, 'createConsole'),\n        execute: Private.delegateExecute(app, menu.consoleCreators, 'createConsole')\n    });\n    commands.addCommand(CommandIDs.shutdown, {\n        label: trans.__('Shut Down'),\n        caption: trans.__('Shut down JupyterLab'),\n        isVisible: () => menu.quitEntry,\n        isEnabled: () => menu.quitEntry,\n        execute: () => {\n            return showDialog({\n                title: trans.__('Shutdown confirmation'),\n                body: trans.__('Please confirm you want to shut down JupyterLab.'),\n                buttons: [\n                    Dialog.cancelButton(),\n                    Dialog.warnButton({ label: trans.__('Shut Down') })\n                ]\n            }).then(result => {\n                if (result.button.accept) {\n                    const setting = ServerConnection.makeSettings();\n                    const apiURL = URLExt.join(setting.baseUrl, 'api/shutdown');\n                    return ServerConnection.makeRequest(apiURL, { method: 'POST' }, setting)\n                        .then(result => {\n                        if (result.ok) {\n                            // Close this window if the shutdown request has been successful\n                            const body = document.createElement('div');\n                            const p1 = document.createElement('p');\n                            p1.textContent = trans.__('You have shut down the Jupyter server. You can now close this tab.');\n                            const p2 = document.createElement('p');\n                            p2.textContent = trans.__('To use JupyterLab again, you will need to relaunch it.');\n                            body.appendChild(p1);\n                            body.appendChild(p2);\n                            void showDialog({\n                                title: trans.__('Server stopped'),\n                                body: new Widget({ node: body }),\n                                buttons: []\n                            });\n                            window.close();\n                        }\n                        else {\n                            throw new ServerConnection.ResponseError(result);\n                        }\n                    })\n                        .catch(data => {\n                        throw new ServerConnection.NetworkError(data);\n                    });\n                }\n            });\n        }\n    });\n    commands.addCommand(CommandIDs.logout, {\n        label: trans.__('Log Out'),\n        caption: trans.__('Log out of JupyterLab'),\n        isVisible: () => menu.quitEntry,\n        isEnabled: () => menu.quitEntry,\n        execute: () => {\n            router.navigate('/logout', { hard: true });\n        }\n    });\n}\n/**\n * Create the basic `Kernel` menu.\n */\nexport function createKernelMenu(app, menu, trans) {\n    const commands = app.commands;\n    commands.addCommand(CommandIDs.interruptKernel, {\n        label: trans.__('Interrupt Kernel'),\n        isEnabled: Private.delegateEnabled(app, menu.kernelUsers, 'interruptKernel'),\n        execute: Private.delegateExecute(app, menu.kernelUsers, 'interruptKernel')\n    });\n    commands.addCommand(CommandIDs.reconnectToKernel, {\n        label: trans.__('Reconnect to Kernel'),\n        isEnabled: Private.delegateEnabled(app, menu.kernelUsers, 'reconnectToKernel'),\n        execute: Private.delegateExecute(app, menu.kernelUsers, 'reconnectToKernel')\n    });\n    commands.addCommand(CommandIDs.restartKernel, {\n        label: trans.__('Restart Kernel…'),\n        isEnabled: Private.delegateEnabled(app, menu.kernelUsers, 'restartKernel'),\n        execute: Private.delegateExecute(app, menu.kernelUsers, 'restartKernel')\n    });\n    commands.addCommand(CommandIDs.restartKernelAndClear, {\n        label: () => {\n            const enabled = Private.delegateEnabled(app, menu.kernelUsers, 'restartKernelAndClear')();\n            let localizedLabel = trans.__('Restart Kernel and Clear…');\n            if (enabled) {\n                localizedLabel = Private.delegateLabel(app, menu.kernelUsers, 'restartKernelAndClearLabel');\n            }\n            return localizedLabel;\n        },\n        isEnabled: Private.delegateEnabled(app, menu.kernelUsers, 'restartKernelAndClear'),\n        execute: Private.delegateExecute(app, menu.kernelUsers, 'restartKernelAndClear')\n    });\n    commands.addCommand(CommandIDs.changeKernel, {\n        label: trans.__('Change Kernel…'),\n        isEnabled: Private.delegateEnabled(app, menu.kernelUsers, 'changeKernel'),\n        execute: Private.delegateExecute(app, menu.kernelUsers, 'changeKernel')\n    });\n    commands.addCommand(CommandIDs.shutdownKernel, {\n        label: trans.__('Shut Down Kernel'),\n        isEnabled: Private.delegateEnabled(app, menu.kernelUsers, 'shutdownKernel'),\n        execute: Private.delegateExecute(app, menu.kernelUsers, 'shutdownKernel')\n    });\n    commands.addCommand(CommandIDs.shutdownAllKernels, {\n        label: trans.__('Shut Down All Kernels…'),\n        isEnabled: () => {\n            return app.serviceManager.sessions.running().next() !== undefined;\n        },\n        execute: () => {\n            return showDialog({\n                title: trans.__('Shut Down All?'),\n                body: trans.__('Shut down all kernels?'),\n                buttons: [\n                    Dialog.cancelButton({ label: trans.__('Dismiss') }),\n                    Dialog.warnButton({ label: trans.__('Shut Down All') })\n                ]\n            }).then(result => {\n                if (result.button.accept) {\n                    return app.serviceManager.sessions.shutdownAll();\n                }\n            });\n        }\n    });\n}\n/**\n * Create the basic `View` menu.\n */\nexport function createViewMenu(app, menu, trans) {\n    const commands = app.commands;\n    commands.addCommand(CommandIDs.lineNumbering, {\n        label: trans.__('Show Line Numbers'),\n        isEnabled: Private.delegateEnabled(app, menu.editorViewers, 'toggleLineNumbers'),\n        isToggled: Private.delegateToggled(app, menu.editorViewers, 'lineNumbersToggled'),\n        execute: Private.delegateExecute(app, menu.editorViewers, 'toggleLineNumbers')\n    });\n    commands.addCommand(CommandIDs.matchBrackets, {\n        label: trans.__('Match Brackets'),\n        isEnabled: Private.delegateEnabled(app, menu.editorViewers, 'toggleMatchBrackets'),\n        isToggled: Private.delegateToggled(app, menu.editorViewers, 'matchBracketsToggled'),\n        execute: Private.delegateExecute(app, menu.editorViewers, 'toggleMatchBrackets')\n    });\n    commands.addCommand(CommandIDs.wordWrap, {\n        label: trans.__('Wrap Words'),\n        isEnabled: Private.delegateEnabled(app, menu.editorViewers, 'toggleWordWrap'),\n        isToggled: Private.delegateToggled(app, menu.editorViewers, 'wordWrapToggled'),\n        execute: Private.delegateExecute(app, menu.editorViewers, 'toggleWordWrap')\n    });\n}\n/**\n * Create the basic `Run` menu.\n */\nexport function createRunMenu(app, menu, trans) {\n    const commands = app.commands;\n    commands.addCommand(CommandIDs.run, {\n        label: () => {\n            const localizedLabel = Private.delegateLabel(app, menu.codeRunners, 'runLabel');\n            const enabled = Private.delegateEnabled(app, menu.codeRunners, 'run')();\n            return enabled ? localizedLabel : trans.__('Run Selected');\n        },\n        isEnabled: Private.delegateEnabled(app, menu.codeRunners, 'run'),\n        execute: Private.delegateExecute(app, menu.codeRunners, 'run')\n    });\n    commands.addCommand(CommandIDs.runAll, {\n        label: () => {\n            let localizedLabel = trans.__('Run All');\n            const enabled = Private.delegateEnabled(app, menu.codeRunners, 'runAll')();\n            if (enabled) {\n                localizedLabel = Private.delegateLabel(app, menu.codeRunners, 'runAllLabel');\n            }\n            return localizedLabel;\n        },\n        isEnabled: Private.delegateEnabled(app, menu.codeRunners, 'runAll'),\n        execute: Private.delegateExecute(app, menu.codeRunners, 'runAll')\n    });\n    commands.addCommand(CommandIDs.restartAndRunAll, {\n        label: () => {\n            let localizedLabel = trans.__('Restart Kernel and Run All');\n            const enabled = Private.delegateEnabled(app, menu.codeRunners, 'restartAndRunAll')();\n            if (enabled) {\n                localizedLabel = Private.delegateLabel(app, menu.codeRunners, 'restartAndRunAllLabel');\n            }\n            return localizedLabel;\n        },\n        isEnabled: Private.delegateEnabled(app, menu.codeRunners, 'restartAndRunAll'),\n        execute: Private.delegateExecute(app, menu.codeRunners, 'restartAndRunAll')\n    });\n}\n/**\n * Create the basic `Tabs` menu.\n */\nexport function createTabsMenu(app, menu, labShell, trans) {\n    const commands = app.commands;\n    // A list of the active tabs in the main area.\n    const tabGroup = [];\n    // A disposable for getting rid of the out-of-date tabs list.\n    let disposable;\n    // Command to activate a widget by id.\n    commands.addCommand(CommandIDs.activateById, {\n        label: args => {\n            const id = args['id'] || '';\n            const widget = find(app.shell.widgets('main'), w => w.id === id);\n            return (widget && widget.title.label) || '';\n        },\n        isToggled: args => {\n            const id = args['id'] || '';\n            return !!app.shell.currentWidget && app.shell.currentWidget.id === id;\n        },\n        execute: args => app.shell.activateById(args['id'] || '')\n    });\n    let previousId = '';\n    // Command to toggle between the current\n    // tab and the last modified tab.\n    commands.addCommand(CommandIDs.activatePreviouslyUsedTab, {\n        label: trans.__('Activate Previously Used Tab'),\n        isEnabled: () => !!previousId,\n        execute: () => commands.execute(CommandIDs.activateById, { id: previousId })\n    });\n    if (labShell) {\n        void app.restored.then(() => {\n            // Iterate over the current widgets in the\n            // main area, and add them to the tab group\n            // of the menu.\n            const populateTabs = () => {\n                // remove the previous tab list\n                if (disposable && !disposable.isDisposed) {\n                    disposable.dispose();\n                }\n                tabGroup.length = 0;\n                let isPreviouslyUsedTabAttached = false;\n                each(app.shell.widgets('main'), widget => {\n                    if (widget.id === previousId) {\n                        isPreviouslyUsedTabAttached = true;\n                    }\n                    tabGroup.push({\n                        command: CommandIDs.activateById,\n                        args: { id: widget.id }\n                    });\n                });\n                disposable = menu.addGroup(tabGroup, 1);\n                previousId = isPreviouslyUsedTabAttached ? previousId : '';\n            };\n            populateTabs();\n            labShell.layoutModified.connect(() => {\n                populateTabs();\n            });\n            // Update the ID of the previous active tab if a new tab is selected.\n            labShell.currentChanged.connect((_, args) => {\n                const widget = args.oldValue;\n                if (!widget) {\n                    return;\n                }\n                previousId = widget.id;\n            });\n        });\n    }\n}\nexport default plugin;\n/**\n * A namespace for Private data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * Return the first value of the iterable that satisfies the predicate\n     * function.\n     */\n    function find(it, predicate) {\n        for (const value of it) {\n            if (predicate(value)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * A utility function that delegates a portion of a label to an IMenuExtender.\n     */\n    function delegateLabel(app, s, label) {\n        const widget = app.shell.currentWidget;\n        const extender = widget\n            ? find(s, value => value.tracker.has(widget))\n            : undefined;\n        if (!extender) {\n            return '';\n        }\n        else {\n            const count = extender.tracker.size;\n            // Coerce the result to be a string. When Typedoc is updated to use\n            // Typescript 2.8, we can possibly use conditional types to get Typescript\n            // to recognize this is a string.\n            return extender[label](count);\n        }\n    }\n    Private.delegateLabel = delegateLabel;\n    /**\n     * A utility function that delegates command execution\n     * to an IMenuExtender.\n     */\n    function delegateExecute(app, s, executor) {\n        return () => {\n            const widget = app.shell.currentWidget;\n            const extender = widget\n                ? find(s, value => value.tracker.has(widget))\n                : undefined;\n            if (!extender) {\n                return Promise.resolve(void 0);\n            }\n            // Coerce the result to be a function. When Typedoc is updated to use\n            // Typescript 2.8, we can possibly use conditional types to get Typescript\n            // to recognize this is a function.\n            const f = extender[executor];\n            return f(widget);\n        };\n    }\n    Private.delegateExecute = delegateExecute;\n    /**\n     * A utility function that delegates whether a command is enabled\n     * to an IMenuExtender.\n     */\n    function delegateEnabled(app, s, executor) {\n        return () => {\n            const widget = app.shell.currentWidget;\n            const extender = widget\n                ? find(s, value => value.tracker.has(widget))\n                : undefined;\n            return (!!extender &&\n                !!extender[executor] &&\n                (extender.isEnabled && widget ? extender.isEnabled(widget) : true));\n        };\n    }\n    Private.delegateEnabled = delegateEnabled;\n    /**\n     * A utility function that delegates whether a command is toggled\n     * for an IMenuExtender.\n     */\n    function delegateToggled(app, s, toggled) {\n        return () => {\n            const widget = app.shell.currentWidget;\n            const extender = widget\n                ? find(s, value => value.tracker.has(widget))\n                : undefined;\n            // Coerce extender[toggled] to be a function. When Typedoc is updated to use\n            // Typescript 2.8, we can possibly use conditional types to get Typescript\n            // to recognize this is a function.\n            return (!!extender &&\n                !!extender[toggled] &&\n                !!widget &&\n                !!extender[toggled](widget));\n        };\n    }\n    Private.delegateToggled = delegateToggled;\n    async function displayInformation(trans) {\n        const result = await showDialog({\n            title: trans.__('Information'),\n            body: trans.__('Menu customization has changed. You will need to reload JupyterLab to see the changes.'),\n            buttons: [\n                Dialog.cancelButton(),\n                Dialog.okButton({ label: trans.__('Reload') })\n            ]\n        });\n        if (result.button.accept) {\n            location.reload();\n        }\n    }\n    async function loadSettingsMenu(registry, addMenu, menuFactory, translator) {\n        var _a;\n        const trans = translator.load('jupyterlab');\n        let canonical;\n        let loaded = {};\n        /**\n         * Populate the plugin's schema defaults.\n         */\n        function populate(schema) {\n            var _a, _b;\n            loaded = {};\n            schema.properties.menus.default = Object.keys(registry.plugins)\n                .map(plugin => {\n                var _a, _b;\n                const menus = (_b = (_a = registry.plugins[plugin].schema['jupyter.lab.menus']) === null || _a === void 0 ? void 0 : _a.main) !== null && _b !== void 0 ? _b : [];\n                loaded[plugin] = menus;\n                return menus;\n            })\n                .concat([\n                (_b = (_a = schema['jupyter.lab.menus']) === null || _a === void 0 ? void 0 : _a.main) !== null && _b !== void 0 ? _b : [],\n                schema.properties.menus.default\n            ])\n                .reduceRight((acc, val) => SettingRegistry.reconcileMenus(acc, val, true), []) // flatten one level\n                .sort((a, b) => { var _a, _b; return ((_a = a.rank) !== null && _a !== void 0 ? _a : Infinity) - ((_b = b.rank) !== null && _b !== void 0 ? _b : Infinity); });\n        }\n        // Transform the plugin object to return different schema than the default.\n        registry.transform(PLUGIN_ID, {\n            compose: plugin => {\n                var _a, _b, _c, _d;\n                // Only override the canonical schema the first time.\n                if (!canonical) {\n                    canonical = JSONExt.deepCopy(plugin.schema);\n                    populate(canonical);\n                }\n                const defaults = (_c = (_b = (_a = canonical.properties) === null || _a === void 0 ? void 0 : _a.menus) === null || _b === void 0 ? void 0 : _b.default) !== null && _c !== void 0 ? _c : [];\n                const user = {\n                    menus: (_d = plugin.data.user.menus) !== null && _d !== void 0 ? _d : []\n                };\n                const composite = {\n                    menus: SettingRegistry.reconcileMenus(defaults, user.menus)\n                };\n                plugin.data = { composite, user };\n                return plugin;\n            },\n            fetch: plugin => {\n                // Only override the canonical schema the first time.\n                if (!canonical) {\n                    canonical = JSONExt.deepCopy(plugin.schema);\n                    populate(canonical);\n                }\n                return {\n                    data: plugin.data,\n                    id: plugin.id,\n                    raw: plugin.raw,\n                    schema: canonical,\n                    version: plugin.version\n                };\n            }\n        });\n        // Repopulate the canonical variable after the setting registry has\n        // preloaded all initial plugins.\n        canonical = null;\n        const settings = await registry.load(PLUGIN_ID);\n        const currentMenus = (_a = JSONExt.deepCopy(settings.composite.menus)) !== null && _a !== void 0 ? _a : [];\n        const menus = new Array();\n        // Create menu for non-disabled element\n        MenuFactory.createMenus(currentMenus\n            .filter(menu => !menu.disabled)\n            .map(menu => {\n            var _a;\n            return Object.assign(Object.assign({}, menu), { items: SettingRegistry.filterDisabledItems((_a = menu.items) !== null && _a !== void 0 ? _a : []) });\n        }), menuFactory).forEach(menu => {\n            menus.push(menu);\n            addMenu(menu);\n        });\n        settings.changed.connect(() => {\n            var _a;\n            // As extension may change menu through API, prompt the user to reload if the\n            // menu has been updated.\n            const newMenus = (_a = settings.composite.menus) !== null && _a !== void 0 ? _a : [];\n            if (!JSONExt.deepEqual(currentMenus, newMenus)) {\n                void displayInformation(trans);\n            }\n        });\n        registry.pluginChanged.connect(async (sender, plugin) => {\n            var _a, _b, _c;\n            if (plugin !== PLUGIN_ID) {\n                // If the plugin changed its menu.\n                const oldMenus = (_a = loaded[plugin]) !== null && _a !== void 0 ? _a : [];\n                const newMenus = (_c = (_b = registry.plugins[plugin].schema['jupyter.lab.menus']) === null || _b === void 0 ? void 0 : _b.main) !== null && _c !== void 0 ? _c : [];\n                if (!JSONExt.deepEqual(oldMenus, newMenus)) {\n                    if (loaded[plugin]) {\n                        // The plugin has changed, request the user to reload the UI - this should not happen\n                        await displayInformation(trans);\n                    }\n                    else {\n                        // The plugin was not yet loaded when the menu was built => update the menu\n                        loaded[plugin] = JSONExt.deepCopy(newMenus);\n                        // Merge potential disabled state\n                        const toAdd = SettingRegistry.reconcileMenus(newMenus, currentMenus, false, false)\n                            .filter(menu => !menu.disabled)\n                            .map(menu => {\n                            var _a;\n                            return Object.assign(Object.assign({}, menu), { items: SettingRegistry.filterDisabledItems((_a = menu.items) !== null && _a !== void 0 ? _a : []) });\n                        });\n                        MenuFactory.updateMenus(menus, toAdd, menuFactory).forEach(menu => {\n                            addMenu(menu);\n                        });\n                    }\n                }\n            }\n        });\n    }\n    Private.loadSettingsMenu = loadSettingsMenu;\n})(Private || (Private = {}));\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}