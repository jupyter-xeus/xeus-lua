{"version":3,"sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/docprovider/lib/awareness.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/docprovider/lib/mock.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/docprovider/lib/tokens.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/y-websocket/src/y-websocket.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/y-protocols/auth.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lib0/url.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/docprovider/lib/yprovider.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lib0/environment.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lib0/conditions.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lib0/map.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lib0/storage.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lib0/string.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/process/browser.js"],"names":["moonsOfJupyter","getAnonymousUserName","Math","floor","random","length","userColors","getRandomColor","ProviderMock","requestInitialContent","Promise","resolve","putInitializedState","acquireLock","releaseLock","lock","destroy","setPath","path","IDocumentProviderFactory","Token","messageHandlers","encoder","decoder","provider","emitSynced","messageType","syncMessageType","sync","doc","synced","awareness","Array","from","getStates","keys","decoding","y","permissionDeniedHandler","reason","console","warn","url","readMessage","buf","messageHandler","error","setupWS","shouldConnect","ws","websocket","_WS","binaryType","wsconnecting","wsconnected","onmessage","event","wsLastMessageReceived","time","Uint8Array","data","send","onclose","filter","client","clientID","emit","status","wsUnsuccessfulReconnects","setTimeout","math","onopen","getLocalState","encoderAwarenessState","broadcastMessage","bcconnected","mux","bcChannel","WebsocketProvider","constructor","serverUrl","roomname","connect","params","WebSocketPolyfill","WebSocket","resyncInterval","super","slice","encodedParams","object","val","key","encodeURIComponent","join","this","mutex","_synced","_resyncInterval","setInterval","_bcSubscriber","_updateHandler","update","origin","on","_awarenessUpdateHandler","added","updated","removed","changedClients","concat","_beforeUnloadHandler","window","addEventListener","process","_checkInterval","close","messageReconnectTimeout","state","clearInterval","disconnect","removeEventListener","off","connectBc","encoderSync","encoderState","encoderAwarenessQuery","disconnectBc","Map","WebSocketProviderWithLocks","options","contentType","ymodel","ydoc","_currentLockRequest","_initialContentRequest","_path","_contentType","_serverUrl","color","name","currState","setLocalStateField","timestamp","lockRequest","initialContent","byteLength","initialContentRequest","_isInitialized","_onConnectionStatus","bind","newPath","escapedPath","unescape","i","codePointAt","_sendMessage","PromiseDelegate","_a","promise","intervalID","reject","_resolve","_reject","_finally","then","message","once","isNode","release","test","isBrowser","navigator","platform","args","computeParams","undefined","map","pargs","argv","currParamName","parg","set","push","location","search","split","forEach","kv","value","string","getParam","defaultVal","get","getVariable","v","toUpperCase","storage","has","hasParam","create","copy","m","r","k","setIfUndefined","createT","f","res","any","_localStorage","setItem","newValue","getItem","usePolyfill","localStorage","e","varStorage","onChange","eventHandler","fromCharCode","String","trimLeftRegex","fromCodePoint","fromCamelCaseRegex","fromCamelCase","s","separator","replace","trimLeft","match","toLowerCase","utf8TextEncoder","TextEncoder","encodeUtf8","str","encode","encodedString","len","utf8TextDecoder","TextDecoder","fatal","ignoreBOM","decode","cachedSetTimeout","cachedClearTimeout","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","call","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","array","noop","nextTick","arguments","prototype","apply","title","browser","env","version","versions","addListener","removeListener","removeAllListeners","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask"],"mappings":"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","file":"5241.d4a70b6c438d3c5f632c.js","sourcesContent":["// From https://en.wikipedia.org/wiki/Moons_of_Jupiter\nexport const moonsOfJupyter = [\n    'Metis',\n    'Adrastea',\n    'Amalthea',\n    'Thebe',\n    'Io',\n    'Europa',\n    'Ganymede',\n    'Callisto',\n    'Themisto',\n    'Leda',\n    'Ersa',\n    'Pandia',\n    'Himalia',\n    'Lysithea',\n    'Elara',\n    'Dia',\n    'Carpo',\n    'Valetudo',\n    'Euporie',\n    'Eupheme',\n    // 'S/2003 J 18',\n    // 'S/2010 J 2',\n    'Helike',\n    // 'S/2003 J 16',\n    // 'S/2003 J 2',\n    'Euanthe',\n    // 'S/2017 J 7',\n    'Hermippe',\n    'Praxidike',\n    'Thyone',\n    'Thelxinoe',\n    // 'S/2017 J 3',\n    'Ananke',\n    'Mneme',\n    // 'S/2016 J 1',\n    'Orthosie',\n    'Harpalyke',\n    'Iocaste',\n    // 'S/2017 J 9',\n    // 'S/2003 J 12',\n    // 'S/2003 J 4',\n    'Erinome',\n    'Aitne',\n    'Herse',\n    'Taygete',\n    // 'S/2017 J 2',\n    // 'S/2017 J 6',\n    'Eukelade',\n    'Carme',\n    // 'S/2003 J 19',\n    'Isonoe',\n    // 'S/2003 J 10',\n    'Autonoe',\n    'Philophrosyne',\n    'Cyllene',\n    'Pasithee',\n    // 'S/2010 J 1',\n    'Pasiphae',\n    'Sponde',\n    // 'S/2017 J 8',\n    'Eurydome',\n    // 'S/2017 J 5',\n    'Kalyke',\n    'Hegemone',\n    'Kale',\n    'Kallichore',\n    // 'S/2011 J 1',\n    // 'S/2017 J 1',\n    'Chaldene',\n    'Arche',\n    'Eirene',\n    'Kore',\n    // 'S/2011 J 2',\n    // 'S/2003 J 9',\n    'Megaclite',\n    'Aoede',\n    // 'S/2003 J 23',\n    'Callirrhoe',\n    'Sinope'\n];\n/**\n * Get a random user-name based on the moons of Jupyter.\n * This function returns names like \"Anonymous Io\" or \"Anonymous Metis\".\n */\nexport const getAnonymousUserName = () => 'Anonymous ' +\n    moonsOfJupyter[Math.floor(Math.random() * moonsOfJupyter.length)];\nexport const userColors = [\n    '#12A0D3',\n    '#17AB30',\n    '#CC8500',\n    '#A79011',\n    '#ee6352',\n    '#609DA9',\n    '#4BA749',\n    '#00A1B3'\n];\nexport const getRandomColor = () => userColors[Math.floor(Math.random() * userColors.length)];\n//# sourceMappingURL=awareness.js.map","export class ProviderMock {\n    requestInitialContent() {\n        return Promise.resolve(false);\n    }\n    putInitializedState() {\n        /* nop */\n    }\n    acquireLock() {\n        return Promise.resolve(0);\n    }\n    releaseLock(lock) {\n        /* nop */\n    }\n    destroy() {\n        /* nop */\n    }\n    setPath(path) {\n        /* nop */\n    }\n}\n//# sourceMappingURL=mock.js.map","import { Token } from '@lumino/coreutils';\n/**\n * The default document provider token.\n */\nexport const IDocumentProviderFactory = new Token('@jupyterlab/docprovider:IDocumentProviderFactory');\n//# sourceMappingURL=tokens.js.map","/*\nUnlike stated in the LICENSE file, it is not necessary to include the copyright notice and permission notice when you copy code from this file.\n*/\n\n/**\n * @module provider/websocket\n */\n\n/* eslint-env browser */\n\nimport * as Y from 'yjs' // eslint-disable-line\nimport * as bc from 'lib0/broadcastchannel'\nimport * as time from 'lib0/time'\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as syncProtocol from 'y-protocols/sync'\nimport * as authProtocol from 'y-protocols/auth'\nimport * as awarenessProtocol from 'y-protocols/awareness'\nimport * as mutex from 'lib0/mutex'\nimport { Observable } from 'lib0/observable'\nimport * as math from 'lib0/math'\nimport * as url from 'lib0/url'\n\nconst messageSync = 0\nconst messageQueryAwareness = 3\nconst messageAwareness = 1\nconst messageAuth = 2\n\n/**\n *                       encoder,          decoder,          provider,          emitSynced, messageType\n * @type {Array<function(encoding.Encoder, decoding.Decoder, WebsocketProvider, boolean,    number):void>}\n */\nconst messageHandlers = []\n\nmessageHandlers[messageSync] = (encoder, decoder, provider, emitSynced, messageType) => {\n  encoding.writeVarUint(encoder, messageSync)\n  const syncMessageType = syncProtocol.readSyncMessage(decoder, encoder, provider.doc, provider)\n  if (emitSynced && syncMessageType === syncProtocol.messageYjsSyncStep2 && !provider.synced) {\n    provider.synced = true\n  }\n}\n\nmessageHandlers[messageQueryAwareness] = (encoder, decoder, provider, emitSynced, messageType) => {\n  encoding.writeVarUint(encoder, messageAwareness)\n  encoding.writeVarUint8Array(encoder, awarenessProtocol.encodeAwarenessUpdate(provider.awareness, Array.from(provider.awareness.getStates().keys())))\n}\n\nmessageHandlers[messageAwareness] = (encoder, decoder, provider, emitSynced, messageType) => {\n  awarenessProtocol.applyAwarenessUpdate(provider.awareness, decoding.readVarUint8Array(decoder), provider)\n}\n\nmessageHandlers[messageAuth] = (encoder, decoder, provider, emitSynced, messageType) => {\n  authProtocol.readAuthMessage(decoder, provider.doc, permissionDeniedHandler)\n}\n\nconst reconnectTimeoutBase = 1200\nconst maxReconnectTimeout = 2500\n// @todo - this should depend on awareness.outdatedTime\nconst messageReconnectTimeout = 30000\n\n/**\n * @param {WebsocketProvider} provider\n * @param {string} reason\n */\nconst permissionDeniedHandler = (provider, reason) => console.warn(`Permission denied to access ${provider.url}.\\n${reason}`)\n\n/**\n * @param {WebsocketProvider} provider\n * @param {Uint8Array} buf\n * @param {boolean} emitSynced\n * @return {encoding.Encoder}\n */\nconst readMessage = (provider, buf, emitSynced) => {\n  const decoder = decoding.createDecoder(buf)\n  const encoder = encoding.createEncoder()\n  const messageType = decoding.readVarUint(decoder)\n  const messageHandler = provider.messageHandlers[messageType]\n  if (/** @type {any} */ (messageHandler)) {\n    messageHandler(encoder, decoder, provider, emitSynced, messageType)\n  } else {\n    console.error('Unable to compute message')\n  }\n  return encoder\n}\n\n/**\n * @param {WebsocketProvider} provider\n */\nconst setupWS = provider => {\n  if (provider.shouldConnect && provider.ws === null) {\n    const websocket = new provider._WS(provider.url)\n    websocket.binaryType = 'arraybuffer'\n    provider.ws = websocket\n    provider.wsconnecting = true\n    provider.wsconnected = false\n    provider.synced = false\n\n    websocket.onmessage = event => {\n      provider.wsLastMessageReceived = time.getUnixTime()\n      const encoder = readMessage(provider, new Uint8Array(event.data), true)\n      if (encoding.length(encoder) > 1) {\n        websocket.send(encoding.toUint8Array(encoder))\n      }\n    }\n    websocket.onclose = () => {\n      provider.ws = null\n      provider.wsconnecting = false\n      if (provider.wsconnected) {\n        provider.wsconnected = false\n        provider.synced = false\n        // update awareness (all users except local left)\n        awarenessProtocol.removeAwarenessStates(provider.awareness, Array.from(provider.awareness.getStates().keys()).filter(client => client !== provider.doc.clientID), provider)\n        provider.emit('status', [{\n          status: 'disconnected'\n        }])\n      } else {\n        provider.wsUnsuccessfulReconnects++\n      }\n      // Start with no reconnect timeout and increase timeout by\n      // log10(wsUnsuccessfulReconnects).\n      // The idea is to increase reconnect timeout slowly and have no reconnect\n      // timeout at the beginning (log(1) = 0)\n      setTimeout(setupWS, math.min(math.log10(provider.wsUnsuccessfulReconnects + 1) * reconnectTimeoutBase, maxReconnectTimeout), provider)\n    }\n    websocket.onopen = () => {\n      provider.wsLastMessageReceived = time.getUnixTime()\n      provider.wsconnecting = false\n      provider.wsconnected = true\n      provider.wsUnsuccessfulReconnects = 0\n      provider.emit('status', [{\n        status: 'connected'\n      }])\n      // always send sync step 1 when connected\n      const encoder = encoding.createEncoder()\n      encoding.writeVarUint(encoder, messageSync)\n      syncProtocol.writeSyncStep1(encoder, provider.doc)\n      websocket.send(encoding.toUint8Array(encoder))\n      // broadcast local awareness state\n      if (provider.awareness.getLocalState() !== null) {\n        const encoderAwarenessState = encoding.createEncoder()\n        encoding.writeVarUint(encoderAwarenessState, messageAwareness)\n        encoding.writeVarUint8Array(encoderAwarenessState, awarenessProtocol.encodeAwarenessUpdate(provider.awareness, [provider.doc.clientID]))\n        websocket.send(encoding.toUint8Array(encoderAwarenessState))\n      }\n    }\n\n    provider.emit('status', [{\n      status: 'connecting'\n    }])\n  }\n}\n\n/**\n * @param {WebsocketProvider} provider\n * @param {ArrayBuffer} buf\n */\nconst broadcastMessage = (provider, buf) => {\n  if (provider.wsconnected) {\n    /** @type {WebSocket} */ (provider.ws).send(buf)\n  }\n  if (provider.bcconnected) {\n    provider.mux(() => {\n      bc.publish(provider.bcChannel, buf)\n    })\n  }\n}\n\n/**\n * Websocket Provider for Yjs. Creates a websocket connection to sync the shared document.\n * The document name is attached to the provided url. I.e. the following example\n * creates a websocket connection to http://localhost:1234/my-document-name\n *\n * @example\n *   import * as Y from 'yjs'\n *   import { WebsocketProvider } from 'y-websocket'\n *   const doc = new Y.Doc()\n *   const provider = new WebsocketProvider('http://localhost:1234', 'my-document-name', doc)\n *\n * @extends {Observable<string>}\n */\nexport class WebsocketProvider extends Observable {\n  /**\n   * @param {string} serverUrl\n   * @param {string} roomname\n   * @param {Y.Doc} doc\n   * @param {object} [opts]\n   * @param {boolean} [opts.connect]\n   * @param {awarenessProtocol.Awareness} [opts.awareness]\n   * @param {Object<string,string>} [opts.params]\n   * @param {typeof WebSocket} [opts.WebSocketPolyfill] Optionall provide a WebSocket polyfill\n   * @param {number} [opts.resyncInterval] Request server state every `resyncInterval` milliseconds\n   */\n  constructor (serverUrl, roomname, doc, { connect = true, awareness = new awarenessProtocol.Awareness(doc), params = {}, WebSocketPolyfill = WebSocket, resyncInterval = -1 } = {}) {\n    super()\n    // ensure that url is always ends with /\n    while (serverUrl[serverUrl.length - 1] === '/') {\n      serverUrl = serverUrl.slice(0, serverUrl.length - 1)\n    }\n    const encodedParams = url.encodeQueryParams(params)\n    this.bcChannel = serverUrl + '/' + roomname\n    this.url = serverUrl + '/' + roomname + (encodedParams.length === 0 ? '' : '?' + encodedParams)\n    this.roomname = roomname\n    this.doc = doc\n    this._WS = WebSocketPolyfill\n    this.awareness = awareness\n    this.wsconnected = false\n    this.wsconnecting = false\n    this.bcconnected = false\n    this.wsUnsuccessfulReconnects = 0\n    this.messageHandlers = messageHandlers.slice()\n    this.mux = mutex.createMutex()\n    /**\n     * @type {boolean}\n     */\n    this._synced = false\n    /**\n     * @type {WebSocket?}\n     */\n    this.ws = null\n    this.wsLastMessageReceived = 0\n    /**\n     * Whether to connect to other peers or not\n     * @type {boolean}\n     */\n    this.shouldConnect = connect\n\n    /**\n     * @type {number}\n     */\n    this._resyncInterval = 0\n    if (resyncInterval > 0) {\n      this._resyncInterval = /** @type {any} */ (setInterval(() => {\n        if (this.ws) {\n          // resend sync step 1\n          const encoder = encoding.createEncoder()\n          encoding.writeVarUint(encoder, messageSync)\n          syncProtocol.writeSyncStep1(encoder, doc)\n          this.ws.send(encoding.toUint8Array(encoder))\n        }\n      }, resyncInterval))\n    }\n\n    /**\n     * @param {ArrayBuffer} data\n     */\n    this._bcSubscriber = data => {\n      this.mux(() => {\n        const encoder = readMessage(this, new Uint8Array(data), false)\n        if (encoding.length(encoder) > 1) {\n          bc.publish(this.bcChannel, encoding.toUint8Array(encoder))\n        }\n      })\n    }\n    /**\n     * Listens to Yjs updates and sends them to remote peers (ws and broadcastchannel)\n     * @param {Uint8Array} update\n     * @param {any} origin\n     */\n    this._updateHandler = (update, origin) => {\n      if (origin !== this) {\n        const encoder = encoding.createEncoder()\n        encoding.writeVarUint(encoder, messageSync)\n        syncProtocol.writeUpdate(encoder, update)\n        broadcastMessage(this, encoding.toUint8Array(encoder))\n      }\n    }\n    this.doc.on('update', this._updateHandler)\n    /**\n     * @param {any} changed\n     * @param {any} origin\n     */\n    this._awarenessUpdateHandler = ({ added, updated, removed }, origin) => {\n      const changedClients = added.concat(updated).concat(removed)\n      const encoder = encoding.createEncoder()\n      encoding.writeVarUint(encoder, messageAwareness)\n      encoding.writeVarUint8Array(encoder, awarenessProtocol.encodeAwarenessUpdate(awareness, changedClients))\n      broadcastMessage(this, encoding.toUint8Array(encoder))\n    }\n    this._beforeUnloadHandler = () => {\n      awarenessProtocol.removeAwarenessStates(this.awareness, [doc.clientID], 'window unload')\n    }\n    if (typeof window !== 'undefined') {\n      window.addEventListener('beforeunload', this._beforeUnloadHandler)\n    } else if (typeof process !== 'undefined') {\n      process.on('exit', () => this._beforeUnloadHandler)\n    }\n    awareness.on('update', this._awarenessUpdateHandler)\n    this._checkInterval = /** @type {any} */ (setInterval(() => {\n      if (this.wsconnected && messageReconnectTimeout < time.getUnixTime() - this.wsLastMessageReceived) {\n        // no message received in a long time - not even your own awareness\n        // updates (which are updated every 15 seconds)\n        /** @type {WebSocket} */ (this.ws).close()\n      }\n    }, messageReconnectTimeout / 10))\n    if (connect) {\n      this.connect()\n    }\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get synced () {\n    return this._synced\n  }\n\n  set synced (state) {\n    if (this._synced !== state) {\n      this._synced = state\n      this.emit('synced', [state])\n      this.emit('sync', [state])\n    }\n  }\n\n  destroy () {\n    if (this._resyncInterval !== 0) {\n      clearInterval(this._resyncInterval)\n    }\n    clearInterval(this._checkInterval)\n    this.disconnect()\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('beforeunload', this._beforeUnloadHandler)\n    } else if (typeof process !== 'undefined') {\n      process.off('exit', () => this._beforeUnloadHandler)\n    }\n    this.awareness.off('update', this._awarenessUpdateHandler)\n    this.doc.off('update', this._updateHandler)\n    super.destroy()\n  }\n\n  connectBc () {\n    if (!this.bcconnected) {\n      bc.subscribe(this.bcChannel, this._bcSubscriber)\n      this.bcconnected = true\n    }\n    // send sync step1 to bc\n    this.mux(() => {\n      // write sync step 1\n      const encoderSync = encoding.createEncoder()\n      encoding.writeVarUint(encoderSync, messageSync)\n      syncProtocol.writeSyncStep1(encoderSync, this.doc)\n      bc.publish(this.bcChannel, encoding.toUint8Array(encoderSync))\n      // broadcast local state\n      const encoderState = encoding.createEncoder()\n      encoding.writeVarUint(encoderState, messageSync)\n      syncProtocol.writeSyncStep2(encoderState, this.doc)\n      bc.publish(this.bcChannel, encoding.toUint8Array(encoderState))\n      // write queryAwareness\n      const encoderAwarenessQuery = encoding.createEncoder()\n      encoding.writeVarUint(encoderAwarenessQuery, messageQueryAwareness)\n      bc.publish(this.bcChannel, encoding.toUint8Array(encoderAwarenessQuery))\n      // broadcast local awareness state\n      const encoderAwarenessState = encoding.createEncoder()\n      encoding.writeVarUint(encoderAwarenessState, messageAwareness)\n      encoding.writeVarUint8Array(encoderAwarenessState, awarenessProtocol.encodeAwarenessUpdate(this.awareness, [this.doc.clientID]))\n      bc.publish(this.bcChannel, encoding.toUint8Array(encoderAwarenessState))\n    })\n  }\n\n  disconnectBc () {\n    // broadcast message with local awareness state set to null (indicating disconnect)\n    const encoder = encoding.createEncoder()\n    encoding.writeVarUint(encoder, messageAwareness)\n    encoding.writeVarUint8Array(encoder, awarenessProtocol.encodeAwarenessUpdate(this.awareness, [this.doc.clientID], new Map()))\n    broadcastMessage(this, encoding.toUint8Array(encoder))\n    if (this.bcconnected) {\n      bc.unsubscribe(this.bcChannel, this._bcSubscriber)\n      this.bcconnected = false\n    }\n  }\n\n  disconnect () {\n    this.shouldConnect = false\n    this.disconnectBc()\n    if (this.ws !== null) {\n      this.ws.close()\n    }\n  }\n\n  connect () {\n    this.shouldConnect = true\n    if (!this.wsconnected && this.ws === null) {\n      setupWS(this)\n      this.connectBc()\n    }\n  }\n}\n","\nimport * as Y from 'yjs' // eslint-disable-line\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\n\nexport const messagePermissionDenied = 0\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {string} reason\n */\nexport const writePermissionDenied = (encoder, reason) => {\n  encoding.writeVarUint(encoder, messagePermissionDenied)\n  encoding.writeVarString(encoder, reason)\n}\n\n/**\n * @callback PermissionDeniedHandler\n * @param {any} y\n * @param {string} reason\n */\n\n/**\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} y\n * @param {PermissionDeniedHandler} permissionDeniedHandler\n */\nexport const readAuthMessage = (decoder, y, permissionDeniedHandler) => {\n  switch (decoding.readVarUint(decoder)) {\n    case messagePermissionDenied: permissionDeniedHandler(y, decoding.readVarString(decoder))\n  }\n}\n","/**\n * Utility module to work with urls.\n *\n * @module url\n */\n\nimport * as object from './object.js'\n\n/**\n * Parse query parameters from an url.\n *\n * @param {string} url\n * @return {Object<string,string>}\n */\nexport const decodeQueryParams = url => {\n  /**\n   * @type {Object<string,string>}\n   */\n  const query = {}\n  const urlQuerySplit = url.split('?')\n  const pairs = urlQuerySplit[urlQuerySplit.length - 1].split('&')\n  for (var i = 0; i < pairs.length; i++) {\n    const item = pairs[i]\n    if (item.length > 0) {\n      const pair = item.split('=')\n      query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '')\n    }\n  }\n  return query\n}\n\n/**\n * @param {Object<string,string>} params\n * @return {string}\n */\nexport const encodeQueryParams = params =>\n  object.map(params, (val, key) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`).join('&')\n","/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\nimport { PromiseDelegate } from '@lumino/coreutils';\nimport * as decoding from 'lib0/decoding';\nimport * as encoding from 'lib0/encoding';\nimport { WebsocketProvider } from 'y-websocket';\nimport * as Y from 'yjs';\nimport { getAnonymousUserName, getRandomColor } from './awareness';\nimport * as env from 'lib0/environment';\n/**\n * A class to provide Yjs synchronization over WebSocket.\n *\n * The user can specify their own user-name and user-color by adding url parameters:\n *   ?username=Alice&usercolor=007007\n * where usercolor must be a six-digit hexadecimal encoded RGB value without the hash token.\n *\n * We specify custom messages that the server can interpret. For reference please look in yjs_ws_server.\n *\n */\nexport class WebSocketProviderWithLocks extends WebsocketProvider {\n    /**\n     * Construct a new WebSocketProviderWithLocks\n     *\n     * @param options The instantiation options for a WebSocketProviderWithLocks\n     */\n    constructor(options) {\n        super(options.url, options.contentType + ':' + options.path, options.ymodel.ydoc, {\n            awareness: options.ymodel.awareness\n        });\n        this._currentLockRequest = null;\n        this._initialContentRequest = null;\n        this._path = options.path;\n        this._contentType = options.contentType;\n        this._serverUrl = options.url;\n        const color = '#' + env.getParam('--usercolor', getRandomColor().slice(1));\n        const name = env.getParam('--username', getAnonymousUserName());\n        const awareness = options.ymodel.awareness;\n        const currState = awareness.getLocalState();\n        // only set if this was not already set by another plugin\n        if (currState && currState.name == null) {\n            options.ymodel.awareness.setLocalStateField('user', {\n                name,\n                color\n            });\n        }\n        // Message handler that confirms when a lock has been acquired\n        this.messageHandlers[127] = (encoder, decoder, provider, emitSynced, messageType) => {\n            // acquired lock\n            const timestamp = decoding.readUint32(decoder);\n            const lockRequest = this._currentLockRequest;\n            this._currentLockRequest = null;\n            if (lockRequest) {\n                lockRequest.resolve(timestamp);\n            }\n        };\n        // Message handler that receives the initial content\n        this.messageHandlers[125] = (encoder, decoder, provider, emitSynced, messageType) => {\n            // received initial content\n            const initialContent = decoding.readTailAsUint8Array(decoder);\n            // Apply data from server\n            if (initialContent.byteLength > 0) {\n                setTimeout(() => {\n                    Y.applyUpdate(this.doc, initialContent);\n                }, 0);\n            }\n            const initialContentRequest = this._initialContentRequest;\n            this._initialContentRequest = null;\n            if (initialContentRequest) {\n                initialContentRequest.resolve(initialContent.byteLength > 0);\n            }\n        };\n        this._isInitialized = false;\n        this._onConnectionStatus = this._onConnectionStatus.bind(this);\n        this.on('status', this._onConnectionStatus);\n    }\n    setPath(newPath) {\n        if (newPath !== this._path) {\n            this._path = newPath;\n            // The next time the provider connects, we should connect through a different server url\n            this.bcChannel =\n                this._serverUrl + '/' + this._contentType + ':' + this._path;\n            this.url = this.bcChannel;\n            const encoder = encoding.createEncoder();\n            encoding.write(encoder, 123);\n            // writing a utf8 string to the encoder\n            const escapedPath = unescape(encodeURIComponent(this._contentType + ':' + newPath));\n            for (let i = 0; i < escapedPath.length; i++) {\n                encoding.write(encoder, \n                /** @type {number} */ escapedPath.codePointAt(i));\n            }\n            this._sendMessage(encoding.toUint8Array(encoder));\n        }\n    }\n    /**\n     * Resolves to true if the initial content has been initialized on the server. false otherwise.\n     */\n    requestInitialContent() {\n        if (this._initialContentRequest) {\n            return this._initialContentRequest.promise;\n        }\n        this._initialContentRequest = new PromiseDelegate();\n        this._sendMessage(new Uint8Array([125]));\n        // Resolve with true if the server doesn't respond for some reason.\n        // In case of a connection problem, we don't want the user to re-initialize the window.\n        // Instead wait for y-websocket to connect to the server.\n        // @todo maybe we should reload instead..\n        setTimeout(() => { var _a; return (_a = this._initialContentRequest) === null || _a === void 0 ? void 0 : _a.resolve(false); }, 1000);\n        return this._initialContentRequest.promise;\n    }\n    /**\n     * Put the initialized state.\n     */\n    putInitializedState() {\n        const encoder = encoding.createEncoder();\n        encoding.writeVarUint(encoder, 124);\n        encoding.writeUint8Array(encoder, Y.encodeStateAsUpdate(this.doc));\n        this._sendMessage(encoding.toUint8Array(encoder));\n        this._isInitialized = true;\n    }\n    /**\n     * Acquire a lock.\n     * Returns a Promise that resolves to the lock number.\n     */\n    acquireLock() {\n        if (this._currentLockRequest) {\n            return this._currentLockRequest.promise;\n        }\n        this._sendMessage(new Uint8Array([127]));\n        // try to acquire lock in regular interval\n        const intervalID = setInterval(() => {\n            if (this.wsconnected) {\n                // try to acquire lock\n                this._sendMessage(new Uint8Array([127]));\n            }\n        }, 500);\n        let resolve, reject;\n        const promise = new Promise((_resolve, _reject) => {\n            resolve = _resolve;\n            reject = _reject;\n        });\n        this._currentLockRequest = { promise, resolve, reject };\n        const _finally = () => {\n            clearInterval(intervalID);\n        };\n        promise.then(_finally, _finally);\n        return promise;\n    }\n    /**\n     * Release a lock.\n     *\n     * @param lock The lock to release.\n     */\n    releaseLock(lock) {\n        const encoder = encoding.createEncoder();\n        // reply with release lock\n        encoding.writeVarUint(encoder, 126);\n        encoding.writeUint32(encoder, lock);\n        // releasing lock\n        this._sendMessage(encoding.toUint8Array(encoder));\n    }\n    /**\n     * Send a new message to WebSocket server.\n     *\n     * @param message The message to send\n     */\n    _sendMessage(message) {\n        // send once connected\n        const send = () => {\n            setTimeout(() => {\n                if (this.wsconnected) {\n                    this.ws.send(message);\n                }\n                else {\n                    this.once('status', send);\n                }\n            }, 0);\n        };\n        send();\n    }\n    /**\n     * Handle a change to the connection status.\n     *\n     * @param status The connection status.\n     */\n    async _onConnectionStatus(status) {\n        if (this._isInitialized && status.status === 'connected') {\n            const lock = await this.acquireLock();\n            const contentIsInitialized = await this.requestInitialContent();\n            if (!contentIsInitialized) {\n                this.putInitializedState();\n            }\n            this.releaseLock(lock);\n        }\n    }\n}\n//# sourceMappingURL=yprovider.js.map","/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\n\n/* istanbul ignore next */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release && /node|io\\.js/.test(process.release.name)\n/* istanbul ignore next */\nexport const isBrowser = typeof window !== 'undefined' && !isNode\n/* istanbul ignore next */\nexport const isMac = typeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* istanbul ignore next */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      /* istanbul ignore next */\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n    // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create()\n      // eslint-disable-next-line no-undef\n      ;(location.search || '?').slice(1).split('&').forEach(kv => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    } else {\n      params = map.create()\n    }\n  }\n  return params\n}\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nexport const hasParam = name => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* istanbul ignore next */\nexport const getParam = (name, defaultVal) => computeParams().get(name) || defaultVal\n// export const getArgs = name => computeParams() && args\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* istanbul ignore next */\nexport const getVariable = name => isNode ? conditions.undefinedToNull(process.env[name.toUpperCase()]) : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\nexport const getConf = name => computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nexport const hasConf = name => hasParam('--' + name) || getVariable(name) !== null\n\n/* istanbul ignore next */\nexport const production = hasConf('production')\n","/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* istanbul ignore next */\nexport const undefinedToNull = v => v === undefined ? null : v\n","/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template X,Y\n * @param {Map<X,Y>} m\n * @return {Map<X,Y>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template T,K\n * @param {Map<K, T>} map\n * @param {K} key\n * @param {function():T} createT\n * @return {T}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n","/* global localStorage, addEventListener */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* istanbul ignore next */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map()\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue)\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n\n/* istanbul ignore next */\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill()\nlet usePolyfill = true\n\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  /* istanbul ignore next */\n  if (typeof localStorage !== 'undefined') {\n    _localStorage = localStorage\n    usePolyfill = false\n  }\n} catch (e) { }\n\n/* istanbul ignore next */\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\nexport const varStorage = _localStorage\n\n/* istanbul ignore next */\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\n","/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* istanbul ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* istanbul ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* istanbul ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* istanbul ignore next */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* istanbul ignore next */\n  utf8TextDecoder = null\n}\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* istanbul ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"],"sourceRoot":""}