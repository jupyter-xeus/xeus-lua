{"version":3,"sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/help-extension/lib/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/help-extension/lib/licenses.js"],"names":["CommandIDs","Licenses","SplitPanel","constructor","options","super","this","addClass","model","initLeftPanel","initFilters","initBundles","initGrid","initLicenseText","setRelativeSizes","initLicenses","then","_updateBundles","trackerDataChanged","connect","title","label","dispose","isDisposed","_bundles","currentChanged","disconnect","onBundleSelected","_leftPanel","Panel","addWidget","_filters","Filters","TabBar","orientation","renderer","BundleTabRenderer","stateChanged","update","_grid","Grid","_licenseText","FullText","_a","currentTitle","currentBundleName","clearTabs","i","currentIndex","bundle","bundleNames","tab","Widget","insertTab","REPORT_FORMATS","markdown","id","icon","markdownIcon","csv","spreadsheetIcon","json","jsonIcon","DEFAULT_FORMAT","Model","VDomModel","_selectedPackageChanged","Signal","_trackerDataChanged","_currentPackageIndex","_licensesReady","PromiseDelegate","_packageFilter","_trans","trans","_licensesUrl","licensesUrl","_serverSettings","serverSettings","ServerConnection","_currentBundleName","packageFilter","currentPackageIndex","response","_serverResponse","resolve","emit","err","reject","url","format","element","document","createElement","href","download","body","appendChild","click","removeChild","Object","keys","bundles","length","promise","getFilteredPackages","packages","__","trim","allRows","rows","filters","entries","filter","k","v","map","toLowerCase","split","row","keyHits","key","bits","bitHits","rowKeyValue","bit","includes","push","values","VDomRenderer","renderFilter","value","type","name","defaultValue","className","onInput","onFilterInput","evt","input","currentTarget","assign","render","closeIconSelector","renderTab","data","caption","createTabKey","style","createTabStyle","createTabClass","dataset","createTabDataset","h","renderIcon","renderLabel","renderCountBadge","renderRow","index","selected","onCheck","onClick","onChange","checked","versionInfo","licenseId","filteredPackages","currentPackage","head","quote","code","extractedText","open","about","activate","close","show","hide","launchClassic","jupyterForum","licenses","licenseReport","refreshLicenses","LAB_IS_SECURE","window","location","protocol","autoStart","requires","ITranslator","optional","ICommandPalette","app","translator","palette","commands","load","category","addCommand","execute","versionNumber","version","jupyterIcon","margin","height","width","jupyterlabWordmarkIcon","externalLinks","target","rel","copyright","showDialog","buttons","Dialog","addItem","command","PageConfig","IMainMenu","ILayoutRestorer","mainMenu","restorer","counter","baseUrl","shell","serviceManager","tracker","WidgetTracker","namespace","resources","text","sort","a","b","localeCompare","restore","args","widget","content","helpMenu","resourcesGroup","addGroup","kernelInfoCache","Map","sessions","runningChanged","m","sessionModel","kernel","has","session","connectTo","kernelConnectionOptions","handleComms","info","kernelInfo","_b","set","usesKernel","result","currentWidget","kernelUsers","forEach","u","getKernel","bannerCommand","spec","kernelspecs","specs","kernelName","display_name","kernelIconUrl","indexOf","slice","isVisible","isEnabled","headerLogo","src","banner","kernelGroup","help_links","link","commandId","URLExt","IFrame","sandbox","MainAreaWidget","newHelpWidget","add","reload","menu","downloadAsText","licensesText","licensesTracker","formatOrDefault","licenseMain","licensesModel","copyrightIcon","main","reveal","licensesReady","toolbar","CommandToolbarButton","noLabel","Toolbar","button","createLicenseWidget","save","refreshIcon","async"],"mappings":"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","file":"8172.aa772cd222a185f05203.js","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * @packageDocumentation\n * @module help-extension\n */\nimport { ILayoutRestorer } from '@jupyterlab/application';\nimport { CommandToolbarButton, Dialog, ICommandPalette, IFrame, MainAreaWidget, showDialog, Toolbar, WidgetTracker } from '@jupyterlab/apputils';\nimport { PageConfig, URLExt } from '@jupyterlab/coreutils';\nimport { IMainMenu } from '@jupyterlab/mainmenu';\nimport { ITranslator } from '@jupyterlab/translation';\nimport { copyrightIcon, jupyterIcon, jupyterlabWordmarkIcon, refreshIcon } from '@jupyterlab/ui-components';\nimport * as React from 'react';\nimport { Licenses } from './licenses';\n/**\n * The command IDs used by the help plugin.\n */\nvar CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.open = 'help:open';\n    CommandIDs.about = 'help:about';\n    CommandIDs.activate = 'help:activate';\n    CommandIDs.close = 'help:close';\n    CommandIDs.show = 'help:show';\n    CommandIDs.hide = 'help:hide';\n    CommandIDs.launchClassic = 'help:launch-classic-notebook';\n    CommandIDs.jupyterForum = 'help:jupyter-forum';\n    CommandIDs.licenses = 'help:licenses';\n    CommandIDs.licenseReport = 'help:license-report';\n    CommandIDs.refreshLicenses = 'help:licenses-refresh';\n})(CommandIDs || (CommandIDs = {}));\n/**\n * A flag denoting whether the application is loaded over HTTPS.\n */\nconst LAB_IS_SECURE = window.location.protocol === 'https:';\n/**\n * The class name added to the help widget.\n */\nconst HELP_CLASS = 'jp-Help';\n/**\n * Add a command to show an About dialog.\n */\nconst about = {\n    id: '@jupyterlab/help-extension:about',\n    autoStart: true,\n    requires: [ITranslator],\n    optional: [ICommandPalette],\n    activate: (app, translator, palette) => {\n        const { commands } = app;\n        const trans = translator.load('jupyterlab');\n        const category = trans.__('Help');\n        commands.addCommand(CommandIDs.about, {\n            label: trans.__('About %1', app.name),\n            execute: () => {\n                // Create the header of the about dialog\n                const versionNumber = trans.__('Version %1', app.version);\n                const versionInfo = (React.createElement(\"span\", { className: \"jp-About-version-info\" },\n                    React.createElement(\"span\", { className: \"jp-About-version\" }, versionNumber)));\n                const title = (React.createElement(\"span\", { className: \"jp-About-header\" },\n                    React.createElement(jupyterIcon.react, { margin: \"7px 9.5px\", height: \"auto\", width: \"58px\" }),\n                    React.createElement(\"div\", { className: \"jp-About-header-info\" },\n                        React.createElement(jupyterlabWordmarkIcon.react, { height: \"auto\", width: \"196px\" }),\n                        versionInfo)));\n                // Create the body of the about dialog\n                const jupyterURL = 'https://jupyter.org/about.html';\n                const contributorsURL = 'https://github.com/jupyterlab/jupyterlab/graphs/contributors';\n                const externalLinks = (React.createElement(\"span\", { className: \"jp-About-externalLinks\" },\n                    React.createElement(\"a\", { href: contributorsURL, target: \"_blank\", rel: \"noopener noreferrer\", className: \"jp-Button-flat\" }, trans.__('CONTRIBUTOR LIST')),\n                    React.createElement(\"a\", { href: jupyterURL, target: \"_blank\", rel: \"noopener noreferrer\", className: \"jp-Button-flat\" }, trans.__('ABOUT PROJECT JUPYTER'))));\n                const copyright = (React.createElement(\"span\", { className: \"jp-About-copyright\" }, trans.__('© 2015-2021 Project Jupyter Contributors')));\n                const body = (React.createElement(\"div\", { className: \"jp-About-body\" },\n                    externalLinks,\n                    copyright));\n                return showDialog({\n                    title,\n                    body,\n                    buttons: [\n                        Dialog.createButton({\n                            label: trans.__('Dismiss'),\n                            className: 'jp-About-button jp-mod-reject jp-mod-styled'\n                        })\n                    ]\n                });\n            }\n        });\n        if (palette) {\n            palette.addItem({ command: CommandIDs.about, category });\n        }\n    }\n};\n/**\n * A plugin to add a command to open the Classic Notebook interface.\n */\nconst launchClassic = {\n    id: '@jupyterlab/help-extension:launch-classic',\n    autoStart: true,\n    requires: [ITranslator],\n    optional: [ICommandPalette],\n    activate: (app, translator, palette) => {\n        const { commands } = app;\n        const trans = translator.load('jupyterlab');\n        const category = trans.__('Help');\n        commands.addCommand(CommandIDs.launchClassic, {\n            label: trans.__('Launch Classic Notebook'),\n            execute: () => {\n                window.open(PageConfig.getBaseUrl() + 'tree');\n            }\n        });\n        if (palette) {\n            palette.addItem({ command: CommandIDs.launchClassic, category });\n        }\n    }\n};\n/**\n * A plugin to add a command to open the Jupyter Forum.\n */\nconst jupyterForum = {\n    id: '@jupyterlab/help-extension:jupyter-forum',\n    autoStart: true,\n    requires: [ITranslator],\n    optional: [ICommandPalette],\n    activate: (app, translator, palette) => {\n        const { commands } = app;\n        const trans = translator.load('jupyterlab');\n        const category = trans.__('Help');\n        commands.addCommand(CommandIDs.jupyterForum, {\n            label: trans.__('Jupyter Forum'),\n            execute: () => {\n                window.open('https://discourse.jupyter.org/c/jupyterlab');\n            }\n        });\n        if (palette) {\n            palette.addItem({ command: CommandIDs.jupyterForum, category });\n        }\n    }\n};\n/**\n * A plugin to add a list of resources to the help menu.\n */\nconst resources = {\n    id: '@jupyterlab/help-extension:resources',\n    autoStart: true,\n    requires: [IMainMenu, ITranslator],\n    optional: [ICommandPalette, ILayoutRestorer],\n    activate: (app, mainMenu, translator, palette, restorer) => {\n        const trans = translator.load('jupyterlab');\n        let counter = 0;\n        const category = trans.__('Help');\n        const namespace = 'help-doc';\n        const baseUrl = PageConfig.getBaseUrl();\n        const { commands, shell, serviceManager } = app;\n        const tracker = new WidgetTracker({ namespace });\n        const resources = [\n            {\n                text: trans.__('JupyterLab Reference'),\n                url: 'https://jupyterlab.readthedocs.io/en/stable/'\n            },\n            {\n                text: trans.__('JupyterLab FAQ'),\n                url: 'https://jupyterlab.readthedocs.io/en/stable/getting_started/faq.html'\n            },\n            {\n                text: trans.__('Jupyter Reference'),\n                url: 'https://jupyter.org/documentation'\n            },\n            {\n                text: trans.__('Markdown Reference'),\n                url: 'https://commonmark.org/help/'\n            }\n        ];\n        resources.sort((a, b) => {\n            return a.text.localeCompare(b.text);\n        });\n        // Handle state restoration.\n        if (restorer) {\n            void restorer.restore(tracker, {\n                command: CommandIDs.open,\n                args: widget => ({\n                    url: widget.content.url,\n                    text: widget.content.title.label\n                }),\n                name: widget => widget.content.url\n            });\n        }\n        /**\n         * Create a new HelpWidget widget.\n         */\n        function newHelpWidget(url, text) {\n            // Allow scripts and forms so that things like\n            // readthedocs can use their search functionality.\n            // We *don't* allow same origin requests, which\n            // can prevent some content from being loaded onto the\n            // help pages.\n            const content = new IFrame({\n                sandbox: ['allow-scripts', 'allow-forms']\n            });\n            content.url = url;\n            content.addClass(HELP_CLASS);\n            content.title.label = text;\n            content.id = `${namespace}-${++counter}`;\n            const widget = new MainAreaWidget({ content });\n            widget.addClass('jp-Help');\n            return widget;\n        }\n        // Populate the Help menu.\n        const helpMenu = mainMenu.helpMenu;\n        const resourcesGroup = resources.map(args => ({\n            args,\n            command: CommandIDs.open\n        }));\n        helpMenu.addGroup(resourcesGroup, 10);\n        // Generate a cache of the kernel help links.\n        const kernelInfoCache = new Map();\n        serviceManager.sessions.runningChanged.connect((m, sessions) => {\n            var _a;\n            // If a new session has been added, it is at the back\n            // of the session list. If one has changed or stopped,\n            // it does not hurt to check it.\n            if (!sessions.length) {\n                return;\n            }\n            const sessionModel = sessions[sessions.length - 1];\n            if (!sessionModel.kernel ||\n                kernelInfoCache.has(sessionModel.kernel.name)) {\n                return;\n            }\n            const session = serviceManager.sessions.connectTo({\n                model: sessionModel,\n                kernelConnectionOptions: { handleComms: false }\n            });\n            void ((_a = session.kernel) === null || _a === void 0 ? void 0 : _a.info.then(kernelInfo => {\n                var _a, _b;\n                const name = session.kernel.name;\n                // Check the cache second time so that, if two callbacks get scheduled,\n                // they don't try to add the same commands.\n                if (kernelInfoCache.has(name)) {\n                    return;\n                }\n                // Set the Kernel Info cache.\n                kernelInfoCache.set(name, kernelInfo);\n                // Utility function to check if the current widget\n                // has registered itself with the help menu.\n                const usesKernel = () => {\n                    let result = false;\n                    const widget = app.shell.currentWidget;\n                    if (!widget) {\n                        return result;\n                    }\n                    helpMenu.kernelUsers.forEach(u => {\n                        var _a;\n                        if (u.tracker.has(widget) && ((_a = u.getKernel(widget)) === null || _a === void 0 ? void 0 : _a.name) === name) {\n                            result = true;\n                        }\n                    });\n                    return result;\n                };\n                // Add the kernel banner to the Help Menu.\n                const bannerCommand = `help-menu-${name}:banner`;\n                const spec = (_b = (_a = serviceManager.kernelspecs) === null || _a === void 0 ? void 0 : _a.specs) === null || _b === void 0 ? void 0 : _b.kernelspecs[name];\n                if (!spec) {\n                    return;\n                }\n                const kernelName = spec.display_name;\n                let kernelIconUrl = spec.resources['logo-64x64'];\n                if (kernelIconUrl) {\n                    const index = kernelIconUrl.indexOf('kernelspecs');\n                    kernelIconUrl = baseUrl + kernelIconUrl.slice(index);\n                }\n                commands.addCommand(bannerCommand, {\n                    label: trans.__('About the %1 Kernel', kernelName),\n                    isVisible: usesKernel,\n                    isEnabled: usesKernel,\n                    execute: () => {\n                        // Create the header of the about dialog\n                        const headerLogo = React.createElement(\"img\", { src: kernelIconUrl });\n                        const title = (React.createElement(\"span\", { className: \"jp-About-header\" },\n                            headerLogo,\n                            React.createElement(\"div\", { className: \"jp-About-header-info\" }, kernelName)));\n                        const banner = React.createElement(\"pre\", null, kernelInfo.banner);\n                        const body = React.createElement(\"div\", { className: \"jp-About-body\" }, banner);\n                        return showDialog({\n                            title,\n                            body,\n                            buttons: [\n                                Dialog.createButton({\n                                    label: trans.__('Dismiss'),\n                                    className: 'jp-About-button jp-mod-reject jp-mod-styled'\n                                })\n                            ]\n                        });\n                    }\n                });\n                helpMenu.addGroup([{ command: bannerCommand }], 20);\n                // Add the kernel info help_links to the Help menu.\n                const kernelGroup = [];\n                (kernelInfo.help_links || []).forEach(link => {\n                    const commandId = `help-menu-${name}:${link.text}`;\n                    commands.addCommand(commandId, {\n                        label: link.text,\n                        isVisible: usesKernel,\n                        isEnabled: usesKernel,\n                        execute: () => {\n                            return commands.execute(CommandIDs.open, link);\n                        }\n                    });\n                    kernelGroup.push({ command: commandId });\n                });\n                helpMenu.addGroup(kernelGroup, 21);\n                // Dispose of the session object since we no longer need it.\n                session.dispose();\n            }));\n        });\n        commands.addCommand(CommandIDs.open, {\n            label: args => args['text'],\n            execute: args => {\n                const url = args['url'];\n                const text = args['text'];\n                const newBrowserTab = args['newBrowserTab'] || false;\n                // If help resource will generate a mixed content error, load externally.\n                if (newBrowserTab ||\n                    (LAB_IS_SECURE && URLExt.parse(url).protocol !== 'https:')) {\n                    window.open(url);\n                    return;\n                }\n                const widget = newHelpWidget(url, text);\n                void tracker.add(widget);\n                shell.add(widget, 'main');\n                return widget;\n            }\n        });\n        if (palette) {\n            resources.forEach(args => {\n                palette.addItem({ args, command: CommandIDs.open, category });\n            });\n            palette.addItem({\n                args: { reload: true },\n                command: 'apputils:reset',\n                category\n            });\n        }\n    }\n};\n/**\n * A plugin to add a licenses reporting tools.\n */\nconst licenses = {\n    id: '@jupyterlab/help-extension:licenses',\n    autoStart: true,\n    requires: [ITranslator],\n    optional: [IMainMenu, ICommandPalette, ILayoutRestorer],\n    activate: (app, translator, menu, palette, restorer) => {\n        // bail if no license API is available from the server\n        if (!PageConfig.getOption('licensesUrl')) {\n            return;\n        }\n        const { commands, shell } = app;\n        const trans = translator.load('jupyterlab');\n        // translation strings\n        const category = trans.__('Help');\n        const downloadAsText = trans.__('Download All Licenses as');\n        const licensesText = trans.__('Licenses');\n        const refreshLicenses = trans.__('Refresh Licenses');\n        // an incrementer for license widget ids\n        let counter = 0;\n        const licensesUrl = URLExt.join(PageConfig.getBaseUrl(), PageConfig.getOption('licensesUrl')) + '/';\n        const licensesNamespace = 'help-licenses';\n        const licensesTracker = new WidgetTracker({\n            namespace: licensesNamespace\n        });\n        /**\n         * Return a full license report format based on a format name\n         */\n        function formatOrDefault(format) {\n            return (Licenses.REPORT_FORMATS[format] ||\n                Licenses.REPORT_FORMATS[Licenses.DEFAULT_FORMAT]);\n        }\n        /**\n         * Create a MainAreaWidget for a license viewer\n         */\n        function createLicenseWidget(args) {\n            const licensesModel = new Licenses.Model(Object.assign(Object.assign({}, args), { licensesUrl,\n                trans, serverSettings: app.serviceManager.serverSettings }));\n            const content = new Licenses({ model: licensesModel });\n            content.id = `${licensesNamespace}-${++counter}`;\n            content.title.label = licensesText;\n            content.title.icon = copyrightIcon;\n            const main = new MainAreaWidget({\n                content,\n                reveal: licensesModel.licensesReady\n            });\n            main.toolbar.addItem('refresh-licenses', new CommandToolbarButton({\n                id: CommandIDs.refreshLicenses,\n                args: { noLabel: 1 },\n                commands\n            }));\n            main.toolbar.addItem('spacer', Toolbar.createSpacerItem());\n            for (const format of Object.keys(Licenses.REPORT_FORMATS)) {\n                const button = new CommandToolbarButton({\n                    id: CommandIDs.licenseReport,\n                    args: { format, noLabel: 1 },\n                    commands\n                });\n                main.toolbar.addItem(`download-${format}`, button);\n            }\n            return main;\n        }\n        // register license-related commands\n        commands.addCommand(CommandIDs.licenses, {\n            label: licensesText,\n            execute: (args) => {\n                const licenseMain = createLicenseWidget(args);\n                shell.add(licenseMain, 'main');\n                // add to tracker so it can be restored, and update when choices change\n                void licensesTracker.add(licenseMain);\n                licenseMain.content.model.trackerDataChanged.connect(() => {\n                    void licensesTracker.save(licenseMain);\n                });\n                return licenseMain;\n            }\n        });\n        commands.addCommand(CommandIDs.refreshLicenses, {\n            label: args => (args.noLabel ? '' : refreshLicenses),\n            caption: refreshLicenses,\n            icon: refreshIcon,\n            execute: async () => {\n                var _a;\n                return (_a = licensesTracker.currentWidget) === null || _a === void 0 ? void 0 : _a.content.model.initLicenses();\n            }\n        });\n        commands.addCommand(CommandIDs.licenseReport, {\n            label: args => {\n                if (args.noLabel) {\n                    return '';\n                }\n                const format = formatOrDefault(`${args.format}`);\n                return `${downloadAsText} ${format.title}`;\n            },\n            caption: args => {\n                const format = formatOrDefault(`${args.format}`);\n                return `${downloadAsText} ${format.title}`;\n            },\n            icon: args => {\n                const format = formatOrDefault(`${args.format}`);\n                return format.icon;\n            },\n            execute: async (args) => {\n                var _a;\n                const format = formatOrDefault(`${args.format}`);\n                return await ((_a = licensesTracker.currentWidget) === null || _a === void 0 ? void 0 : _a.content.model.download({\n                    format: format.id\n                }));\n            }\n        });\n        // handle optional integrations\n        if (palette) {\n            palette.addItem({ command: CommandIDs.licenses, category });\n        }\n        if (menu) {\n            const helpMenu = menu.helpMenu;\n            helpMenu.addGroup([{ command: CommandIDs.licenses }], 0);\n        }\n        if (restorer) {\n            void restorer.restore(licensesTracker, {\n                command: CommandIDs.licenses,\n                name: widget => 'licenses',\n                args: widget => {\n                    const { currentBundleName, currentPackageIndex, packageFilter } = widget.content.model;\n                    const args = {\n                        currentBundleName,\n                        currentPackageIndex,\n                        packageFilter\n                    };\n                    return args;\n                }\n            });\n        }\n    }\n};\nconst plugins = [\n    about,\n    launchClassic,\n    jupyterForum,\n    resources,\n    licenses\n];\nexport default plugins;\n//# sourceMappingURL=index.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { VDomModel, VDomRenderer } from '@jupyterlab/apputils';\nimport { ServerConnection } from '@jupyterlab/services';\nimport { jsonIcon, markdownIcon, spreadsheetIcon } from '@jupyterlab/ui-components';\nimport { PromiseDelegate } from '@lumino/coreutils';\nimport { Signal } from '@lumino/signaling';\nimport { h } from '@lumino/virtualdom';\nimport { Panel, SplitPanel, TabBar, Widget } from '@lumino/widgets';\nimport * as React from 'react';\n/**\n * A license viewer\n */\nexport class Licenses extends SplitPanel {\n    constructor(options) {\n        super();\n        this.addClass('jp-Licenses');\n        this.model = options.model;\n        this.initLeftPanel();\n        this.initFilters();\n        this.initBundles();\n        this.initGrid();\n        this.initLicenseText();\n        this.setRelativeSizes([1, 2, 3]);\n        void this.model.initLicenses().then(() => this._updateBundles());\n        this.model.trackerDataChanged.connect(() => {\n            this.title.label = this.model.title;\n        });\n    }\n    /**\n     * Handle disposing of the widget\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this._bundles.currentChanged.disconnect(this.onBundleSelected, this);\n        this.model.dispose();\n        super.dispose();\n    }\n    /**\n     * Initialize the left area for filters and bundles\n     */\n    initLeftPanel() {\n        this._leftPanel = new Panel();\n        this._leftPanel.addClass('jp-Licenses-FormArea');\n        this.addWidget(this._leftPanel);\n        SplitPanel.setStretch(this._leftPanel, 1);\n    }\n    /**\n     * Initialize the filters\n     */\n    initFilters() {\n        this._filters = new Licenses.Filters(this.model);\n        SplitPanel.setStretch(this._filters, 1);\n        this._leftPanel.addWidget(this._filters);\n    }\n    /**\n     * Initialize the listing of available bundles\n     */\n    initBundles() {\n        this._bundles = new TabBar({\n            orientation: 'vertical',\n            renderer: new Licenses.BundleTabRenderer(this.model)\n        });\n        this._bundles.addClass('jp-Licenses-Bundles');\n        SplitPanel.setStretch(this._bundles, 1);\n        this._leftPanel.addWidget(this._bundles);\n        this._bundles.currentChanged.connect(this.onBundleSelected, this);\n        this.model.stateChanged.connect(() => this._bundles.update());\n    }\n    /**\n     * Initialize the listing of packages within the current bundle\n     */\n    initGrid() {\n        this._grid = new Licenses.Grid(this.model);\n        SplitPanel.setStretch(this._grid, 1);\n        this.addWidget(this._grid);\n    }\n    /**\n     * Initialize the full text of the current package\n     */\n    initLicenseText() {\n        this._licenseText = new Licenses.FullText(this.model);\n        SplitPanel.setStretch(this._grid, 1);\n        this.addWidget(this._licenseText);\n    }\n    /**\n     * Event handler for updating the model with the current bundle\n     */\n    onBundleSelected() {\n        var _a;\n        if ((_a = this._bundles.currentTitle) === null || _a === void 0 ? void 0 : _a.label) {\n            this.model.currentBundleName = this._bundles.currentTitle.label;\n        }\n    }\n    /**\n     * Update the bundle tabs.\n     */\n    _updateBundles() {\n        this._bundles.clearTabs();\n        let i = 0;\n        const { currentBundleName } = this.model;\n        let currentIndex = 0;\n        for (const bundle of this.model.bundleNames) {\n            const tab = new Widget();\n            tab.title.label = bundle;\n            if (bundle === currentBundleName) {\n                currentIndex = i;\n            }\n            this._bundles.insertTab(++i, tab.title);\n        }\n        this._bundles.currentIndex = currentIndex;\n    }\n}\n/** A namespace for license components */\n(function (Licenses) {\n    /**\n     * License report formats understood by the server (once lower-cased)\n     */\n    Licenses.REPORT_FORMATS = {\n        markdown: {\n            id: 'markdown',\n            title: 'Markdown',\n            icon: markdownIcon\n        },\n        csv: {\n            id: 'csv',\n            title: 'CSV',\n            icon: spreadsheetIcon\n        },\n        json: {\n            id: 'csv',\n            title: 'JSON',\n            icon: jsonIcon\n        }\n    };\n    /**\n     * The default format (most human-readable)\n     */\n    Licenses.DEFAULT_FORMAT = 'markdown';\n    /**\n     * A model for license data\n     */\n    class Model extends VDomModel {\n        constructor(options) {\n            super();\n            this._selectedPackageChanged = new Signal(this);\n            this._trackerDataChanged = new Signal(this);\n            this._currentPackageIndex = 0;\n            this._licensesReady = new PromiseDelegate();\n            this._packageFilter = {};\n            this._trans = options.trans;\n            this._licensesUrl = options.licensesUrl;\n            this._serverSettings =\n                options.serverSettings || ServerConnection.makeSettings();\n            if (options.currentBundleName) {\n                this._currentBundleName = options.currentBundleName;\n            }\n            if (options.packageFilter) {\n                this._packageFilter = options.packageFilter;\n            }\n            if (options.currentPackageIndex) {\n                this._currentPackageIndex = options.currentPackageIndex;\n            }\n        }\n        /**\n         * Handle the initial request for the licenses from the server.\n         */\n        async initLicenses() {\n            try {\n                const response = await ServerConnection.makeRequest(this._licensesUrl, {}, this._serverSettings);\n                this._serverResponse = await response.json();\n                this._licensesReady.resolve();\n                this.stateChanged.emit(void 0);\n            }\n            catch (err) {\n                this._licensesReady.reject(err);\n            }\n        }\n        /**\n         * Create a temporary download link, and emulate clicking it to trigger a named\n         * file download.\n         */\n        async download(options) {\n            const url = `${this._licensesUrl}?format=${options.format}&download=1`;\n            const element = document.createElement('a');\n            element.href = url;\n            element.download = '';\n            document.body.appendChild(element);\n            element.click();\n            document.body.removeChild(element);\n            return void 0;\n        }\n        /**\n         * A promise that resolves when the licenses from the server change\n         */\n        get selectedPackageChanged() {\n            return this._selectedPackageChanged;\n        }\n        /**\n         * A promise that resolves when the trackable data changes\n         */\n        get trackerDataChanged() {\n            return this._trackerDataChanged;\n        }\n        /**\n         * The names of the license bundles available\n         */\n        get bundleNames() {\n            var _a;\n            return Object.keys(((_a = this._serverResponse) === null || _a === void 0 ? void 0 : _a.bundles) || {});\n        }\n        /**\n         * The current license bundle\n         */\n        get currentBundleName() {\n            if (this._currentBundleName) {\n                return this._currentBundleName;\n            }\n            if (this.bundleNames.length) {\n                return this.bundleNames[0];\n            }\n            return null;\n        }\n        /**\n         * Set the current license bundle, and reset the selected index\n         */\n        set currentBundleName(currentBundleName) {\n            if (this._currentBundleName !== currentBundleName) {\n                this._currentBundleName = currentBundleName;\n                this.stateChanged.emit(void 0);\n                this._trackerDataChanged.emit(void 0);\n            }\n        }\n        /**\n         * A promise that resolves when the licenses are available from the server\n         */\n        get licensesReady() {\n            return this._licensesReady.promise;\n        }\n        /**\n         * All the license bundles, keyed by the distributing packages\n         */\n        get bundles() {\n            var _a;\n            return ((_a = this._serverResponse) === null || _a === void 0 ? void 0 : _a.bundles) || {};\n        }\n        /**\n         * The index of the currently-selected package within its license bundle\n         */\n        get currentPackageIndex() {\n            return this._currentPackageIndex;\n        }\n        /**\n         * Update the currently-selected package within its license bundle\n         */\n        set currentPackageIndex(currentPackageIndex) {\n            if (this._currentPackageIndex === currentPackageIndex) {\n                return;\n            }\n            this._currentPackageIndex = currentPackageIndex;\n            this._selectedPackageChanged.emit(void 0);\n            this.stateChanged.emit(void 0);\n            this._trackerDataChanged.emit(void 0);\n        }\n        /**\n         * The license data for the currently-selected package\n         */\n        get currentPackage() {\n            var _a;\n            if (this.currentBundleName &&\n                this.bundles &&\n                this._currentPackageIndex != null) {\n                return this.getFilteredPackages(((_a = this.bundles[this.currentBundleName]) === null || _a === void 0 ? void 0 : _a.packages) || [])[this._currentPackageIndex];\n            }\n            return null;\n        }\n        /**\n         * A translation bundle\n         */\n        get trans() {\n            return this._trans;\n        }\n        get title() {\n            return `${this._currentBundleName || ''} ${this._trans.__('Licenses')}`.trim();\n        }\n        /**\n         * The current package filter\n         */\n        get packageFilter() {\n            return this._packageFilter;\n        }\n        set packageFilter(packageFilter) {\n            this._packageFilter = packageFilter;\n            this.stateChanged.emit(void 0);\n            this._trackerDataChanged.emit(void 0);\n        }\n        /**\n         * Get filtered packages from current bundle where at least one token of each\n         * key is present.\n         */\n        getFilteredPackages(allRows) {\n            let rows = [];\n            let filters = Object.entries(this._packageFilter)\n                .filter(([k, v]) => v && `${v}`.trim().length)\n                .map(([k, v]) => [k, `${v}`.toLowerCase().trim().split(' ')]);\n            for (const row of allRows) {\n                let keyHits = 0;\n                for (const [key, bits] of filters) {\n                    let bitHits = 0;\n                    let rowKeyValue = `${row[key]}`.toLowerCase();\n                    for (const bit of bits) {\n                        if (rowKeyValue.includes(bit)) {\n                            bitHits += 1;\n                        }\n                    }\n                    if (bitHits) {\n                        keyHits += 1;\n                    }\n                }\n                if (keyHits === filters.length) {\n                    rows.push(row);\n                }\n            }\n            return Object.values(rows);\n        }\n    }\n    Licenses.Model = Model;\n    /**\n     * A filter form for limiting the packages displayed\n     */\n    class Filters extends VDomRenderer {\n        constructor(model) {\n            super(model);\n            /**\n             * Render a filter input\n             */\n            this.renderFilter = (key) => {\n                const value = this.model.packageFilter[key] || '';\n                return (React.createElement(\"input\", { type: \"text\", name: key, defaultValue: value, className: \"jp-mod-styled\", onInput: this.onFilterInput }));\n            };\n            /**\n             * Handle a filter input changing\n             */\n            this.onFilterInput = (evt) => {\n                const input = evt.currentTarget;\n                const { name, value } = input;\n                this.model.packageFilter = Object.assign(Object.assign({}, this.model.packageFilter), { [name]: value });\n            };\n            this.addClass('jp-Licenses-Filters');\n            this.addClass('jp-RenderedHTMLCommon');\n        }\n        render() {\n            const { trans } = this.model;\n            return (React.createElement(\"div\", null,\n                React.createElement(\"label\", null,\n                    React.createElement(\"strong\", null, trans.__('Filter Licenses By'))),\n                React.createElement(\"ul\", null,\n                    React.createElement(\"li\", null,\n                        React.createElement(\"label\", null, trans.__('Package')),\n                        this.renderFilter('name')),\n                    React.createElement(\"li\", null,\n                        React.createElement(\"label\", null, trans.__('Version')),\n                        this.renderFilter('versionInfo')),\n                    React.createElement(\"li\", null,\n                        React.createElement(\"label\", null, trans.__('License')),\n                        this.renderFilter('licenseId'))),\n                React.createElement(\"label\", null,\n                    React.createElement(\"strong\", null, trans.__('Distributions')))));\n        }\n    }\n    Licenses.Filters = Filters;\n    /**\n     * A fancy bundle renderer with the package count\n     */\n    class BundleTabRenderer extends TabBar.Renderer {\n        constructor(model) {\n            super();\n            this.closeIconSelector = '.lm-TabBar-tabCloseIcon';\n            this.model = model;\n        }\n        /**\n         * Render a full bundle\n         */\n        renderTab(data) {\n            let title = data.title.caption;\n            let key = this.createTabKey(data);\n            let style = this.createTabStyle(data);\n            let className = this.createTabClass(data);\n            let dataset = this.createTabDataset(data);\n            return h.li({ key, className, title, style, dataset }, this.renderIcon(data), this.renderLabel(data), this.renderCountBadge(data));\n        }\n        /**\n         * Render the package count\n         */\n        renderCountBadge(data) {\n            const bundle = data.title.label;\n            const { bundles } = this.model;\n            const packages = this.model.getFilteredPackages((bundles && bundle ? bundles[bundle].packages : []) || []);\n            return h.label({}, `${packages.length}`);\n        }\n    }\n    Licenses.BundleTabRenderer = BundleTabRenderer;\n    /**\n     * A grid of licenses\n     */\n    class Grid extends VDomRenderer {\n        constructor(model) {\n            super(model);\n            /**\n             * Render a single package's license information\n             */\n            this.renderRow = (row, index) => {\n                const selected = index === this.model.currentPackageIndex;\n                const onCheck = () => (this.model.currentPackageIndex = index);\n                return (React.createElement(\"tr\", { key: row.name, className: selected ? 'jp-mod-selected' : '', onClick: onCheck },\n                    React.createElement(\"td\", null,\n                        React.createElement(\"input\", { type: \"radio\", name: \"show-package-license\", value: index, onChange: onCheck, checked: selected })),\n                    React.createElement(\"th\", null, row.name),\n                    React.createElement(\"td\", null,\n                        React.createElement(\"code\", null, row.versionInfo)),\n                    React.createElement(\"td\", null,\n                        React.createElement(\"code\", null, row.licenseId))));\n            };\n            this.addClass('jp-Licenses-Grid');\n            this.addClass('jp-RenderedHTMLCommon');\n        }\n        /**\n         * Render a grid of package license information\n         */\n        render() {\n            var _a;\n            const { bundles, currentBundleName, trans } = this.model;\n            const filteredPackages = this.model.getFilteredPackages(bundles && currentBundleName\n                ? ((_a = bundles[currentBundleName]) === null || _a === void 0 ? void 0 : _a.packages) || []\n                : []);\n            if (!filteredPackages.length) {\n                return (React.createElement(\"blockquote\", null,\n                    React.createElement(\"em\", null, trans.__('No Packages found'))));\n            }\n            return (React.createElement(\"form\", null,\n                React.createElement(\"table\", null,\n                    React.createElement(\"thead\", null,\n                        React.createElement(\"tr\", null,\n                            React.createElement(\"td\", null),\n                            React.createElement(\"th\", null, trans.__('Package')),\n                            React.createElement(\"th\", null, trans.__('Version')),\n                            React.createElement(\"th\", null, trans.__('License')))),\n                    React.createElement(\"tbody\", null, filteredPackages.map(this.renderRow)))));\n        }\n    }\n    Licenses.Grid = Grid;\n    /**\n     * A package's full license text\n     */\n    class FullText extends VDomRenderer {\n        constructor(model) {\n            super(model);\n            this.addClass('jp-Licenses-Text');\n            this.addClass('jp-RenderedHTMLCommon');\n            this.addClass('jp-RenderedMarkdown');\n        }\n        /**\n         * Render the license text, or a null state if no package is selected\n         */\n        render() {\n            const { currentPackage, trans } = this.model;\n            let head = '';\n            let quote = trans.__('No Package selected');\n            let code = '';\n            if (currentPackage) {\n                const { name, versionInfo, licenseId, extractedText } = currentPackage;\n                head = `${name} v${versionInfo}`;\n                quote = `${trans.__('License')}: ${licenseId || trans.__('No License ID found')}`;\n                code = extractedText || trans.__('No License Text found');\n            }\n            return [\n                React.createElement(\"h1\", { key: \"h1\" }, head),\n                React.createElement(\"blockquote\", { key: \"quote\" },\n                    React.createElement(\"em\", null, quote)),\n                React.createElement(\"code\", { key: \"code\" }, code)\n            ];\n        }\n    }\n    Licenses.FullText = FullText;\n})(Licenses || (Licenses = {}));\n//# sourceMappingURL=licenses.js.map"],"sourceRoot":""}