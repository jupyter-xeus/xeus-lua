(self.webpackChunk_JUPYTERLAB_CORE_OUTPUT=self.webpackChunk_JUPYTERLAB_CORE_OUTPUT||[]).push([[6707],{76707:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>x});var o=t(67599),r=t(18477),a=t(6256),s=t(11052),l=t(78548),c=t(59310),i=t(18571),d=t(86942),u=t(34410),p=t(2832),C=t(57630),m=t(65995),g=t(62867),b=t(9727),k=t(76487),h=t(72189);const f={id:"@jupyterlab/console-extension:foreign",requires:[s.IConsoleTracker,p.ISettingRegistry,C.ITranslator],optional:[r.ICommandPalette],activate:function(e,n,t,o,r){const a=o.load("jupyterlab"),{shell:l}=e;n.widgetAdded.connect(((e,n)=>{const o=n.console,r=new s.ForeignHandler({sessionContext:o.sessionContext,parent:o});v.foreignHandlerProperty.set(o,r),t.get("@jupyterlab/console-extension:tracker","showAllKernelActivity").then((({composite:e})=>{const n=e;r.enabled=n})),o.disposed.connect((()=>{r.dispose()}))}));const{commands:c}=e,i=a.__("Console"),d="console:toggle-show-all-kernel-activity";c.addCommand(d,{label:e=>a.__("Show All Kernel Activity"),execute:e=>{const t=function(e){const t=n.currentWidget;return!1!==e.activate&&t&&l.activateById(t.id),t}(e);if(!t)return;const o=v.foreignHandlerProperty.get(t.console);o&&(o.enabled=!o.enabled)},isToggled:()=>{var e;return null!==n.currentWidget&&!!(null===(e=v.foreignHandlerProperty.get(n.currentWidget.console))||void 0===e?void 0:e.enabled)},isEnabled:()=>null!==n.currentWidget&&n.currentWidget===l.currentWidget}),r&&r.addItem({command:d,category:i,args:{isPalette:!0}})},autoStart:!0};var v,y;!function(e){e.foreignHandlerProperty=new h.AttachedProperty({name:"foreignHandler",create:()=>{}})}(v||(v={})),function(e){e.autoClosingBrackets="console:toggle-autoclosing-brackets",e.create="console:create",e.clear="console:clear",e.runUnforced="console:run-unforced",e.runForced="console:run-forced",e.linebreak="console:linebreak",e.interrupt="console:interrupt-kernel",e.restart="console:restart-kernel",e.closeAndShutdown="console:close-and-shutdown",e.open="console:open",e.inject="console:inject",e.changeKernel="console:change-kernel",e.enterToExecute="console:enter-to-execute",e.shiftEnterToExecute="console:shift-enter-to-execute",e.interactionMode="console:interaction-mode",e.replaceSelection="console:replace-selection"}(y||(y={}));const _={id:"@jupyterlab/console-extension:tracker",provides:s.IConsoleTracker,requires:[s.ConsolePanel.IContentFactory,a.IEditorServices,u.IRenderMimeRegistry,p.ISettingRegistry,C.ITranslator],optional:[o.ILayoutRestorer,c.IFileBrowserFactory,d.IMainMenu,r.ICommandPalette,i.ILauncher,o.ILabStatus,r.ISessionContextDialogs],activate:async function(e,n,t,o,a,c,i,d,u,p,C,h,f){const v=c.load("jupyterlab"),_=e.serviceManager,{commands:x,shell:w}=e,S=v.__("Console");f=null!=f?f:r.sessionContextDialogs;const B=new r.WidgetTracker({namespace:"console"});async function I(e){var r;await _.ready;const l=new s.ConsolePanel(Object.assign({manager:_,contentFactory:n,mimeTypeService:t.mimeTypeService,rendermime:o,translator:c,setBusy:null!==(r=h&&(()=>h.setBusy()))&&void 0!==r?r:void 0},e)),i=(await a.get("@jupyterlab/console-extension:tracker","interactionMode")).composite;return l.console.node.dataset.jpInteractionMode=i,await B.add(l),l.sessionContext.propertyChanged.connect((()=>{B.save(l)})),w.add(l,"main",{ref:e.ref,mode:e.insertMode,activate:!1!==e.activate}),l}i&&i.restore(B,{command:y.create,args:e=>{const{path:n,name:t,kernelPreference:o}=e.console.sessionContext;return{path:n,name:t,kernelPreference:Object.assign({},o)}},name:e=>{var n;return null!==(n=e.console.sessionContext.path)&&void 0!==n?n:b.UUID.uuid4()},when:_.ready}),C&&_.ready.then((()=>{let e=null;const n=()=>{e&&(e.dispose(),e=null);const n=_.kernelspecs.specs;if(!n)return;e=new k.DisposableSet;const t=l.PageConfig.getBaseUrl();for(const o in n.kernelspecs){const r=o===n.default?0:1/0,a=n.kernelspecs[o];let s=a.resources["logo-64x64"];if(s){const e=s.indexOf("kernelspecs");s=l.URLExt.join(t,s.slice(e))}e.add(C.add({command:y.create,args:{isLauncher:!0,kernelPreference:{name:o}},category:v.__("Console"),rank:r,kernelIconUrl:s,metadata:{kernel:b.JSONExt.deepCopy(a.metadata||{})}}))}};n(),_.kernelspecs.specsChanged.connect(n)}));const P=(e,n,t)=>{if(void 0!==n[t])switch(t){case"autoClosingBrackets":e.setOption("autoClosingBrackets",n.autoClosingBrackets);break;case"cursorBlinkRate":e.setOption("cursorBlinkRate",n.cursorBlinkRate);break;case"fontFamily":e.setOption("fontFamily",n.fontFamily);break;case"fontSize":e.setOption("fontSize",n.fontSize);break;case"lineHeight":e.setOption("lineHeight",n.lineHeight);break;case"lineNumbers":e.setOption("lineNumbers",n.lineNumbers);break;case"lineWrap":e.setOption("lineWrap",n.lineWrap);break;case"matchBrackets":e.setOption("matchBrackets",n.matchBrackets);break;case"readOnly":e.setOption("readOnly",n.readOnly);break;case"insertSpaces":e.setOption("insertSpaces",n.insertSpaces);break;case"tabSize":e.setOption("tabSize",n.tabSize);break;case"wordWrapColumn":e.setOption("wordWrapColumn",n.wordWrapColumn);break;case"rulers":e.setOption("rulers",n.rulers);break;case"codeFolding":e.setOption("codeFolding",n.codeFolding)}},E="@jupyterlab/console-extension:tracker";let O,M;async function R(){O=(await a.get(E,"interactionMode")).composite,M=(await a.get(E,"promptCellConfig")).composite,B.forEach((e=>{var n,t,o;e.console.node.dataset.jpInteractionMode=O,t=null===(n=e.console.promptCell)||void 0===n?void 0:n.editor,o=M,void 0!==t&&(P(t,o,"autoClosingBrackets"),P(t,o,"cursorBlinkRate"),P(t,o,"fontFamily"),P(t,o,"fontSize"),P(t,o,"lineHeight"),P(t,o,"lineNumbers"),P(t,o,"lineWrap"),P(t,o,"matchBrackets"),P(t,o,"readOnly"),P(t,o,"insertSpaces"),P(t,o,"tabSize"),P(t,o,"wordWrapColumn"),P(t,o,"rulers"),P(t,o,"codeFolding"))}))}function F(){return null!==B.currentWidget&&B.currentWidget===w.currentWidget}a.pluginChanged.connect(((e,n)=>{n===E&&R()})),await R(),x.addCommand(y.autoClosingBrackets,{execute:async e=>{var n;M.autoClosingBrackets=!!(null!==(n=e.force)&&void 0!==n?n:!M.autoClosingBrackets),await a.set(E,"promptCellConfig",M)},label:v.__("Auto Close Brackets for Code Console Prompt"),isToggled:()=>M.autoClosingBrackets});let j=y.open;function A(e){const n=B.currentWidget;return!1!==e.activate&&n&&w.activateById(n.id),null!=n?n:null}x.addCommand(j,{execute:e=>{const n=e.path,t=B.find((e=>{var t;return(null===(t=e.console.sessionContext.session)||void 0===t?void 0:t.path)===n}));return t?(!1!==e.activate&&w.activateById(t.id),t):_.ready.then((()=>(0,g.find)(_.sessions.running(),(e=>e.path===n))?I(e):Promise.reject(`No running kernel session for path: ${n}`)))}}),j=y.create,x.addCommand(j,{label:e=>{var n,t,o,r;if(e.isPalette)return v.__("New Console");if(e.isLauncher&&e.kernelPreference){const a=e.kernelPreference;return null!==(r=null===(o=null===(t=null===(n=_.kernelspecs)||void 0===n?void 0:n.specs)||void 0===t?void 0:t.kernelspecs[a.name||""])||void 0===o?void 0:o.display_name)&&void 0!==r?r:""}return v.__("Console")},icon:e=>e.isPalette?void 0:m.consoleIcon,execute:e=>{var n;const t=null!==(n=e.basePath||e.cwd||(null==d?void 0:d.defaultBrowser.model.path))&&void 0!==n?n:"";return I(Object.assign({basePath:t},e))}}),x.addCommand(y.clear,{label:v.__("Clear Console Cells"),execute:e=>{const n=A(e);n&&n.console.clear()},isEnabled:F}),x.addCommand(y.runUnforced,{label:v.__("Run Cell (unforced)"),execute:e=>{const n=A(e);if(n)return n.console.execute()},isEnabled:F}),x.addCommand(y.runForced,{label:v.__("Run Cell (forced)"),execute:e=>{const n=A(e);if(n)return n.console.execute(!0)},isEnabled:F}),x.addCommand(y.linebreak,{label:v.__("Insert Line Break"),execute:e=>{const n=A(e);n&&n.console.insertLinebreak()},isEnabled:F}),x.addCommand(y.replaceSelection,{label:v.__("Replace Selection in Console"),execute:e=>{const n=A(e);if(!n)return;const t=e.text||"";n.console.replaceSelection(t)},isEnabled:F}),x.addCommand(y.interrupt,{label:v.__("Interrupt Kernel"),execute:e=>{var n;const t=A(e);if(!t)return;const o=null===(n=t.console.sessionContext.session)||void 0===n?void 0:n.kernel;return o?o.interrupt():void 0},isEnabled:F}),x.addCommand(y.restart,{label:v.__("Restart Kernel…"),execute:e=>{const n=A(e);if(n)return f.restart(n.console.sessionContext,c)},isEnabled:F}),x.addCommand(y.closeAndShutdown,{label:v.__("Close and Shut Down…"),execute:e=>{const n=A(e);if(n)return(0,r.showDialog)({title:v.__("Shut down the console?"),body:v.__('Are you sure you want to close "%1"?',n.title.label),buttons:[r.Dialog.cancelButton(),r.Dialog.warnButton()]}).then((e=>!!e.button.accept&&n.console.sessionContext.shutdown().then((()=>(n.dispose(),!0)))))},isEnabled:F}),x.addCommand(y.inject,{execute:e=>{const n=e.path;B.find((t=>{var o;return(null===(o=t.console.sessionContext.session)||void 0===o?void 0:o.path)===n&&(!1!==e.activate&&w.activateById(t.id),t.console.inject(e.code,e.metadata),!0)}))},isEnabled:F}),x.addCommand(y.changeKernel,{label:v.__("Change Kernel…"),execute:e=>{const n=A(e);if(n)return f.selectKernel(n.console.sessionContext,c)},isEnabled:F}),p&&[y.create,y.linebreak,y.clear,y.runUnforced,y.runForced,y.restart,y.interrupt,y.changeKernel,y.closeAndShutdown].forEach((e=>{p.addItem({command:e,category:S,args:{isPalette:!0}})})),u&&(u.fileMenu.closeAndCleaners.add({tracker:B,closeAndCleanupLabel:e=>v.__("Shutdown Console"),closeAndCleanup:e=>(0,r.showDialog)({title:v.__("Shut down the Console?"),body:v.__('Are you sure you want to close "%1"?',e.title.label),buttons:[r.Dialog.cancelButton(),r.Dialog.warnButton()]}).then((n=>n.button.accept?e.console.sessionContext.shutdown().then((()=>{e.dispose()})):void 0))}),u.kernelMenu.kernelUsers.add({tracker:B,restartKernelAndClearLabel:e=>v.__("Restart Kernel and Clear Console"),interruptKernel:e=>{var n;const t=null===(n=e.console.sessionContext.session)||void 0===n?void 0:n.kernel;return t?t.interrupt():Promise.resolve(void 0)},restartKernel:e=>f.restart(e.console.sessionContext,c),restartKernelAndClear:e=>f.restart(e.console.sessionContext).then((n=>(n&&e.console.clear(),n))),changeKernel:e=>f.selectKernel(e.console.sessionContext,c),shutdownKernel:e=>e.console.sessionContext.shutdown()}),u.runMenu.codeRunners.add({tracker:B,runLabel:e=>v.__("Run Cell"),run:e=>e.console.execute(!0)}),u.editMenu.clearers.add({tracker:B,clearCurrentLabel:e=>v.__("Clear Console Cell"),clearCurrent:e=>e.console.clear()}));const W={notebook:v.__("Execute with Shift+Enter"),terminal:v.__("Execute with Enter")};return x.addCommand(y.interactionMode,{label:e=>W[e.interactionMode]||"",execute:async e=>{try{await a.set(E,"interactionMode",e.interactionMode)}catch(e){console.error(`Failed to set ${E}:keyMap - ${e.message}`)}},isToggled:e=>e.interactionMode===O}),u&&u.helpMenu.kernelUsers.add({tracker:B,getKernel:e=>{var n;return null===(n=e.sessionContext.session)||void 0===n?void 0:n.kernel}}),B},autoStart:!0},x=[{id:"@jupyterlab/console-extension:factory",provides:s.ConsolePanel.IContentFactory,requires:[a.IEditorServices],autoStart:!0,activate:(e,n)=>{const t=n.factoryService.newInlineEditor;return new s.ConsolePanel.ContentFactory({editorFactory:t})}},_,f]}}]);
//# sourceMappingURL=6707.6590186e701563cfc56e.js.map