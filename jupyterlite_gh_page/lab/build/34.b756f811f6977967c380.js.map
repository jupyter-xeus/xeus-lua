{"version":3,"sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/async-mutex/index.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/localforage/dist/localforage.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../packages/kernel/node_modules/@jupyterlab/services/lib/kernel/serialize.js"],"names":["Error","E_CANCELED","Semaphore","constructor","_maxConcurrency","_cancelError","this","_queue","_value","acquire","locked","isLocked","ticketPromise","Promise","resolve","reject","push","_dispatch","runExclusive","callback","thisArg","_arguments","generator","value","release","P","fulfilled","step","next","e","rejected","result","done","then","apply","_currentReleaser","releaser","undefined","cancel","forEach","ticket","nextTicket","shift","released","Mutex","cancelError","_semaphore","module","exports","t","n","r","s","o","u","i","f","code","l","call","length","_dereq_","global","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","queue","oldQueue","len","task","g","self","window","immediate","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","resolver","TypeError","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","returnValue","getThen","obj","arguments","thenable","onError","onSuccess","tryCatch","status","out","prototype","error","reason","all","iterable","Object","toString","values","Array","resolved","allResolver","outValue","race","response","_typeof","Symbol","iterator","idb","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","getIDB","createBlob","parts","properties","Blob","name","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","append","getBlob","type","Promise$1","executeCallback","executeTwoCallbacks","errorCallback","normalizeKey","key","console","warn","String","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_checkBlobSupport","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","navigator","userAgent","match","matchedEdge","parseInt","_checkBlobSupportWithoutCaching","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","err","_getConnection","upgradeNeeded","forages","db","close","dbArgs","version","openreq","open","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_decodeBlob","encodedBlob","atob","_isEncodedBlob","__local_forage_encoded_blob","_fullyReady","_initReady","_dbInfo","createTransaction","mode","retries","tx","forage","_tryReconnect","asyncStorage","_driver","_initStorage","options","ready","initPromises","ignoreErrors","j","slice","_defaultConfig","k","_support","isSafari","openDatabase","test","platform","hasFetch","fetch","indexOf","IDBKeyRange","isIndexedDBValid","iterate","req","openCursor","iterationNumber","cursor","getItem","get","setItem","blobSupport","reader","FileReader","onloadend","base64","btoa","target","readAsBinaryString","store","removeItem","clear","count","advanced","openKeyCursor","advance","keys","dropInstance","currentConfig","config","dbPromise","deleteObjectStore","_forage2","deleteDatabase","onblocked","BASE_CHARS","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","p","buffer","bytes","bufferToString","base64String","substring","localforageSerializer","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","createDbTable","executeSql","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","_setItem","retriesLeft","originalValue","serializer","sqlError","QUOTA_ERR","getAllStoreNames","storeNames","item","webSQLStorage","dbInfoPromise","description","size","c","operationInfo","dropTable","operations","_getKeyPrefix","defaultConfig","keyPrefix","_isLocalStorageUsable","localStorageTestKey","localStorage","checkIfLocalStorageThrows","localStorageWrapper","isLocalStorageValid","keyPrefixLength","itemKey","includes","array","searchElement","x","y","isNaN","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","hasOwnProperty","localforage_js","LocalForage","driverTypeKey","instance","Constructor","_classCallCheck","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","complianceError","driverMethods","driverMethodName","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","configureMissingMethods","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","oldDriverSetDone","currentDriverIndex","driverPromiseLoop","initDriver","supports","libraryMethodsAndProperties","createInstance","defineProperty","DataView","nbufs","getUint32","offsets","jsonBytes","msg","TextDecoder","decode","buffers","start","stop","byteLength","deserializeBinary","_a","encoder","TextEncoder","origBuffers","jsonUtf8","encode","b","isView","msgBuf","view","setUint32","set","serializeBinary"],"mappings":"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","file":"34.b756f811f6977967c380.js","sourcesContent":["const E_TIMEOUT = new Error('timeout while waiting for mutex to become available');\nconst E_ALREADY_LOCKED = new Error('mutex already locked');\nconst E_CANCELED = new Error('request for lock canceled');\n\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Semaphore {\n    constructor(_maxConcurrency, _cancelError = E_CANCELED) {\n        this._maxConcurrency = _maxConcurrency;\n        this._cancelError = _cancelError;\n        this._queue = [];\n        if (_maxConcurrency <= 0) {\n            throw new Error('semaphore must be initialized to a positive value');\n        }\n        this._value = _maxConcurrency;\n    }\n    acquire() {\n        const locked = this.isLocked();\n        const ticketPromise = new Promise((resolve, reject) => this._queue.push({ resolve, reject }));\n        if (!locked)\n            this._dispatch();\n        return ticketPromise;\n    }\n    runExclusive(callback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [value, release] = yield this.acquire();\n            try {\n                return yield callback(value);\n            }\n            finally {\n                release();\n            }\n        });\n    }\n    isLocked() {\n        return this._value <= 0;\n    }\n    /** @deprecated Deprecated in 0.3.0, will be removed in 0.4.0. Use runExclusive instead. */\n    release() {\n        if (this._maxConcurrency > 1) {\n            throw new Error('this method is unavailable on semaphores with concurrency > 1; use the scoped release returned by acquire instead');\n        }\n        if (this._currentReleaser) {\n            const releaser = this._currentReleaser;\n            this._currentReleaser = undefined;\n            releaser();\n        }\n    }\n    cancel() {\n        this._queue.forEach((ticket) => ticket.reject(this._cancelError));\n        this._queue = [];\n    }\n    _dispatch() {\n        const nextTicket = this._queue.shift();\n        if (!nextTicket)\n            return;\n        let released = false;\n        this._currentReleaser = () => {\n            if (released)\n                return;\n            released = true;\n            this._value++;\n            this._dispatch();\n        };\n        nextTicket.resolve([this._value--, this._currentReleaser]);\n    }\n}\n\nvar __awaiter$1 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Mutex {\n    constructor(cancelError) {\n        this._semaphore = new Semaphore(1, cancelError);\n    }\n    acquire() {\n        return __awaiter$1(this, void 0, void 0, function* () {\n            const [, releaser] = yield this._semaphore.acquire();\n            return releaser;\n        });\n    }\n    runExclusive(callback) {\n        return this._semaphore.runExclusive(() => callback());\n    }\n    isLocked() {\n        return this._semaphore.isLocked();\n    }\n    /** @deprecated Deprecated in 0.3.0, will be removed in 0.4.0. Use runExclusive instead. */\n    release() {\n        this._semaphore.release();\n    }\n    cancel() {\n        return this._semaphore.cancel();\n    }\n}\n\nvar __awaiter$2 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction withTimeout(sync, timeout, timeoutError = E_TIMEOUT) {\n    return {\n        acquire: () => new Promise((resolve, reject) => __awaiter$2(this, void 0, void 0, function* () {\n            let isTimeout = false;\n            const handle = setTimeout(() => {\n                isTimeout = true;\n                reject(timeoutError);\n            }, timeout);\n            try {\n                const ticket = yield sync.acquire();\n                if (isTimeout) {\n                    const release = Array.isArray(ticket) ? ticket[1] : ticket;\n                    release();\n                }\n                else {\n                    clearTimeout(handle);\n                    resolve(ticket);\n                }\n            }\n            catch (e) {\n                if (!isTimeout) {\n                    clearTimeout(handle);\n                    reject(e);\n                }\n            }\n        })),\n        runExclusive(callback) {\n            return __awaiter$2(this, void 0, void 0, function* () {\n                let release = () => undefined;\n                try {\n                    const ticket = yield this.acquire();\n                    if (Array.isArray(ticket)) {\n                        release = ticket[1];\n                        return yield callback(ticket[0]);\n                    }\n                    else {\n                        release = ticket;\n                        return yield callback();\n                    }\n                }\n                finally {\n                    release();\n                }\n            });\n        },\n        /** @deprecated Deprecated in 0.3.0, will be removed in 0.4.0. Use runExclusive instead. */\n        release() {\n            sync.release();\n        },\n        cancel() {\n            return sync.cancel();\n        },\n        isLocked: () => sync.isLocked(),\n    };\n}\n\n// eslint-disable-next-lisne @typescript-eslint/explicit-module-boundary-types\nfunction tryAcquire(sync, alreadyAcquiredError = E_ALREADY_LOCKED) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return withTimeout(sync, 0, alreadyAcquiredError);\n}\n\nexport { E_ALREADY_LOCKED, E_CANCELED, E_TIMEOUT, Mutex, Semaphore, tryAcquire, withTimeout };\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.9.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = req.onblocked = function (err) {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(err);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","\"use strict\";\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serialize = exports.deserialize = void 0;\n/**\n * Deserialize and return the unpacked message.\n *\n * #### Notes\n * Handles JSON blob strings and binary messages.\n */\nfunction deserialize(data) {\n    let value;\n    if (typeof data === 'string') {\n        value = JSON.parse(data);\n    }\n    else {\n        value = deserializeBinary(data);\n    }\n    return value;\n}\nexports.deserialize = deserialize;\n/**\n * Serialize a kernel message for transport.\n *\n * #### Notes\n * If there is binary content, an `ArrayBuffer` is returned,\n * otherwise the message is converted to a JSON string.\n */\nfunction serialize(msg) {\n    var _a;\n    let value;\n    if ((_a = msg.buffers) === null || _a === void 0 ? void 0 : _a.length) {\n        value = serializeBinary(msg);\n    }\n    else {\n        value = JSON.stringify(msg);\n    }\n    return value;\n}\nexports.serialize = serialize;\n/**\n * Deserialize a binary message to a Kernel Message.\n */\nfunction deserializeBinary(buf) {\n    const data = new DataView(buf);\n    // read the header: 1 + nbufs 32b integers\n    const nbufs = data.getUint32(0);\n    const offsets = [];\n    if (nbufs < 2) {\n        throw new Error('Invalid incoming Kernel Message');\n    }\n    for (let i = 1; i <= nbufs; i++) {\n        offsets.push(data.getUint32(i * 4));\n    }\n    const jsonBytes = new Uint8Array(buf.slice(offsets[0], offsets[1]));\n    const msg = JSON.parse(new TextDecoder('utf8').decode(jsonBytes));\n    // the remaining chunks are stored as DataViews in msg.buffers\n    msg.buffers = [];\n    for (let i = 1; i < nbufs; i++) {\n        const start = offsets[i];\n        const stop = offsets[i + 1] || buf.byteLength;\n        msg.buffers.push(new DataView(buf.slice(start, stop)));\n    }\n    return msg;\n}\n/**\n * Implement the binary serialization protocol.\n *\n * Serialize Kernel message to ArrayBuffer.\n */\nfunction serializeBinary(msg) {\n    const offsets = [];\n    const buffers = [];\n    const encoder = new TextEncoder();\n    let origBuffers = [];\n    if (msg.buffers !== undefined) {\n        origBuffers = msg.buffers;\n        delete msg['buffers'];\n    }\n    const jsonUtf8 = encoder.encode(JSON.stringify(msg));\n    buffers.push(jsonUtf8.buffer);\n    for (let i = 0; i < origBuffers.length; i++) {\n        // msg.buffers elements could be either views or ArrayBuffers\n        // buffers elements are ArrayBuffers\n        const b = origBuffers[i];\n        buffers.push(ArrayBuffer.isView(b) ? b.buffer : b);\n    }\n    const nbufs = buffers.length;\n    offsets.push(4 * (nbufs + 1));\n    for (let i = 0; i + 1 < buffers.length; i++) {\n        offsets.push(offsets[offsets.length - 1] + buffers[i].byteLength);\n    }\n    const msgBuf = new Uint8Array(offsets[offsets.length - 1] + buffers[buffers.length - 1].byteLength);\n    // use DataView.setUint32 for network byte-order\n    const view = new DataView(msgBuf.buffer);\n    // write nbufs to first 4 bytes\n    view.setUint32(0, nbufs);\n    // write offsets to next 4 * nbufs bytes\n    for (let i = 0; i < offsets.length; i++) {\n        view.setUint32(4 * (i + 1), offsets[i]);\n    }\n    // write all the buffers at their respective offsets\n    for (let i = 0; i < buffers.length; i++) {\n        msgBuf.set(new Uint8Array(buffers[i]), offsets[i]);\n    }\n    return msgBuf.buffer;\n}\n//# sourceMappingURL=serialize.js.map"],"sourceRoot":""}