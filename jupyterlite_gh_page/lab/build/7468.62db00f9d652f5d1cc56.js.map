{"version":3,"sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/shared-models/lib/ymodels.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/shared-models/lib/utils.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lib0/array.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lib0/environment.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lib0/conditions.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lib0/function.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lib0/map.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lib0/math.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lib0/object.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lib0/storage.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lib0/string.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/process/browser.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/y-protocols/awareness.js"],"names":["deepCopy","o","JSON","parse","stringify","YDocument","constructor","this","isDisposed","ydoc","source","getText","undoManager","trackedOrigins","Set","awareness","_changed","Signal","transact","f","undoable","dispose","destroy","canUndo","undoStack","length","canRedo","redoStack","undo","redo","clearUndoHistory","clear","YFile","super","_modelObserver","event","changes","sourceChange","delta","emit","ysource","observe","getSource","toString","setSource","value","ytext","delete","insert","updateSource","start","end","YNotebook","_onYCellsChanged","added","forEach","item","type","content","_ycellMapping","has","set","createCellFromType","cell","get","_notebook","_undoManager","deleted","model","index","cellsChange","d","insertedCells","map","ycell","push","cells","splice","retain","ycells","getArray","ymeta","getMap","ymodel","Map","nbformat_minor","nbformat","toArray","getCell","insertCell","insertCells","moveCell","fromIndex","toIndex","fromCell","clone","deleteCell","deleteCellRange","from","to","getMetadata","meta","orig_nbformat","setMetadata","updateMetadata","Object","assign","unobserve","YCodeCell","YMarkdownCell","YRawCell","Error","createStandaloneCell","cellType","id","createStandalone","YBaseCell","isStandalone","events","sourceEvent","find","target","outputEvent","outputsChange","modelEvent","keysChanged","change","keys","metadataChange","oldValue","undefined","newValue","executionCountChange","_prevSourceLength","observeDeep","_a","notebook","doc","UUID","prototype","cell_type","create","getId","Self","unobserveDeep","getAttachments","setAttachments","attachments","toJSON","metadata","count","getOutputs","setOutputs","outputs","youtputs","updateOutputs","fin","execution_count","convertYMapEventToMapChange","key","action","createMutex","token","last","arr","appendTo","dest","src","i","Array","equalFlat","a","b","every","isNode","process","release","test","name","isBrowser","window","params","navigator","platform","args","computeParams","pargs","argv","currParamName","parg","location","search","slice","split","kv","string","getParam","defaultVal","getVariable","v","toUpperCase","storage","hasParam","callAll","fs","nop","equalityFlat","equalityDeep","equalityStrict","ArrayBuffer","Uint8Array","byteLength","size","copy","m","r","k","setIfUndefined","createT","res","any","floor","Math","abs","ceil","log10","imul","round","add","log2","log","sqrt","min","max","isNegativeZero","Number","isNaN","pow","sign","n","obj","results","hasProperty","hasOwnProperty","call","val","_localStorage","setItem","getItem","usePolyfill","localStorage","e","varStorage","onChange","eventHandler","addEventListener","fromCharCode","String","trimLeftRegex","fromCodePoint","fromCamelCaseRegex","fromCamelCase","s","separator","replace","trimLeft","match","toLowerCase","utf8TextEncoder","TextEncoder","encodeUtf8","str","encode","encodedString","unescape","encodeURIComponent","len","buf","codePointAt","utf8TextDecoder","TextDecoder","fatal","ignoreBOM","decode","cachedSetTimeout","cachedClearTimeout","module","exports","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","run","marker","runClearTimeout","Item","array","noop","nextTick","arguments","apply","title","browser","env","version","versions","on","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","Awareness","clientID","states","_checkInterval","setInterval","now","getLocalState","outdatedTimeout","lastUpdated","setLocalState","remove","clientid","removeAwarenessStates","clearInterval","state","currLocalMeta","clock","prevState","updated","filteredUpdated","removed","setLocalStateField","field","getStates","clients","origin","curMeta","encodeAwarenessUpdate","encoder","applyAwarenessUpdate","update","decoder","timestamp","clientMeta","currClock"],"mappings":"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","file":"7468.62db00f9d652f5d1cc56.js","sourcesContent":["/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\nimport * as nbformat from '@jupyterlab/nbformat';\nimport { UUID } from '@lumino/coreutils';\nimport { Signal } from '@lumino/signaling';\nimport { Awareness } from 'y-protocols/awareness';\nimport * as Y from 'yjs';\nconst deepCopy = (o) => JSON.parse(JSON.stringify(o));\nexport class YDocument {\n    constructor() {\n        this.isDisposed = false;\n        this.ydoc = new Y.Doc();\n        this.source = this.ydoc.getText('source');\n        this.undoManager = new Y.UndoManager([this.source], {\n            trackedOrigins: new Set([this])\n        });\n        this.awareness = new Awareness(this.ydoc);\n        this._changed = new Signal(this);\n    }\n    /**\n     * Perform a transaction. While the function f is called, all changes to the shared\n     * document are bundled into a single event.\n     */\n    transact(f, undoable = true) {\n        this.ydoc.transact(f, undoable ? this : null);\n    }\n    /**\n     * Dispose of the resources.\n     */\n    dispose() {\n        this.isDisposed = true;\n        this.ydoc.destroy();\n    }\n    /**\n     * Whether the object can undo changes.\n     */\n    canUndo() {\n        return this.undoManager.undoStack.length > 0;\n    }\n    /**\n     * Whether the object can redo changes.\n     */\n    canRedo() {\n        return this.undoManager.redoStack.length > 0;\n    }\n    /**\n     * Undo an operation.\n     */\n    undo() {\n        this.undoManager.undo();\n    }\n    /**\n     * Redo an operation.\n     */\n    redo() {\n        this.undoManager.redo();\n    }\n    /**\n     * Clear the change stack.\n     */\n    clearUndoHistory() {\n        this.undoManager.clear();\n    }\n    /**\n     * The changed signal.\n     */\n    get changed() {\n        return this._changed;\n    }\n}\nexport class YFile extends YDocument {\n    constructor() {\n        super();\n        /**\n         * Handle a change to the ymodel.\n         */\n        this._modelObserver = (event) => {\n            const changes = {};\n            changes.sourceChange = event.changes.delta;\n            this._changed.emit(changes);\n        };\n        this.ysource = this.ydoc.getText('source');\n        this.ysource.observe(this._modelObserver);\n    }\n    static create() {\n        return new YFile();\n    }\n    /**\n     * Gets cell's source.\n     *\n     * @returns Cell's source.\n     */\n    getSource() {\n        return this.ysource.toString();\n    }\n    /**\n     * Sets cell's source.\n     *\n     * @param value: New source.\n     */\n    setSource(value) {\n        this.transact(() => {\n            const ytext = this.ysource;\n            ytext.delete(0, ytext.length);\n            ytext.insert(0, value);\n        });\n    }\n    /**\n     * Replace content from `start' to `end` with `value`.\n     *\n     * @param start: The start index of the range to replace (inclusive).\n     *\n     * @param end: The end index of the range to replace (exclusive).\n     *\n     * @param value: New source (optional).\n     */\n    updateSource(start, end, value = '') {\n        this.transact(() => {\n            const ysource = this.ysource;\n            // insert and then delete.\n            // This ensures that the cursor position is adjusted after the replaced content.\n            ysource.insert(start, value);\n            ysource.delete(start + value.length, end - start);\n        });\n    }\n}\n/**\n * Shared implementation of the Shared Document types.\n *\n * Shared cells can be inserted into a SharedNotebook.\n * Shared cells only start emitting events when they are connected to a SharedNotebook.\n *\n * \"Standalone\" cells must not be inserted into a (Shared)Notebook.\n * Standalone cells emit events immediately after they have been created, but they must not\n * be included into a (Shared)Notebook.\n */\nexport class YNotebook extends YDocument {\n    constructor() {\n        super();\n        /**\n         * Handle a change to the list of cells.\n         */\n        this._onYCellsChanged = (event) => {\n            // update the type⇔cell mapping by iterating through the added/removed types\n            event.changes.added.forEach(item => {\n                const type = item.content.type;\n                if (!this._ycellMapping.has(type)) {\n                    this._ycellMapping.set(type, createCellFromType(type));\n                }\n                const cell = this._ycellMapping.get(type);\n                cell._notebook = this;\n                cell._undoManager = this.undoManager;\n            });\n            event.changes.deleted.forEach(item => {\n                const type = item.content.type;\n                const model = this._ycellMapping.get(type);\n                if (model) {\n                    model.dispose();\n                    this._ycellMapping.delete(type);\n                }\n            });\n            let index = 0;\n            // this reflects the event.changes.delta, but replaces the content of delta.insert with ycells\n            const cellsChange = [];\n            event.changes.delta.forEach((d) => {\n                if (d.insert != null) {\n                    const insertedCells = d.insert.map((ycell) => this._ycellMapping.get(ycell));\n                    cellsChange.push({ insert: insertedCells });\n                    this.cells.splice(index, 0, ...insertedCells);\n                    index += d.insert.length;\n                }\n                else if (d.delete != null) {\n                    cellsChange.push(d);\n                    this.cells.splice(index, d.delete);\n                }\n                else if (d.retain != null) {\n                    cellsChange.push(d);\n                    index += d.retain;\n                }\n            });\n            this._changed.emit({\n                cellsChange: cellsChange\n            });\n        };\n        this.ycells = this.ydoc.getArray('cells');\n        this.ymeta = this.ydoc.getMap('meta');\n        this.ymodel = this.ydoc.getMap('model');\n        this.undoManager = new Y.UndoManager([this.ycells], {\n            trackedOrigins: new Set([this])\n        });\n        this._ycellMapping = new Map();\n        this.nbformat_minor = nbformat.MINOR_VERSION;\n        this.nbformat = nbformat.MAJOR_VERSION;\n        this.ycells.observe(this._onYCellsChanged);\n        this.cells = this.ycells.toArray().map(ycell => {\n            if (!this._ycellMapping.has(ycell)) {\n                this._ycellMapping.set(ycell, createCellFromType(ycell));\n            }\n            return this._ycellMapping.get(ycell);\n        });\n    }\n    /**\n     * Get a shared cell by index.\n     *\n     * @param index: Cell's position.\n     *\n     * @returns The requested shared cell.\n     */\n    getCell(index) {\n        return this.cells[index];\n    }\n    /**\n     * Insert a shared cell into a specific position.\n     *\n     * @param index: Cell's position.\n     *\n     * @param cell: Cell to insert.\n     */\n    insertCell(index, cell) {\n        this.insertCells(index, [cell]);\n    }\n    /**\n     * Insert a list of shared cells into a specific position.\n     *\n     * @param index: Position to insert the cells.\n     *\n     * @param cells: Array of shared cells to insert.\n     */\n    insertCells(index, cells) {\n        cells.forEach(cell => {\n            this._ycellMapping.set(cell.ymodel, cell);\n            // cell.yawareness = this.yawareness;\n            // cell.yUndoManager = this.yUndoManager;\n        });\n        this.transact(() => {\n            this.ycells.insert(index, cells.map(cell => cell.ymodel));\n        });\n    }\n    /**\n     * Move a cell.\n     *\n     * @param fromIndex: Index of the cell to move.\n     *\n     * @param toIndex: New position of the cell.\n     */\n    moveCell(fromIndex, toIndex) {\n        this.transact(() => {\n            const fromCell = this.getCell(fromIndex).clone();\n            this.deleteCell(fromIndex);\n            this.insertCell(toIndex, fromCell);\n        });\n    }\n    /**\n     * Remove a cell.\n     *\n     * @param index: Index of the cell to remove.\n     */\n    deleteCell(index) {\n        this.deleteCellRange(index, index + 1);\n    }\n    /**\n     * Remove a range of cells.\n     *\n     * @param from: The start index of the range to remove (inclusive).\n     *\n     * @param to: The end index of the range to remove (exclusive).\n     */\n    deleteCellRange(from, to) {\n        this.transact(() => {\n            this.ycells.delete(from, to - from);\n        });\n    }\n    /**\n     * Returns the metadata associated with the notebook.\n     *\n     * @returns Notebook's metadata.\n     */\n    getMetadata() {\n        const meta = this.ymeta.get('metadata');\n        return meta ? deepCopy(meta) : { orig_nbformat: 1 };\n    }\n    /**\n     * Sets the metadata associated with the notebook.\n     *\n     * @param metadata: Notebook's metadata.\n     */\n    setMetadata(value) {\n        this.ymeta.set('metadata', deepCopy(value));\n    }\n    /**\n     * Updates the metadata associated with the notebook.\n     *\n     * @param value: Metadata's attribute to update.\n     */\n    updateMetadata(value) {\n        this.ymeta.set('metadata', Object.assign({}, this.getMetadata(), value));\n    }\n    /**\n     * Create a new YNotebook.\n     */\n    static create() {\n        return new YNotebook();\n    }\n    /**\n     * Dispose of the resources.\n     */\n    dispose() {\n        this.ycells.unobserve(this._onYCellsChanged);\n    }\n}\n/**\n * Create a new shared cell given the type.\n */\nexport const createCellFromType = (type) => {\n    switch (type.get('cell_type')) {\n        case 'code':\n            return new YCodeCell(type);\n        case 'markdown':\n            return new YMarkdownCell(type);\n        case 'raw':\n            return new YRawCell(type);\n        default:\n            throw new Error('Found unknown cell type');\n    }\n};\n/**\n * Create a new standalone cell given the type.\n */\nexport const createStandaloneCell = (cellType, id) => {\n    switch (cellType) {\n        case 'markdown':\n            return YMarkdownCell.createStandalone(id);\n        case 'code':\n            return YCodeCell.createStandalone(id);\n        default:\n            // raw\n            return YRawCell.createStandalone(id);\n    }\n};\nexport class YBaseCell {\n    constructor(ymodel) {\n        /**\n         * The notebook that this cell belongs to.\n         */\n        this._notebook = null;\n        /**\n         * Whether the cell is standalone or not.\n         *\n         * If the cell is standalone. It cannot be\n         * inserted into a YNotebook because the Yjs model is already\n         * attached to an anonymous Y.Doc instance.\n         */\n        this.isStandalone = false;\n        /**\n         * Handle a change to the ymodel.\n         */\n        this._modelObserver = (events) => {\n            const changes = {};\n            const sourceEvent = events.find(event => event.target === this.ymodel.get('source'));\n            if (sourceEvent) {\n                changes.sourceChange = sourceEvent.changes.delta;\n            }\n            const outputEvent = events.find(event => event.target === this.ymodel.get('outputs'));\n            if (outputEvent) {\n                changes.outputsChange = outputEvent.changes.delta;\n            }\n            const modelEvent = events.find(event => event.target === this.ymodel);\n            if (modelEvent && modelEvent.keysChanged.has('metadata')) {\n                const change = modelEvent.changes.keys.get('metadata');\n                changes.metadataChange = {\n                    oldValue: (change === null || change === void 0 ? void 0 : change.oldValue) ? change.oldValue : undefined,\n                    newValue: this.getMetadata()\n                };\n            }\n            if (modelEvent && modelEvent.keysChanged.has('execution_count')) {\n                const change = modelEvent.changes.keys.get('execution_count');\n                changes.executionCountChange = {\n                    oldValue: change.oldValue,\n                    newValue: this.ymodel.get('execution_count')\n                };\n            }\n            // The model allows us to replace the complete source with a new string. We express this in the Delta format\n            // as a replace of the complete string.\n            const ysource = this.ymodel.get('source');\n            if (modelEvent && modelEvent.keysChanged.has('source')) {\n                changes.sourceChange = [\n                    { delete: this._prevSourceLength },\n                    { insert: ysource.toString() }\n                ];\n            }\n            this._prevSourceLength = ysource.length;\n            this._changed.emit(changes);\n        };\n        this.isDisposed = false;\n        this._undoManager = null;\n        this._changed = new Signal(this);\n        this.ymodel = ymodel;\n        const ysource = ymodel.get('source');\n        this._prevSourceLength = ysource ? ysource.length : 0;\n        this.ymodel.observeDeep(this._modelObserver);\n    }\n    get ysource() {\n        return this.ymodel.get('source');\n    }\n    get awareness() {\n        var _a;\n        return ((_a = this.notebook) === null || _a === void 0 ? void 0 : _a.awareness) || null;\n    }\n    /**\n     * Perform a transaction. While the function f is called, all changes to the shared\n     * document are bundled into a single event.\n     */\n    transact(f, undoable = true) {\n        this.notebook && undoable\n            ? this.notebook.transact(f)\n            : this.ymodel.doc.transact(f, this);\n    }\n    /**\n     * The notebook that this cell belongs to.\n     */\n    get undoManager() {\n        return this.notebook ? this.notebook.undoManager : this._undoManager;\n    }\n    /**\n     * Undo an operation.\n     */\n    undo() {\n        var _a;\n        (_a = this.undoManager) === null || _a === void 0 ? void 0 : _a.undo();\n    }\n    /**\n     * Redo an operation.\n     */\n    redo() {\n        var _a;\n        (_a = this.undoManager) === null || _a === void 0 ? void 0 : _a.redo();\n    }\n    /**\n     * Whether the object can undo changes.\n     */\n    canUndo() {\n        return !!this.undoManager && this.undoManager.undoStack.length > 0;\n    }\n    /**\n     * Whether the object can redo changes.\n     */\n    canRedo() {\n        return !!this.undoManager && this.undoManager.redoStack.length > 0;\n    }\n    /**\n     * Clear the change stack.\n     */\n    clearUndoHistory() {\n        var _a;\n        (_a = this.undoManager) === null || _a === void 0 ? void 0 : _a.clear();\n    }\n    /**\n     * The notebook that this cell belongs to.\n     */\n    get notebook() {\n        return this._notebook;\n    }\n    /**\n     * Create a new YRawCell that can be inserted into a YNotebook\n     */\n    static create(id = UUID.uuid4()) {\n        const ymodel = new Y.Map();\n        const ysource = new Y.Text();\n        ymodel.set('source', ysource);\n        ymodel.set('metadata', {});\n        ymodel.set('cell_type', this.prototype.cell_type);\n        ymodel.set('id', id);\n        return new this(ymodel);\n    }\n    /**\n     * Create a new YRawCell that works standalone. It cannot be\n     * inserted into a YNotebook because the Yjs model is already\n     * attached to an anonymous Y.Doc instance.\n     */\n    static createStandalone(id) {\n        const cell = this.create(id);\n        cell.isStandalone = true;\n        new Y.Doc().getArray().insert(0, [cell.ymodel]);\n        cell._undoManager = new Y.UndoManager([cell.ymodel], {\n            trackedOrigins: new Set([cell])\n        });\n        return cell;\n    }\n    /**\n     * Clone the cell.\n     *\n     * @todo clone should only be available in the specific implementations i.e. ISharedCodeCell\n     */\n    clone() {\n        const ymodel = new Y.Map();\n        const ysource = new Y.Text(this.getSource());\n        ymodel.set('source', ysource);\n        ymodel.set('metadata', this.getMetadata());\n        ymodel.set('cell_type', this.cell_type);\n        ymodel.set('id', this.getId());\n        const Self = this.constructor;\n        return new Self(ymodel);\n    }\n    /**\n     * The changed signal.\n     */\n    get changed() {\n        return this._changed;\n    }\n    /**\n     * Dispose of the resources.\n     */\n    dispose() {\n        this.ymodel.unobserveDeep(this._modelObserver);\n    }\n    /**\n     * Gets the cell attachments.\n     *\n     * @returns The cell attachments.\n     */\n    getAttachments() {\n        return this.ymodel.get('attachments');\n    }\n    /**\n     * Sets the cell attachments\n     *\n     * @param attachments: The cell attachments.\n     */\n    setAttachments(attachments) {\n        this.transact(() => {\n            if (attachments == null) {\n                this.ymodel.set('attachments', attachments);\n            }\n            else {\n                this.ymodel.delete('attachments');\n            }\n        });\n    }\n    /**\n     * Get cell id.\n     *\n     * @returns Cell id\n     */\n    getId() {\n        return this.ymodel.get('id');\n    }\n    /**\n     * Gets cell's source.\n     *\n     * @returns Cell's source.\n     */\n    getSource() {\n        return this.ymodel.get('source').toString();\n    }\n    /**\n     * Sets cell's source.\n     *\n     * @param value: New source.\n     */\n    setSource(value) {\n        const ytext = this.ymodel.get('source');\n        this.transact(() => {\n            ytext.delete(0, ytext.length);\n            ytext.insert(0, value);\n        });\n        // @todo Do we need proper replace semantic? This leads to issues in editor bindings because they don't switch source.\n        // this.ymodel.set('source', new Y.Text(value));\n    }\n    /**\n     * Replace content from `start' to `end` with `value`.\n     *\n     * @param start: The start index of the range to replace (inclusive).\n     *\n     * @param end: The end index of the range to replace (exclusive).\n     *\n     * @param value: New source (optional).\n     */\n    updateSource(start, end, value = '') {\n        this.transact(() => {\n            const ysource = this.ysource;\n            // insert and then delete.\n            // This ensures that the cursor position is adjusted after the replaced content.\n            ysource.insert(start, value);\n            ysource.delete(start + value.length, end - start);\n        });\n    }\n    /**\n     * The type of the cell.\n     */\n    get cell_type() {\n        throw new Error('A YBaseCell must not be constructed');\n    }\n    /**\n     * Returns the metadata associated with the notebook.\n     *\n     * @returns Notebook's metadata.\n     */\n    getMetadata() {\n        return deepCopy(this.ymodel.get('metadata'));\n    }\n    /**\n     * Sets the metadata associated with the notebook.\n     *\n     * @param metadata: Notebook's metadata.\n     */\n    setMetadata(value) {\n        this.transact(() => {\n            this.ymodel.set('metadata', deepCopy(value));\n        });\n    }\n    /**\n     * Serialize the model to JSON.\n     */\n    toJSON() {\n        return {\n            id: this.getId(),\n            cell_type: this.cell_type,\n            source: this.getSource(),\n            metadata: this.getMetadata()\n        };\n    }\n}\nexport class YCodeCell extends YBaseCell {\n    /**\n     * The type of the cell.\n     */\n    get cell_type() {\n        return 'code';\n    }\n    /**\n     * The code cell's prompt number. Will be null if the cell has not been run.\n     */\n    get execution_count() {\n        return this.ymodel.get('execution_count');\n    }\n    /**\n     * The code cell's prompt number. Will be null if the cell has not been run.\n     */\n    set execution_count(count) {\n        this.transact(() => {\n            this.ymodel.set('execution_count', count);\n        });\n    }\n    /**\n     * Execution, display, or stream outputs.\n     */\n    getOutputs() {\n        return deepCopy(this.ymodel.get('outputs').toArray());\n    }\n    /**\n     * Replace all outputs.\n     */\n    setOutputs(outputs) {\n        const youtputs = this.ymodel.get('outputs');\n        this.transact(() => {\n            youtputs.delete(0, youtputs.length);\n            youtputs.insert(0, outputs);\n        });\n    }\n    /**\n     * Replace content from `start' to `end` with `outputs`.\n     *\n     * @param start: The start index of the range to replace (inclusive).\n     *\n     * @param end: The end index of the range to replace (exclusive).\n     *\n     * @param outputs: New outputs (optional).\n     */\n    updateOutputs(start, end, outputs = []) {\n        const youtputs = this.ymodel.get('outputs');\n        const fin = end < youtputs.length ? end - start : youtputs.length - start;\n        this.transact(() => {\n            youtputs.delete(start, fin);\n            youtputs.insert(start, outputs);\n        });\n    }\n    /**\n     * Create a new YCodeCell that can be inserted into a YNotebook\n     */\n    static create(id) {\n        const cell = super.create(id);\n        cell.ymodel.set('execution_count', 0); // for some default value\n        cell.ymodel.set('outputs', new Y.Array());\n        return cell;\n    }\n    /**\n     * Create a new YCodeCell that works standalone. It cannot be\n     * inserted into a YNotebook because the Yjs model is already\n     * attached to an anonymous Y.Doc instance.\n     */\n    static createStandalone(id) {\n        const cell = super.createStandalone(id);\n        cell.ymodel.set('execution_count', null); // for some default value\n        cell.ymodel.set('outputs', new Y.Array());\n        return cell;\n    }\n    /**\n     * Create a new YCodeCell that can be inserted into a YNotebook\n     *\n     * @todo clone should only be available in the specific implementations i.e. ISharedCodeCell\n     */\n    clone() {\n        const cell = super.clone();\n        const youtputs = new Y.Array();\n        youtputs.insert(0, this.getOutputs());\n        cell.ymodel.set('execution_count', this.execution_count); // for some default value\n        cell.ymodel.set('outputs', youtputs);\n        return cell;\n    }\n    /**\n     * Serialize the model to JSON.\n     */\n    toJSON() {\n        return {\n            id: this.getId(),\n            cell_type: 'code',\n            source: this.getSource(),\n            metadata: this.getMetadata(),\n            outputs: this.getOutputs(),\n            execution_count: this.execution_count\n        };\n    }\n}\nexport class YRawCell extends YBaseCell {\n    /**\n     * Create a new YRawCell that can be inserted into a YNotebook\n     */\n    static create(id) {\n        return super.create(id);\n    }\n    /**\n     * Create a new YRawCell that works standalone. It cannot be\n     * inserted into a YNotebook because the Yjs model is already\n     * attached to an anonymous Y.Doc instance.\n     */\n    static createStandalone(id) {\n        return super.createStandalone(id);\n    }\n    /**\n     * String identifying the type of cell.\n     */\n    get cell_type() {\n        return 'raw';\n    }\n    /**\n     * Serialize the model to JSON.\n     */\n    toJSON() {\n        return {\n            id: this.getId(),\n            cell_type: 'raw',\n            source: this.getSource(),\n            metadata: this.getMetadata(),\n            attachments: this.getAttachments()\n        };\n    }\n}\nexport class YMarkdownCell extends YBaseCell {\n    /**\n     * Create a new YMarkdownCell that can be inserted into a YNotebook\n     */\n    static create(id) {\n        return super.create(id);\n    }\n    /**\n     * Create a new YMarkdownCell that works standalone. It cannot be\n     * inserted into a YNotebook because the Yjs model is already\n     * attached to an anonymous Y.Doc instance.\n     */\n    static createStandalone(id) {\n        return super.createStandalone(id);\n    }\n    /**\n     * String identifying the type of cell.\n     */\n    get cell_type() {\n        return 'markdown';\n    }\n    /**\n     * Serialize the model to JSON.\n     */\n    toJSON() {\n        return {\n            id: this.getId(),\n            cell_type: 'markdown',\n            source: this.getSource(),\n            metadata: this.getMetadata(),\n            attachments: this.getAttachments()\n        };\n    }\n}\nexport default YNotebook;\n//# sourceMappingURL=ymodels.js.map","/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\nexport function convertYMapEventToMapChange(event) {\n    let changes = new Map();\n    event.changes.keys.forEach((event, key) => {\n        changes.set(key, {\n            action: event.action,\n            oldValue: event.oldValue,\n            newValue: this.ymeta.get(key)\n        });\n    });\n    return changes;\n}\n/**\n * Creates a mutual exclude function with the following property:\n *\n * ```js\n * const mutex = createMutex()\n * mutex(() => {\n *   // This function is immediately executed\n *   mutex(() => {\n *     // This function is not executed, as the mutex is already active.\n *   })\n * })\n * ```\n */\nexport const createMutex = () => {\n    let token = true;\n    return (f) => {\n        if (token) {\n            token = false;\n            try {\n                f();\n            }\n            finally {\n                token = true;\n            }\n        }\n    };\n};\n//# sourceMappingURL=utils.js.map","/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {Array<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n *\n * @param {Array<ITEM>} arr\n * @param {function(ITEM, number, Array<ITEM>):boolean} f\n * @return {boolean}\n */\nexport const every = (arr, f) => arr.every(f)\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template S\n * @param {Array<S>} arr\n * @param {function(S, number, Array<S>):boolean} f\n * @return {boolean}\n */\nexport const some = (arr, f) => arr.some(f)\n\n/**\n * @template ELEM\n *\n * @param {Array<ELEM>} a\n * @param {Array<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => arr.reduce((acc, val) => acc.concat(val), [])\n","/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\n\n/* istanbul ignore next */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release && /node|io\\.js/.test(process.release.name)\n/* istanbul ignore next */\nexport const isBrowser = typeof window !== 'undefined' && !isNode\n/* istanbul ignore next */\nexport const isMac = typeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* istanbul ignore next */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      /* istanbul ignore next */\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n    // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create()\n      // eslint-disable-next-line no-undef\n      ;(location.search || '?').slice(1).split('&').forEach(kv => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    } else {\n      params = map.create()\n    }\n  }\n  return params\n}\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nexport const hasParam = name => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* istanbul ignore next */\nexport const getParam = (name, defaultVal) => computeParams().get(name) || defaultVal\n// export const getArgs = name => computeParams() && args\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* istanbul ignore next */\nexport const getVariable = name => isNode ? conditions.undefinedToNull(process.env[name.toUpperCase()]) : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\nexport const getConf = name => computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nexport const hasConf = name => hasParam('--' + name) || getVariable(name) !== null\n\n/* istanbul ignore next */\nexport const production = hasConf('production')\n","/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* istanbul ignore next */\nexport const undefinedToNull = v => v === undefined ? null : v\n","/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((a instanceof Array && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a == null || b == null) {\n    return equalityStrict(a, b)\n  }\n  if (a.constructor !== b.constructor) {\n    return false\n  }\n  if (a === b) {\n    return true\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n}\n","/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template X,Y\n * @param {Map<X,Y>} m\n * @return {Map<X,Y>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template T,K\n * @param {Map<K, T>} map\n * @param {K} key\n * @param {function():T} createT\n * @return {T}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n","/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n","/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nexport const create = () => Object.create(null)\n\n/**\n * Object.assign\n */\nexport const assign = Object.assign\n\n/**\n * @param {Object<string,any>} obj\n */\nexport const keys = Object.keys\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):any} f\n */\nexport const forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key)\n  }\n}\n\n/**\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nexport const map = (obj, f) => {\n  const results = []\n  for (const key in obj) {\n    results.push(f(obj[key], key))\n  }\n  return results\n}\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const length = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|symbol} key\n * @return {boolean}\n */\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a === b || (length(a) === length(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\n","/* global localStorage, addEventListener */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* istanbul ignore next */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map()\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue)\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n\n/* istanbul ignore next */\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill()\nlet usePolyfill = true\n\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  /* istanbul ignore next */\n  if (typeof localStorage !== 'undefined') {\n    _localStorage = localStorage\n    usePolyfill = false\n  }\n} catch (e) { }\n\n/* istanbul ignore next */\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\nexport const varStorage = _localStorage\n\n/* istanbul ignore next */\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\n","/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* istanbul ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* istanbul ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* istanbul ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* istanbul ignore next */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* istanbul ignore next */\n  utf8TextDecoder = null\n}\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* istanbul ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * @module awareness-protocol\n */\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as time from 'lib0/time'\nimport * as math from 'lib0/math'\nimport { Observable } from 'lib0/observable'\nimport * as f from 'lib0/function'\nimport * as Y from 'yjs' // eslint-disable-line\n\nexport const outdatedTimeout = 30000\n\n/**\n * @typedef {Object} MetaClientState\n * @property {number} MetaClientState.clock\n * @property {number} MetaClientState.lastUpdated unix timestamp\n */\n\n/**\n * The Awareness class implements a simple shared state protocol that can be used for non-persistent data like awareness information\n * (cursor, username, status, ..). Each client can update its own local state and listen to state changes of\n * remote clients. Every client may set a state of a remote peer to `null` to mark the client as offline.\n *\n * Each client is identified by a unique client id (something we borrow from `doc.clientID`). A client can override\n * its own state by propagating a message with an increasing timestamp (`clock`). If such a message is received, it is\n * applied if the known state of that client is older than the new state (`clock < newClock`). If a client thinks that\n * a remote client is offline, it may propagate a message with\n * `{ clock: currentClientClock, state: null, client: remoteClient }`. If such a\n * message is received, and the known clock of that client equals the received clock, it will override the state with `null`.\n *\n * Before a client disconnects, it should propagate a `null` state with an updated clock.\n *\n * Awareness states must be updated every 30 seconds. Otherwise the Awareness instance will delete the client state.\n *\n * @extends {Observable<string>}\n */\nexport class Awareness extends Observable {\n  /**\n   * @param {Y.Doc} doc\n   */\n  constructor (doc) {\n    super()\n    this.doc = doc\n    /**\n     * @type {number}\n     */\n    this.clientID = doc.clientID\n    /**\n     * Maps from client id to client state\n     * @type {Map<number, Object<string, any>>}\n     */\n    this.states = new Map()\n    /**\n     * @type {Map<number, MetaClientState>}\n     */\n    this.meta = new Map()\n    this._checkInterval = /** @type {any} */ (setInterval(() => {\n      const now = time.getUnixTime()\n      if (this.getLocalState() !== null && (outdatedTimeout / 2 <= now - /** @type {{lastUpdated:number}} */ (this.meta.get(this.clientID)).lastUpdated)) {\n        // renew local clock\n        this.setLocalState(this.getLocalState())\n      }\n      /**\n       * @type {Array<number>}\n       */\n      const remove = []\n      this.meta.forEach((meta, clientid) => {\n        if (clientid !== this.clientID && outdatedTimeout <= now - meta.lastUpdated && this.states.has(clientid)) {\n          remove.push(clientid)\n        }\n      })\n      if (remove.length > 0) {\n        removeAwarenessStates(this, remove, 'timeout')\n      }\n    }, math.floor(outdatedTimeout / 10)))\n    doc.on('destroy', () => {\n      this.destroy()\n    })\n    this.setLocalState({})\n  }\n\n  destroy () {\n    this.emit('destroy', [this])\n    this.setLocalState(null)\n    super.destroy()\n    clearInterval(this._checkInterval)\n  }\n\n  /**\n   * @return {Object<string,any>|null}\n   */\n  getLocalState () {\n    return this.states.get(this.clientID) || null\n  }\n\n  /**\n   * @param {Object<string,any>|null} state\n   */\n  setLocalState (state) {\n    const clientID = this.clientID\n    const currLocalMeta = this.meta.get(clientID)\n    const clock = currLocalMeta === undefined ? 0 : currLocalMeta.clock + 1\n    const prevState = this.states.get(clientID)\n    if (state === null) {\n      this.states.delete(clientID)\n    } else {\n      this.states.set(clientID, state)\n    }\n    this.meta.set(clientID, {\n      clock,\n      lastUpdated: time.getUnixTime()\n    })\n    const added = []\n    const updated = []\n    const filteredUpdated = []\n    const removed = []\n    if (state === null) {\n      removed.push(clientID)\n    } else if (prevState == null) {\n      if (state != null) {\n        added.push(clientID)\n      }\n    } else {\n      updated.push(clientID)\n      if (!f.equalityDeep(prevState, state)) {\n        filteredUpdated.push(clientID)\n      }\n    }\n    if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n      this.emit('change', [{ added, updated: filteredUpdated, removed }, 'local'])\n    }\n    this.emit('update', [{ added, updated, removed }, 'local'])\n  }\n\n  /**\n   * @param {string} field\n   * @param {any} value\n   */\n  setLocalStateField (field, value) {\n    const state = this.getLocalState()\n    if (state !== null) {\n      this.setLocalState({\n        ...state,\n        [field]: value\n      })\n    }\n  }\n\n  /**\n   * @return {Map<number,Object<string,any>>}\n   */\n  getStates () {\n    return this.states\n  }\n}\n\n/**\n * Mark (remote) clients as inactive and remove them from the list of active peers.\n * This change will be propagated to remote clients.\n *\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @param {any} origin\n */\nexport const removeAwarenessStates = (awareness, clients, origin) => {\n  const removed = []\n  for (let i = 0; i < clients.length; i++) {\n    const clientID = clients[i]\n    if (awareness.states.has(clientID)) {\n      awareness.states.delete(clientID)\n      if (clientID === awareness.clientID) {\n        const curMeta = /** @type {MetaClientState} */ (awareness.meta.get(clientID))\n        awareness.meta.set(clientID, {\n          clock: curMeta.clock + 1,\n          lastUpdated: time.getUnixTime()\n        })\n      }\n      removed.push(clientID)\n    }\n  }\n  if (removed.length > 0) {\n    awareness.emit('change', [{ added: [], updated: [], removed }, origin])\n    awareness.emit('update', [{ added: [], updated: [], removed }, origin])\n  }\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @return {Uint8Array}\n */\nexport const encodeAwarenessUpdate = (awareness, clients, states = awareness.states) => {\n  const len = clients.length\n  const encoder = encoding.createEncoder()\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = clients[i]\n    const state = states.get(clientID) || null\n    const clock = /** @type {MetaClientState} */ (awareness.meta.get(clientID)).clock\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(state))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Modify the content of an awareness update before re-encoding it to an awareness update.\n *\n * This might be useful when you have a central server that wants to ensure that clients\n * cant hijack somebody elses identity.\n *\n * @param {Uint8Array} update\n * @param {function(any):any} modify\n * @return {Uint8Array}\n */\nexport const modifyAwarenessUpdate = (update, modify) => {\n  const decoder = decoding.createDecoder(update)\n  const encoder = encoding.createEncoder()\n  const len = decoding.readVarUint(decoder)\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    const clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const modifiedState = modify(state)\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(modifiedState))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Uint8Array} update\n * @param {any} origin This will be added to the emitted change event\n */\nexport const applyAwarenessUpdate = (awareness, update, origin) => {\n  const decoder = decoding.createDecoder(update)\n  const timestamp = time.getUnixTime()\n  const added = []\n  const updated = []\n  const filteredUpdated = []\n  const removed = []\n  const len = decoding.readVarUint(decoder)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    let clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const clientMeta = awareness.meta.get(clientID)\n    const prevState = awareness.states.get(clientID)\n    const currClock = clientMeta === undefined ? 0 : clientMeta.clock\n    if (currClock < clock || (currClock === clock && state === null && awareness.states.has(clientID))) {\n      if (state === null) {\n        // never let a remote client remove this local state\n        if (clientID === awareness.clientID && awareness.getLocalState() != null) {\n          // remote client removed the local state. Do not remote state. Broadcast a message indicating\n          // that this client still exists by increasing the clock\n          clock++\n        } else {\n          awareness.states.delete(clientID)\n        }\n      } else {\n        awareness.states.set(clientID, state)\n      }\n      awareness.meta.set(clientID, {\n        clock,\n        lastUpdated: timestamp\n      })\n      if (clientMeta === undefined && state !== null) {\n        added.push(clientID)\n      } else if (clientMeta !== undefined && state === null) {\n        removed.push(clientID)\n      } else if (state !== null) {\n        if (!f.equalityDeep(state, prevState)) {\n          filteredUpdated.push(clientID)\n        }\n        updated.push(clientID)\n      }\n    }\n  }\n  if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n    awareness.emit('change', [{\n      added, updated: filteredUpdated, removed\n    }, origin])\n  }\n  if (added.length > 0 || updated.length > 0 || removed.length > 0) {\n    awareness.emit('update', [{\n      added, updated, removed\n    }, origin])\n  }\n}\n"],"sourceRoot":""}