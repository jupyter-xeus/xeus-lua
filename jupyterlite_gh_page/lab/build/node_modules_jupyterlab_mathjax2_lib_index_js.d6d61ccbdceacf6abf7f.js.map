{"version":3,"sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../../node_modules/@jupyterlab/mathjax2/lib/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACoD;AACpD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,gCAAgC,8DAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,UAAU,UAAU,aAAa,KAAK;AAC9D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,yBAAyB,sBAAsB,YAAY,EAAE;AAC7D,6BAA6B;AAC7B,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iC","file":"node_modules_jupyterlab_mathjax2_lib_index_js.d6d61ccbdceacf6abf7f.js","sourcesContent":["/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\n/**\n * @packageDocumentation\n * @module mathjax2\n */\nimport { PromiseDelegate } from '@lumino/coreutils';\n/**\n * The MathJax Typesetter.\n */\nexport class MathJaxTypesetter {\n    /**\n     * Create a new MathJax typesetter.\n     */\n    constructor(options) {\n        this._initPromise = new PromiseDelegate();\n        this._initialized = false;\n        this._url = options.url;\n        this._config = options.config;\n    }\n    /**\n     * Typeset the math in a node.\n     *\n     * #### Notes\n     * MathJax schedules the typesetting asynchronously,\n     * but there are not currently any callbacks or Promises\n     * firing when it is done.\n     */\n    typeset(node) {\n        if (!this._initialized) {\n            this._init();\n        }\n        void this._initPromise.promise.then(() => {\n            MathJax.Hub.Queue(['Typeset', MathJax.Hub, node]);\n            try {\n                MathJax.Hub.Queue(['Require', MathJax.Ajax, '[MathJax]/extensions/TeX/AMSmath.js'], () => {\n                    MathJax.InputJax.TeX.resetEquationNumbers();\n                });\n            }\n            catch (e) {\n                console.error('Error queueing resetEquationNumbers:', e);\n            }\n        });\n    }\n    /**\n     * Initialize MathJax.\n     */\n    _init() {\n        const head = document.getElementsByTagName('head')[0];\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.src = `${this._url}?config=${this._config}&amp;delayStartupUntil=configured`;\n        script.charset = 'utf-8';\n        head.appendChild(script);\n        script.addEventListener('load', () => {\n            this._onLoad();\n        });\n        this._initialized = true;\n    }\n    /**\n     * Handle MathJax loading.\n     */\n    _onLoad() {\n        MathJax.Hub.Config({\n            tex2jax: {\n                inlineMath: [\n                    ['$', '$'],\n                    ['\\\\(', '\\\\)']\n                ],\n                displayMath: [\n                    ['$$', '$$'],\n                    ['\\\\[', '\\\\]']\n                ],\n                processEscapes: true,\n                processEnvironments: true\n            },\n            // Center justify equations in code and markdown cells. Elsewhere\n            // we use CSS to left justify single line equations in code cells.\n            displayAlign: 'center',\n            CommonHTML: {\n                linebreaks: { automatic: true }\n            },\n            'HTML-CSS': {\n                availableFonts: [],\n                imageFont: null,\n                preferredFont: null,\n                webFont: 'STIX-Web',\n                styles: { '.MathJax_Display': { margin: 0 } },\n                linebreaks: { automatic: true }\n            },\n            skipStartupTypeset: true,\n            messageStyle: 'none'\n        });\n        MathJax.Hub.Configured();\n        this._initPromise.resolve(void 0);\n    }\n}\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}