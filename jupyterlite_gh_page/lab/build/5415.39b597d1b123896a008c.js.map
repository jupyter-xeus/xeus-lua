{"version":3,"sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/application/lib/connectionlost.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/application/lib/frontend.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/application/lib/layoutrestorer.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/application/lib/mimerenderers.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/application/lib/shell.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/application/lib/status.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/application/lib/lab.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/application/lib/router.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/application/lib/tokens.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/application/lib/treepathupdater.js"],"names":["ConnectionLost","async","manager","err","translator","trans","nullTranslator","load","title","__","networkMsg","showErrorMessage","message","Private","JupyterFrontEndContextMenu","JupyterFrontEnd","Application","constructor","options","super","this","_formatChanged","Signal","contextMenu","ContextMenuSvg","commands","renderer","contextMenuRenderer","restored","Promise","resolve","requestAnimationFrame","commandLinker","CommandLinker","docRegistry","DocumentRegistry","started","then","catch","serviceManager","ServiceManager","_format","format","document","body","dataset","emit","contextMenuHitTest","fn","_contextMenuEvent","target","Node","node","HTMLElement","parentNode","evtContextMenu","event","shiftKey","suppressContextMenu","open","items","menu","length","command","close","preventDefault","stopPropagation","inDocMode","path","paths","docPattern","RegExp","urls","doc","match","IPaths","Token","ITreeResolver","element","closest","ILayoutRestorer","KEY","LayoutRestorer","_firstDone","_promisesDone","_promises","_restored","PromiseDelegate","_trackers","Set","_widgets","Map","_connector","connector","_first","first","_registry","registry","all","clear","promise","add","widget","name","nameProperty","set","disposed","connect","_onWidgetDisposed","blank","fresh","mainArea","downArea","leftArea","rightArea","relativeSizes","layout","fetch","data","main","down","left","right","_rehydrateMainArea","_rehydrateDownArea","_rehydrateSideArea","error","restore","tracker","warning","console","warn","reject","namespace","has","args","when","widgetAdded","_","widgetName","widgetUpdated","JSONExt","concat","push","save","dehydrated","_dehydrateMainArea","_dehydrateDownArea","_dehydrateSideArea","area","serializeMain","deserializeMain","size","currentWidget","current","get","widgets","map","filter","_a","internal","Array","isArray","collapsed","delete","serializeArea","type","currentIndex","orientation","sizes","children","deserializeArea","names","hydrated","child","AttachedProperty","create","owner","dock","IMimeDocumentTracker","createRendermimePlugins","extensions","plugins","WidgetTracker","forEach","mod","default","hasOwnProperty","item","createRendermimePlugin","id","optional","provides","autoStart","activate","app","restorer","context","factory","factoryNameProperty","requires","IRenderMimeRegistry","ITranslator","rendermime","undefined","rank","addFactory","rendererFactory","documentWidgetFactoryOptions","fileTypes","ft","icon","Object","assign","LabIcon","addFileType","option","toolbarFactory","w","content","MimeDocumentFactory","renderTimeout","dataType","modelName","primaryFileType","getFileType","defaultFor","defaultRendered","addWidgetFactory","widgetCreated","sender","pathChanged","SIDEBAR_CLASS","DEFAULT_RANK","ACTIVITY_CLASS","ILabShell","LabShell","Widget","_dockChildHook","handler","msg","addClass","_tracker","removeClass","remove","_activeChanged","_cachedLayout","_currentChanged","_currentPath","_currentPathChanged","_modeChanged","_isRestored","_layoutModified","_layoutDebouncer","Debouncer","FocusTracker","_mainOptionsCache","_sideOptionsCache","headerPanel","_headerPanel","BoxPanel","menuHandler","_menuHandler","PanelHandler","panel","setAttribute","topHandler","_topHandler","bottomPanel","_bottomPanel","hboxPanel","vsplitPanel","_vsplitPanel","RestorableSplitPanel","dockPanel","_dockPanel","DockPanelSvg","MessageLoop","hsplitPanel","_hsplitPanel","downPanel","_downPanel","TabPanelSvg","tabsMovable","leftHandler","_leftHandler","SideBarHandler","rightHandler","_rightHandler","rootLayout","BoxLayout","sideBar","contentNode","stackedPanel","spacing","direction","SplitPanel","addWidget","setRelativeSizes","hide","currentChanged","_onCurrentChanged","activeChanged","_onActiveChanged","layoutModified","_onLayoutModified","updated","tabBar","tabMoved","_onTabPanelChanged","widgetRemoved","titleHandler","_titleHandler","TitleHandler","mode","insertWidget","skipLinkWidget","_skipLinkWidget","SkipLinkWidget","show","newValue","oldValue","changed","disconnect","_updateTitlePanelTitle","DocumentWidget","_updateCurrentPath","activeWidget","currentTitle","hasClass","value","toggleClass","applicationCurrentWidget","saveLayout","activateWidget","toArray","normalizeAreaConfig","restoreLayout","parent","_addToMainArea","shellMode","fit","activateById","tabIndex","titles","findIndex","find","activateNextTab","_currentTabBar","ci","nextBar","_adjacentBar","activatePreviousTab","prevBar","len","activateNextTabBar","activatePreviousTabBar","_addToBottomArea","_addToDownArea","_addToHeaderArea","_addToLeftArea","_addToMenuArea","_addToRightArea","_addToTopArea","Error","collapseLeft","collapse","collapseRight","dispose","isDisposed","expandLeft","expand","expandRight","closeAll","isEmpty","_b","widgetIds","includes","titleIds","ArrayExt","index","position","insertTab","rehydrate","dehydrate","iter","t","onAfterAttach","inputElement","label","caption","ref","bindprops","stylesheet","iconClass","classes","isHidden","bars","tabBars","indexOf","bar","className","replace","invoke","itemCmp","second","_panelChildHook","_items","v","_panel","Panel","_sideBar","TabBar","insertBehavior","removeBehavior","allowDeselect","_stackedPanel","StackedPanel","_lastCurrent","tabActivateRequested","_onTabActivateRequested","_onWidgetRemoved","previous","_findWidgetByID","_findInsertIndex","_refreshVisibility","_findWidgetIndex","i","_findWidgetByTitle","setHidden","oldWidget","previousTitle","newWidget","removeTab","shell","_shell","_createSkipLink","handleEvent","_focusLeftSideBar","addEventListener","onBeforeDetach","removeEventListener","skipLinkText","skipLink","createElement","href","text","appendChild","_selected","_evtKeyUp","_evtClick","key","oldName","newName","blur","button","selectEnd","select","setSelectionRange","onUpdateRequest","ILabStatus","LabStatus","_busyCount","_dirtyCount","_busySignal","_dirtySignal","setDirty","oldDirty","isDirty","DisposableDelegate","Math","max","setBusy","oldBusy","isBusy","JupyterLab","PageConfig","registerPluginErrors","status","version","info","keys","defaultInfo","reduce","acc","val","JSON","parse","stringify","_info","defaultURLs","defaultPaths","defaultDirs","directories","optionURLs","optionDirs","_paths","devMode","addModelFactory","Base64ModelFactory","mimeExtensions","plugin","registerPlugin","registerPluginModule","registerPluginModules","mods","IInfo","toLowerCase","deferred","patterns","matches","disabled","filesCached","base","notFound","static","settings","themes","translations","hubHost","hubPrefix","hubUser","hubServerName","appSettings","schemas","templates","userSettings","serverRoot","workspaces","Router","stop","_routed","_rules","parsed","URLExt","window","location","search","hash","pathname","request","navigate","history","hard","old","url","reload","pushState","skipRouting","route","register","pattern","rules","routed","rule","queue","sort","a","b","done","next","pop","execute","debug","reason","IConnectionLost","IRouter","ITreePathUpdater"],"mappings":"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","file":"5415.39b597d1b123896a008c.js","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { showErrorMessage } from '@jupyterlab/apputils';\nimport { nullTranslator } from '@jupyterlab/translation';\n/**\n * A default connection lost handler, which brings up an error dialog.\n */\nexport const ConnectionLost = async function (manager, err, translator) {\n    translator = translator || nullTranslator;\n    const trans = translator.load('jupyterlab');\n    const title = trans.__('Server Connection Error');\n    const networkMsg = trans.__('A connection to the Jupyter server could not be established.\\n' +\n        'JupyterLab will continue trying to reconnect.\\n' +\n        'Check your network connection or Jupyter server configuration.\\n');\n    return showErrorMessage(title, { message: networkMsg });\n};\n//# sourceMappingURL=connectionlost.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { CommandLinker } from '@jupyterlab/apputils';\nimport { DocumentRegistry } from '@jupyterlab/docregistry';\nimport { ServiceManager } from '@jupyterlab/services';\nimport { ContextMenuSvg } from '@jupyterlab/ui-components';\nimport { Application } from '@lumino/application';\nimport { Token } from '@lumino/coreutils';\nimport { Signal } from '@lumino/signaling';\n/**\n * The base Jupyter front-end application class.\n *\n * @typeparam `T` - The `shell` type. Defaults to `JupyterFrontEnd.IShell`.\n *\n * @typeparam `U` - The type for supported format names. Defaults to `string`.\n *\n * #### Notes\n * This type is useful as a generic application against which front-end plugins\n * can be authored. It inherits from the Lumino `Application`.\n */\nexport class JupyterFrontEnd extends Application {\n    /**\n     * Construct a new JupyterFrontEnd object.\n     */\n    constructor(options) {\n        super(options);\n        this._formatChanged = new Signal(this);\n        // render context menu/submenus with inline svg icon tweaks\n        this.contextMenu = new ContextMenuSvg({\n            commands: this.commands,\n            renderer: options.contextMenuRenderer\n        });\n        // The default restored promise if one does not exist in the options.\n        const restored = new Promise(resolve => {\n            requestAnimationFrame(() => {\n                resolve();\n            });\n        });\n        this.commandLinker =\n            options.commandLinker || new CommandLinker({ commands: this.commands });\n        this.docRegistry = options.docRegistry || new DocumentRegistry();\n        this.restored =\n            options.restored ||\n                this.started.then(() => restored).catch(() => restored);\n        this.serviceManager = options.serviceManager || new ServiceManager();\n    }\n    /**\n     * The application form factor, e.g., `desktop` or `mobile`.\n     */\n    get format() {\n        return this._format;\n    }\n    set format(format) {\n        if (this._format !== format) {\n            this._format = format;\n            document.body.dataset['format'] = format;\n            this._formatChanged.emit(format);\n        }\n    }\n    /**\n     * A signal that emits when the application form factor changes.\n     */\n    get formatChanged() {\n        return this._formatChanged;\n    }\n    /**\n     * Walks up the DOM hierarchy of the target of the active `contextmenu`\n     * event, testing each HTMLElement ancestor for a user-supplied function. This can\n     * be used to find an HTMLElement on which to operate, given a context menu click.\n     *\n     * @param fn - a function that takes an `HTMLElement` and returns a\n     *   boolean for whether it is the element the requester is seeking.\n     *\n     * @returns an HTMLElement or undefined, if none is found.\n     */\n    contextMenuHitTest(fn) {\n        if (!this._contextMenuEvent ||\n            !(this._contextMenuEvent.target instanceof Node)) {\n            return undefined;\n        }\n        let node = this._contextMenuEvent.target;\n        do {\n            if (node instanceof HTMLElement && fn(node)) {\n                return node;\n            }\n            node = node.parentNode;\n        } while (node && node.parentNode && node !== node.parentNode);\n        return undefined;\n        // TODO: we should be able to use .composedPath() to simplify this function\n        // down to something like the below, but it seems like composedPath is\n        // sometimes returning an empty list.\n        /*\n        if (this._contextMenuEvent) {\n          this._contextMenuEvent\n            .composedPath()\n            .filter(x => x instanceof HTMLElement)\n            .find(test);\n        }\n        return undefined;\n        */\n    }\n    /**\n     * A method invoked on a document `'contextmenu'` event.\n     */\n    evtContextMenu(event) {\n        this._contextMenuEvent = event;\n        if (event.shiftKey ||\n            Private.suppressContextMenu(event.target)) {\n            return;\n        }\n        const opened = this.contextMenu.open(event);\n        if (opened) {\n            const items = this.contextMenu.menu.items;\n            // If only the context menu information will be shown,\n            // with no real commands, close the context menu and\n            // allow the native one to open.\n            if (items.length === 1 &&\n                items[0].command === JupyterFrontEndContextMenu.contextMenu) {\n                this.contextMenu.menu.close();\n                return;\n            }\n            // Stop propagation and allow the application context menu to show.\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n}\n/**\n * The namespace for `JupyterFrontEnd` class statics.\n */\n(function (JupyterFrontEnd) {\n    /**\n     * Is JupyterLab in document mode?\n     *\n     * @param path - Full URL of JupyterLab\n     * @param paths - The current IPaths object hydrated from PageConfig.\n     */\n    function inDocMode(path, paths) {\n        const docPattern = new RegExp(`^${paths.urls.doc}`);\n        const match = path.match(docPattern);\n        if (match) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    JupyterFrontEnd.inDocMode = inDocMode;\n    /**\n     * The application paths dictionary token.\n     */\n    JupyterFrontEnd.IPaths = new Token('@jupyterlab/application:IPaths');\n    /**\n     * The application tree resolver token.\n     *\n     * #### Notes\n     * Not all Jupyter front-end applications will have a tree resolver\n     * implemented on the client-side. This token should not be required as a\n     * dependency if it is possible to make it an optional dependency.\n     */\n    JupyterFrontEnd.ITreeResolver = new Token('@jupyterlab/application:ITreeResolver');\n})(JupyterFrontEnd || (JupyterFrontEnd = {}));\n/**\n * A namespace for module-private functionality.\n */\nvar Private;\n(function (Private) {\n    /**\n     * Returns whether the element is itself, or a child of, an element with the `jp-suppress-context-menu` data attribute.\n     */\n    function suppressContextMenu(element) {\n        return element.closest('[data-jp-suppress-context-menu]') !== null;\n    }\n    Private.suppressContextMenu = suppressContextMenu;\n})(Private || (Private = {}));\n/**\n * A namespace for the context menu override.\n */\nexport var JupyterFrontEndContextMenu;\n(function (JupyterFrontEndContextMenu) {\n    /**\n     * An id for a private context-menu-info ersatz command.\n     */\n    JupyterFrontEndContextMenu.contextMenu = '__internal:context-menu-info';\n})(JupyterFrontEndContextMenu || (JupyterFrontEndContextMenu = {}));\n//# sourceMappingURL=frontend.js.map","/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\nimport { JSONExt, PromiseDelegate, Token } from '@lumino/coreutils';\nimport { AttachedProperty } from '@lumino/properties';\n/**\n * The layout restorer token.\n */\nexport const ILayoutRestorer = new Token('@jupyterlab/application:ILayoutRestorer');\n/**\n * The data connector key for restorer data.\n */\nconst KEY = 'layout-restorer:data';\n/**\n * The default implementation of a layout restorer.\n *\n * #### Notes\n * The lifecycle for state restoration is subtle. The sequence of events is:\n *\n * 1. The layout restorer plugin is instantiated and makes a `fetch` call to\n *    the data connector that stores the layout restoration data. The `fetch`\n *    call returns a promise that resolves in step 6, below.\n *\n * 2. Other plugins that care about state restoration require the layout\n *    restorer as a dependency.\n *\n * 3. As each load-time plugin initializes (which happens before the front-end\n *    application has `started`), it instructs the layout restorer whether\n *    the restorer ought to `restore` its widgets by passing in its widget\n *    tracker.\n *    Alternatively, a plugin that does not require its own widget tracker\n *    (because perhaps it only creates a single widget, like a command palette),\n *    can simply `add` its widget along with a persistent unique name to the\n *    layout restorer so that its layout state can be restored when the lab\n *    application restores.\n *\n * 4. After all the load-time plugins have finished initializing, the front-end\n *    application `started` promise will resolve. This is the `first`\n *    promise that the layout restorer waits for. By this point, all of the\n *    plugins that care about restoration will have instructed the layout\n *    restorer to `restore` their widget trackers.\n *\n * 5. The layout restorer will then instruct each plugin's widget tracker\n *    to restore its state and reinstantiate whichever widgets it wants. The\n *    tracker returns a promise to the layout restorer that resolves when it\n *    has completed restoring the tracked widgets it cares about.\n *\n * 6. As each widget tracker finishes restoring the widget instances it cares\n *    about, it resolves the promise that was returned to the layout restorer\n *    (in step 5). After all of the promises that the restorer is awaiting have\n *    settled, the restorer then resolves the outstanding `fetch` promise\n *    (from step 1) and hands off a layout state object to the application\n *    shell's `restoreLayout` method for restoration.\n *\n * 7. Once the application shell has finished restoring the layout, the\n *    JupyterLab application's `restored` promise is resolved.\n *\n * Of particular note are steps 5 and 6: since data restoration of plugins\n * is accomplished by executing commands, the command that is used to restore\n * the data of each plugin must return a promise that only resolves when the\n * widget has been created and added to the plugin's widget tracker.\n */\nexport class LayoutRestorer {\n    /**\n     * Create a layout restorer.\n     */\n    constructor(options) {\n        this._firstDone = false;\n        this._promisesDone = false;\n        this._promises = [];\n        this._restored = new PromiseDelegate();\n        this._trackers = new Set();\n        this._widgets = new Map();\n        this._connector = options.connector;\n        this._first = options.first;\n        this._registry = options.registry;\n        void this._first\n            .then(() => {\n            this._firstDone = true;\n        })\n            .then(() => Promise.all(this._promises))\n            .then(() => {\n            this._promisesDone = true;\n            // Release the tracker set.\n            this._trackers.clear();\n        })\n            .then(() => {\n            this._restored.resolve(void 0);\n        });\n    }\n    /**\n     * A promise resolved when the layout restorer is ready to receive signals.\n     */\n    get restored() {\n        return this._restored.promise;\n    }\n    /**\n     * Add a widget to be tracked by the layout restorer.\n     */\n    add(widget, name) {\n        Private.nameProperty.set(widget, name);\n        this._widgets.set(name, widget);\n        widget.disposed.connect(this._onWidgetDisposed, this);\n    }\n    /**\n     * Fetch the layout state for the application.\n     *\n     * #### Notes\n     * Fetching the layout relies on all widget restoration to be complete, so\n     * calls to `fetch` are guaranteed to return after restoration is complete.\n     */\n    async fetch() {\n        const blank = {\n            fresh: true,\n            mainArea: null,\n            downArea: null,\n            leftArea: null,\n            rightArea: null,\n            relativeSizes: null\n        };\n        const layout = this._connector.fetch(KEY);\n        try {\n            const [data] = await Promise.all([layout, this.restored]);\n            if (!data) {\n                return blank;\n            }\n            const { main, down, left, right, relativeSizes } = data;\n            // If any data exists, then this is not a fresh session.\n            const fresh = false;\n            // Rehydrate main area.\n            const mainArea = this._rehydrateMainArea(main);\n            // Rehydrate down area.\n            const downArea = this._rehydrateDownArea(down);\n            // Rehydrate left area.\n            const leftArea = this._rehydrateSideArea(left);\n            // Rehydrate right area.\n            const rightArea = this._rehydrateSideArea(right);\n            return {\n                fresh,\n                mainArea,\n                downArea,\n                leftArea,\n                rightArea,\n                relativeSizes: relativeSizes || null\n            };\n        }\n        catch (error) {\n            return blank;\n        }\n    }\n    /**\n     * Restore the widgets of a particular widget tracker.\n     *\n     * @param tracker - The widget tracker whose widgets will be restored.\n     *\n     * @param options - The restoration options.\n     */\n    restore(tracker, options) {\n        const warning = 'restore() can only be called before `first` has resolved.';\n        if (this._firstDone) {\n            console.warn(warning);\n            return Promise.reject(warning);\n        }\n        const { namespace } = tracker;\n        if (this._trackers.has(namespace)) {\n            const warning = `A tracker namespaced ${namespace} was already restored.`;\n            console.warn(warning);\n            return Promise.reject(warning);\n        }\n        const { args, command, name, when } = options;\n        // Add the tracker to the private trackers collection.\n        this._trackers.add(namespace);\n        // Whenever a new widget is added to the tracker, record its name.\n        tracker.widgetAdded.connect((_, widget) => {\n            const widgetName = name(widget);\n            if (widgetName) {\n                this.add(widget, `${namespace}:${widgetName}`);\n            }\n        }, this);\n        // Whenever a widget is updated, get its new name.\n        tracker.widgetUpdated.connect((_, widget) => {\n            const widgetName = name(widget);\n            if (widgetName) {\n                const name = `${namespace}:${widgetName}`;\n                Private.nameProperty.set(widget, name);\n                this._widgets.set(name, widget);\n            }\n        });\n        const first = this._first;\n        const promise = tracker\n            .restore({\n            args: args || (() => JSONExt.emptyObject),\n            command,\n            connector: this._connector,\n            name,\n            registry: this._registry,\n            when: when ? [first].concat(when) : first\n        })\n            .catch(error => {\n            console.error(error);\n        });\n        this._promises.push(promise);\n        return promise;\n    }\n    /**\n     * Save the layout state for the application.\n     */\n    save(data) {\n        // If there are promises that are unresolved, bail.\n        if (!this._promisesDone) {\n            const warning = 'save() was called prematurely.';\n            console.warn(warning);\n            return Promise.reject(warning);\n        }\n        const dehydrated = {};\n        dehydrated.main = this._dehydrateMainArea(data.mainArea);\n        dehydrated.down = this._dehydrateDownArea(data.downArea);\n        dehydrated.left = this._dehydrateSideArea(data.leftArea);\n        dehydrated.right = this._dehydrateSideArea(data.rightArea);\n        dehydrated.relativeSizes = data.relativeSizes;\n        return this._connector.save(KEY, dehydrated);\n    }\n    /**\n     * Dehydrate a main area description into a serializable object.\n     */\n    _dehydrateMainArea(area) {\n        if (!area) {\n            return null;\n        }\n        return Private.serializeMain(area);\n    }\n    /**\n     * Reydrate a serialized main area description object.\n     *\n     * #### Notes\n     * This function consumes data that can become corrupted, so it uses type\n     * coercion to guarantee the dehydrated object is safely processed.\n     */\n    _rehydrateMainArea(area) {\n        if (!area) {\n            return null;\n        }\n        return Private.deserializeMain(area, this._widgets);\n    }\n    /**\n     * Dehydrate a down area description into a serializable object.\n     */\n    _dehydrateDownArea(area) {\n        if (!area) {\n            return null;\n        }\n        const dehydrated = {\n            size: area.size\n        };\n        if (area.currentWidget) {\n            const current = Private.nameProperty.get(area.currentWidget);\n            if (current) {\n                dehydrated.current = current;\n            }\n        }\n        if (area.widgets) {\n            dehydrated.widgets = area.widgets\n                .map(widget => Private.nameProperty.get(widget))\n                .filter(name => !!name);\n        }\n        return dehydrated;\n    }\n    /**\n     * Reydrate a serialized side area description object.\n     *\n     * #### Notes\n     * This function consumes data that can become corrupted, so it uses type\n     * coercion to guarantee the dehydrated object is safely processed.\n     */\n    _rehydrateDownArea(area) {\n        var _a;\n        if (!area) {\n            return { currentWidget: null, size: 0.0, widgets: null };\n        }\n        const internal = this._widgets;\n        const currentWidget = area.current && internal.has(`${area.current}`)\n            ? internal.get(`${area.current}`)\n            : null;\n        const widgets = !Array.isArray(area.widgets)\n            ? null\n            : area.widgets\n                .map(name => internal.has(`${name}`) ? internal.get(`${name}`) : null)\n                .filter(widget => !!widget);\n        return {\n            currentWidget: currentWidget,\n            size: (_a = area.size) !== null && _a !== void 0 ? _a : 0.0,\n            widgets: widgets\n        };\n    }\n    /**\n     * Dehydrate a side area description into a serializable object.\n     */\n    _dehydrateSideArea(area) {\n        if (!area) {\n            return null;\n        }\n        const dehydrated = { collapsed: area.collapsed };\n        if (area.currentWidget) {\n            const current = Private.nameProperty.get(area.currentWidget);\n            if (current) {\n                dehydrated.current = current;\n            }\n        }\n        if (area.widgets) {\n            dehydrated.widgets = area.widgets\n                .map(widget => Private.nameProperty.get(widget))\n                .filter(name => !!name);\n        }\n        return dehydrated;\n    }\n    /**\n     * Reydrate a serialized side area description object.\n     *\n     * #### Notes\n     * This function consumes data that can become corrupted, so it uses type\n     * coercion to guarantee the dehydrated object is safely processed.\n     */\n    _rehydrateSideArea(area) {\n        var _a;\n        if (!area) {\n            return { collapsed: true, currentWidget: null, widgets: null };\n        }\n        const internal = this._widgets;\n        const collapsed = (_a = area.collapsed) !== null && _a !== void 0 ? _a : false;\n        const currentWidget = area.current && internal.has(`${area.current}`)\n            ? internal.get(`${area.current}`)\n            : null;\n        const widgets = !Array.isArray(area.widgets)\n            ? null\n            : area.widgets\n                .map(name => internal.has(`${name}`) ? internal.get(`${name}`) : null)\n                .filter(widget => !!widget);\n        return {\n            collapsed,\n            currentWidget: currentWidget,\n            widgets: widgets\n        };\n    }\n    /**\n     * Handle a widget disposal.\n     */\n    _onWidgetDisposed(widget) {\n        const name = Private.nameProperty.get(widget);\n        this._widgets.delete(name);\n    }\n}\n/*\n * A namespace for private data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * An attached property for a widget's ID in the serialized restore data.\n     */\n    Private.nameProperty = new AttachedProperty({\n        name: 'name',\n        create: owner => ''\n    });\n    /**\n     * Serialize individual areas within the main area.\n     */\n    function serializeArea(area) {\n        if (!area || !area.type) {\n            return null;\n        }\n        if (area.type === 'tab-area') {\n            return {\n                type: 'tab-area',\n                currentIndex: area.currentIndex,\n                widgets: area.widgets\n                    .map(widget => Private.nameProperty.get(widget))\n                    .filter(name => !!name)\n            };\n        }\n        return {\n            type: 'split-area',\n            orientation: area.orientation,\n            sizes: area.sizes,\n            children: area.children\n                .map(serializeArea)\n                .filter(area => !!area)\n        };\n    }\n    /**\n     * Return a dehydrated, serializable version of the main dock panel.\n     */\n    function serializeMain(area) {\n        const dehydrated = {\n            dock: (area && area.dock && serializeArea(area.dock.main)) || null\n        };\n        if (area) {\n            if (area.currentWidget) {\n                const current = Private.nameProperty.get(area.currentWidget);\n                if (current) {\n                    dehydrated.current = current;\n                }\n            }\n        }\n        return dehydrated;\n    }\n    Private.serializeMain = serializeMain;\n    /**\n     * Deserialize individual areas within the main area.\n     *\n     * #### Notes\n     * Because this data comes from a potentially unreliable foreign source, it is\n     * typed as a `JSONObject`; but the actual expected type is:\n     * `ITabArea | ISplitArea`.\n     *\n     * For fault tolerance, types are manually checked in deserialization.\n     */\n    function deserializeArea(area, names) {\n        if (!area) {\n            return null;\n        }\n        // Because this data is saved to a foreign data source, its type safety is\n        // not guaranteed when it is retrieved, so exhaustive checks are necessary.\n        const type = area.type || 'unknown';\n        if (type === 'unknown' || (type !== 'tab-area' && type !== 'split-area')) {\n            console.warn(`Attempted to deserialize unknown type: ${type}`);\n            return null;\n        }\n        if (type === 'tab-area') {\n            const { currentIndex, widgets } = area;\n            const hydrated = {\n                type: 'tab-area',\n                currentIndex: currentIndex || 0,\n                widgets: (widgets &&\n                    widgets\n                        .map(widget => names.get(widget))\n                        .filter(widget => !!widget)) ||\n                    []\n            };\n            // Make sure the current index is within bounds.\n            if (hydrated.currentIndex > hydrated.widgets.length - 1) {\n                hydrated.currentIndex = 0;\n            }\n            return hydrated;\n        }\n        const { orientation, sizes, children } = area;\n        const hydrated = {\n            type: 'split-area',\n            orientation: orientation,\n            sizes: sizes || [],\n            children: (children &&\n                children\n                    .map(child => deserializeArea(child, names))\n                    .filter(widget => !!widget)) ||\n                []\n        };\n        return hydrated;\n    }\n    /**\n     * Return the hydrated version of the main dock panel, ready to restore.\n     *\n     * #### Notes\n     * Because this data comes from a potentially unreliable foreign source, it is\n     * typed as a `JSONObject`; but the actual expected type is: `IMainArea`.\n     *\n     * For fault tolerance, types are manually checked in deserialization.\n     */\n    function deserializeMain(area, names) {\n        if (!area) {\n            return null;\n        }\n        const name = area.current || null;\n        const dock = area.dock || null;\n        return {\n            currentWidget: (name && names.has(name) && names.get(name)) || null,\n            dock: dock ? { main: deserializeArea(dock, names) } : null\n        };\n    }\n    Private.deserializeMain = deserializeMain;\n})(Private || (Private = {}));\n//# sourceMappingURL=layoutrestorer.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { WidgetTracker } from '@jupyterlab/apputils';\nimport { MimeDocumentFactory } from '@jupyterlab/docregistry';\nimport { IRenderMimeRegistry } from '@jupyterlab/rendermime';\nimport { ITranslator } from '@jupyterlab/translation';\nimport { LabIcon } from '@jupyterlab/ui-components';\nimport { Token } from '@lumino/coreutils';\nimport { AttachedProperty } from '@lumino/properties';\nimport { ILayoutRestorer } from './layoutrestorer';\n/**\n * The mime document tracker token.\n */\nexport const IMimeDocumentTracker = new Token('@jupyterlab/application:IMimeDocumentTracker');\n/**\n * Create rendermime plugins for rendermime extension modules.\n */\nexport function createRendermimePlugins(extensions) {\n    const plugins = [];\n    const namespace = 'application-mimedocuments';\n    const tracker = new WidgetTracker({ namespace });\n    extensions.forEach(mod => {\n        let data = mod.default;\n        // Handle CommonJS exports.\n        if (!mod.hasOwnProperty('__esModule')) {\n            data = mod;\n        }\n        if (!Array.isArray(data)) {\n            data = [data];\n        }\n        data.forEach(item => {\n            plugins.push(createRendermimePlugin(tracker, item));\n        });\n    });\n    // Also add a meta-plugin handling state restoration\n    // and exposing the mime document widget tracker.\n    plugins.push({\n        id: '@jupyterlab/application:mimedocument',\n        optional: [ILayoutRestorer],\n        provides: IMimeDocumentTracker,\n        autoStart: true,\n        activate: (app, restorer) => {\n            if (restorer) {\n                void restorer.restore(tracker, {\n                    command: 'docmanager:open',\n                    args: widget => ({\n                        path: widget.context.path,\n                        factory: Private.factoryNameProperty.get(widget)\n                    }),\n                    name: widget => `${widget.context.path}:${Private.factoryNameProperty.get(widget)}`\n                });\n            }\n            return tracker;\n        }\n    });\n    return plugins;\n}\n/**\n * Create rendermime plugins for rendermime extension modules.\n */\nexport function createRendermimePlugin(tracker, item) {\n    return {\n        id: item.id,\n        requires: [IRenderMimeRegistry, ITranslator],\n        autoStart: true,\n        activate: (app, rendermime, translator) => {\n            // Add the mime renderer.\n            if (item.rank !== undefined) {\n                rendermime.addFactory(item.rendererFactory, item.rank);\n            }\n            else {\n                rendermime.addFactory(item.rendererFactory);\n            }\n            // Handle the widget factory.\n            if (!item.documentWidgetFactoryOptions) {\n                return;\n            }\n            const registry = app.docRegistry;\n            let options = [];\n            if (Array.isArray(item.documentWidgetFactoryOptions)) {\n                options = item.documentWidgetFactoryOptions;\n            }\n            else {\n                options = [\n                    item.documentWidgetFactoryOptions\n                ];\n            }\n            if (item.fileTypes) {\n                item.fileTypes.forEach(ft => {\n                    if (ft.icon) {\n                        // upconvert the contents of the icon field to a proper LabIcon\n                        ft = Object.assign(Object.assign({}, ft), { icon: LabIcon.resolve({ icon: ft.icon }) });\n                    }\n                    app.docRegistry.addFileType(ft);\n                });\n            }\n            options.forEach(option => {\n                const toolbarFactory = option.toolbarFactory\n                    ? (w) => option.toolbarFactory(w.content.renderer)\n                    : undefined;\n                const factory = new MimeDocumentFactory({\n                    renderTimeout: item.renderTimeout,\n                    dataType: item.dataType,\n                    rendermime,\n                    modelName: option.modelName,\n                    name: option.name,\n                    primaryFileType: registry.getFileType(option.primaryFileType),\n                    fileTypes: option.fileTypes,\n                    defaultFor: option.defaultFor,\n                    defaultRendered: option.defaultRendered,\n                    toolbarFactory,\n                    translator,\n                    factory: item.rendererFactory\n                });\n                registry.addWidgetFactory(factory);\n                factory.widgetCreated.connect((sender, widget) => {\n                    Private.factoryNameProperty.set(widget, factory.name);\n                    // Notify the widget tracker if restore data needs to update.\n                    widget.context.pathChanged.connect(() => {\n                        void tracker.save(widget);\n                    });\n                    void tracker.add(widget);\n                });\n            });\n        }\n    };\n}\n/**\n * Private namespace for the module.\n */\nvar Private;\n(function (Private) {\n    /**\n     * An attached property for keeping the factory name\n     * that was used to create a mimedocument.\n     */\n    Private.factoryNameProperty = new AttachedProperty({\n        name: 'factoryName',\n        create: () => undefined\n    });\n})(Private || (Private = {}));\n//# sourceMappingURL=mimerenderers.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { DocumentWidget } from '@jupyterlab/docregistry';\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { classes, DockPanelSvg, LabIcon, TabPanelSvg } from '@jupyterlab/ui-components';\nimport { ArrayExt, find, iter, toArray } from '@lumino/algorithm';\nimport { PromiseDelegate, Token } from '@lumino/coreutils';\nimport { MessageLoop } from '@lumino/messaging';\nimport { Debouncer } from '@lumino/polling';\nimport { Signal } from '@lumino/signaling';\nimport { BoxLayout, BoxPanel, FocusTracker, Panel, SplitPanel, StackedPanel, TabBar, Widget } from '@lumino/widgets';\n/**\n * The class name added to AppShell instances.\n */\nconst APPLICATION_SHELL_CLASS = 'jp-LabShell';\n/**\n * The class name added to side bar instances.\n */\nconst SIDEBAR_CLASS = 'jp-SideBar';\n/**\n * The class name added to the current widget's title.\n */\nconst CURRENT_CLASS = 'jp-mod-current';\n/**\n * The class name added to the active widget's title.\n */\nconst ACTIVE_CLASS = 'jp-mod-active';\n/**\n * The default rank of items added to a sidebar.\n */\nconst DEFAULT_RANK = 900;\nconst ACTIVITY_CLASS = 'jp-Activity';\n/**\n * The JupyterLab application shell token.\n */\nexport const ILabShell = new Token('@jupyterlab/application:ILabShell');\n/**\n * The application shell for JupyterLab.\n */\nexport class LabShell extends Widget {\n    /**\n     * Construct a new application shell.\n     */\n    constructor(options) {\n        super();\n        /**\n         * A message hook for child add/remove messages on the main area dock panel.\n         */\n        this._dockChildHook = (handler, msg) => {\n            switch (msg.type) {\n                case 'child-added':\n                    msg.child.addClass(ACTIVITY_CLASS);\n                    this._tracker.add(msg.child);\n                    break;\n                case 'child-removed':\n                    msg.child.removeClass(ACTIVITY_CLASS);\n                    this._tracker.remove(msg.child);\n                    break;\n                default:\n                    break;\n            }\n            return true;\n        };\n        this._activeChanged = new Signal(this);\n        this._cachedLayout = null;\n        this._currentChanged = new Signal(this);\n        this._currentPath = '';\n        this._currentPathChanged = new Signal(this);\n        this._modeChanged = new Signal(this);\n        this._isRestored = false;\n        this._layoutModified = new Signal(this);\n        this._layoutDebouncer = new Debouncer(() => {\n            this._layoutModified.emit(undefined);\n        }, 0);\n        this._restored = new PromiseDelegate();\n        this._tracker = new FocusTracker();\n        this._mainOptionsCache = new Map();\n        this._sideOptionsCache = new Map();\n        this.addClass(APPLICATION_SHELL_CLASS);\n        this.id = 'main';\n        const trans = ((options && options.translator) || nullTranslator).load('jupyterlab');\n        const headerPanel = (this._headerPanel = new BoxPanel());\n        const menuHandler = (this._menuHandler = new Private.PanelHandler());\n        menuHandler.panel.node.setAttribute('role', 'navigation');\n        menuHandler.panel.node.setAttribute('aria-label', trans.__('main'));\n        const topHandler = (this._topHandler = new Private.PanelHandler());\n        topHandler.panel.node.setAttribute('role', 'banner');\n        const bottomPanel = (this._bottomPanel = new BoxPanel());\n        bottomPanel.node.setAttribute('role', 'contentinfo');\n        const hboxPanel = new BoxPanel();\n        const vsplitPanel = (this._vsplitPanel = new Private.RestorableSplitPanel());\n        const dockPanel = (this._dockPanel = new DockPanelSvg());\n        MessageLoop.installMessageHook(dockPanel, this._dockChildHook);\n        const hsplitPanel = (this._hsplitPanel = new Private.RestorableSplitPanel());\n        const downPanel = (this._downPanel = new TabPanelSvg({\n            tabsMovable: true\n        }));\n        const leftHandler = (this._leftHandler = new Private.SideBarHandler());\n        const rightHandler = (this._rightHandler = new Private.SideBarHandler());\n        const rootLayout = new BoxLayout();\n        headerPanel.id = 'jp-header-panel';\n        menuHandler.panel.id = 'jp-menu-panel';\n        topHandler.panel.id = 'jp-top-panel';\n        bottomPanel.id = 'jp-bottom-panel';\n        hboxPanel.id = 'jp-main-content-panel';\n        vsplitPanel.id = 'jp-main-vsplit-panel';\n        dockPanel.id = 'jp-main-dock-panel';\n        hsplitPanel.id = 'jp-main-split-panel';\n        downPanel.id = 'jp-down-stack';\n        leftHandler.sideBar.addClass(SIDEBAR_CLASS);\n        leftHandler.sideBar.addClass('jp-mod-left');\n        leftHandler.sideBar.node.setAttribute('aria-label', trans.__('main sidebar'));\n        leftHandler.sideBar.contentNode.setAttribute('aria-label', trans.__('main sidebar'));\n        leftHandler.sideBar.node.setAttribute('role', 'complementary');\n        leftHandler.stackedPanel.id = 'jp-left-stack';\n        rightHandler.sideBar.addClass(SIDEBAR_CLASS);\n        rightHandler.sideBar.addClass('jp-mod-right');\n        rightHandler.sideBar.node.setAttribute('aria-label', trans.__('alternate sidebar'));\n        rightHandler.sideBar.contentNode.setAttribute('aria-label', trans.__('alternate sidebar'));\n        rightHandler.sideBar.node.setAttribute('role', 'complementary');\n        rightHandler.stackedPanel.id = 'jp-right-stack';\n        dockPanel.node.setAttribute('role', 'main');\n        hboxPanel.spacing = 0;\n        vsplitPanel.spacing = 1;\n        dockPanel.spacing = 5;\n        hsplitPanel.spacing = 1;\n        headerPanel.direction = 'top-to-bottom';\n        vsplitPanel.orientation = 'vertical';\n        hboxPanel.direction = 'left-to-right';\n        hsplitPanel.orientation = 'horizontal';\n        bottomPanel.direction = 'bottom-to-top';\n        SplitPanel.setStretch(leftHandler.stackedPanel, 0);\n        SplitPanel.setStretch(downPanel, 0);\n        SplitPanel.setStretch(dockPanel, 1);\n        SplitPanel.setStretch(rightHandler.stackedPanel, 0);\n        BoxPanel.setStretch(leftHandler.sideBar, 0);\n        BoxPanel.setStretch(hsplitPanel, 1);\n        BoxPanel.setStretch(rightHandler.sideBar, 0);\n        SplitPanel.setStretch(vsplitPanel, 1);\n        hsplitPanel.addWidget(leftHandler.stackedPanel);\n        hsplitPanel.addWidget(dockPanel);\n        hsplitPanel.addWidget(rightHandler.stackedPanel);\n        vsplitPanel.addWidget(hsplitPanel);\n        vsplitPanel.addWidget(downPanel);\n        hboxPanel.addWidget(leftHandler.sideBar);\n        hboxPanel.addWidget(vsplitPanel);\n        hboxPanel.addWidget(rightHandler.sideBar);\n        rootLayout.direction = 'top-to-bottom';\n        rootLayout.spacing = 0; // TODO make this configurable?\n        // Use relative sizing to set the width of the side panels.\n        // This will still respect the min-size of children widget in the stacked\n        // panel. The default sizes will be overwritten during layout restoration.\n        vsplitPanel.setRelativeSizes([3, 1]);\n        hsplitPanel.setRelativeSizes([1, 2.5, 1]);\n        BoxLayout.setStretch(headerPanel, 0);\n        BoxLayout.setStretch(menuHandler.panel, 0);\n        BoxLayout.setStretch(topHandler.panel, 0);\n        BoxLayout.setStretch(hboxPanel, 1);\n        BoxLayout.setStretch(bottomPanel, 0);\n        rootLayout.addWidget(headerPanel);\n        rootLayout.addWidget(topHandler.panel);\n        rootLayout.addWidget(hboxPanel);\n        rootLayout.addWidget(bottomPanel);\n        // initially hiding header and bottom panel when no elements inside,\n        this._headerPanel.hide();\n        this._bottomPanel.hide();\n        this._downPanel.hide();\n        this.layout = rootLayout;\n        // Connect change listeners.\n        this._tracker.currentChanged.connect(this._onCurrentChanged, this);\n        this._tracker.activeChanged.connect(this._onActiveChanged, this);\n        // Connect main layout change listener.\n        this._dockPanel.layoutModified.connect(this._onLayoutModified, this);\n        // Connect vsplit layout change listener\n        this._vsplitPanel.updated.connect(this._onLayoutModified, this);\n        // Connect down panel change listeners\n        this._downPanel.currentChanged.connect(this._onLayoutModified, this);\n        this._downPanel.tabBar.tabMoved.connect(this._onTabPanelChanged, this);\n        this._downPanel.stackedPanel.widgetRemoved.connect(this._onTabPanelChanged, this);\n        // Catch current changed events on the side handlers.\n        this._leftHandler.sideBar.currentChanged.connect(this._onLayoutModified, this);\n        this._rightHandler.sideBar.currentChanged.connect(this._onLayoutModified, this);\n        // Catch update events on the horizontal split panel\n        this._hsplitPanel.updated.connect(this._onLayoutModified, this);\n        // Setup single-document-mode title bar\n        const titleHandler = (this._titleHandler = new Private.TitleHandler(this));\n        this.add(titleHandler, 'top', { rank: 100 });\n        if (this._dockPanel.mode === 'multiple-document') {\n            this._topHandler.addWidget(this._menuHandler.panel, 100);\n            titleHandler.hide();\n        }\n        else {\n            rootLayout.insertWidget(2, this._menuHandler.panel);\n        }\n        // Skip Links\n        const skipLinkWidget = (this._skipLinkWidget = new Private.SkipLinkWidget(this));\n        this.add(skipLinkWidget, 'top', { rank: 0 });\n        this._skipLinkWidget.show();\n        // Wire up signals to update the title panel of the simple interface mode to\n        // follow the title of this.currentWidget\n        this.currentChanged.connect((sender, args) => {\n            let newValue = args.newValue;\n            let oldValue = args.oldValue;\n            // Stop watching the title of the previously current widget\n            if (oldValue) {\n                oldValue.title.changed.disconnect(this._updateTitlePanelTitle, this);\n            }\n            // Start watching the title of the new current widget\n            if (newValue) {\n                newValue.title.changed.connect(this._updateTitlePanelTitle, this);\n                this._updateTitlePanelTitle();\n            }\n            if (newValue && newValue instanceof DocumentWidget) {\n                newValue.context.pathChanged.connect(this._updateCurrentPath, this);\n            }\n            this._updateCurrentPath();\n        });\n    }\n    /**\n     * A signal emitted when main area's active focus changes.\n     */\n    get activeChanged() {\n        return this._activeChanged;\n    }\n    /**\n     * The active widget in the shell's main area.\n     */\n    get activeWidget() {\n        return this._tracker.activeWidget;\n    }\n    /**\n     * A signal emitted when main area's current focus changes.\n     */\n    get currentChanged() {\n        return this._currentChanged;\n    }\n    /**\n     * A signal emitted when the shell/dock panel change modes (single/multiple document).\n     */\n    get modeChanged() {\n        return this._modeChanged;\n    }\n    /**\n     * A signal emitted when the path of the current document changes.\n     *\n     * This also fires when the current document itself changes.\n     */\n    get currentPathChanged() {\n        return this._currentPathChanged;\n    }\n    /**\n     * The current widget in the shell's main area.\n     */\n    get currentWidget() {\n        return this._tracker.currentWidget;\n    }\n    /**\n     * A signal emitted when the main area's layout is modified.\n     */\n    get layoutModified() {\n        return this._layoutModified;\n    }\n    /**\n     * Whether the left area is collapsed.\n     */\n    get leftCollapsed() {\n        return !this._leftHandler.sideBar.currentTitle;\n    }\n    /**\n     * Whether the left area is collapsed.\n     */\n    get rightCollapsed() {\n        return !this._rightHandler.sideBar.currentTitle;\n    }\n    /**\n     * Whether JupyterLab is in presentation mode with the\n     * `jp-mod-presentationMode` CSS class.\n     */\n    get presentationMode() {\n        return this.hasClass('jp-mod-presentationMode');\n    }\n    /**\n     * Enable/disable presentation mode (`jp-mod-presentationMode` CSS class) with\n     * a boolean.\n     */\n    set presentationMode(value) {\n        this.toggleClass('jp-mod-presentationMode', value);\n    }\n    /**\n     * The main dock area's user interface mode.\n     */\n    get mode() {\n        return this._dockPanel.mode;\n    }\n    set mode(mode) {\n        const dock = this._dockPanel;\n        if (mode === dock.mode) {\n            return;\n        }\n        const applicationCurrentWidget = this.currentWidget;\n        // Toggle back to multiple document mode.\n        dock.mode = mode;\n        if (mode === 'single-document') {\n            this._cachedLayout = dock.saveLayout();\n            // In case the active widget in the dock panel is *not* the active widget\n            // of the application, defer to the application.\n            if (this.currentWidget) {\n                dock.activateWidget(this.currentWidget);\n            }\n            // Adjust menu and title\n            this.layout.insertWidget(2, this._menuHandler.panel);\n            this._titleHandler.show();\n            this._updateTitlePanelTitle();\n        }\n        else {\n            // Cache a reference to every widget currently in the dock panel.\n            const widgets = toArray(dock.widgets());\n            // Restore the original layout.\n            if (this._cachedLayout) {\n                // Remove any disposed widgets in the cached layout and restore.\n                Private.normalizeAreaConfig(dock, this._cachedLayout.main);\n                dock.restoreLayout(this._cachedLayout);\n                this._cachedLayout = null;\n            }\n            // Add any widgets created during single document mode, which have\n            // subsequently been removed from the dock panel after the multiple document\n            // layout has been restored. If the widget has add options cached for\n            // the widget (i.e., if it has been placed with respect to another widget),\n            // then take that into account.\n            widgets.forEach(widget => {\n                if (!widget.parent) {\n                    this._addToMainArea(widget, Object.assign(Object.assign({}, this._mainOptionsCache.get(widget)), { activate: false }));\n                }\n            });\n            this._mainOptionsCache.clear();\n            // In case the active widget in the dock panel is *not* the active widget\n            // of the application, defer to the application.\n            if (applicationCurrentWidget) {\n                dock.activateWidget(applicationCurrentWidget);\n            }\n            // Adjust menu and title\n            this.add(this._menuHandler.panel, 'top', { rank: 100 });\n            // this._topHandler.addWidget(this._menuHandler.panel, 100)\n            this._titleHandler.hide();\n        }\n        // Set the mode data attribute on the applications shell node.\n        this.node.dataset.shellMode = mode;\n        this._downPanel.fit();\n        // Emit the mode changed signal\n        this._modeChanged.emit(mode);\n    }\n    /**\n     * Promise that resolves when state is first restored, returning layout\n     * description.\n     */\n    get restored() {\n        return this._restored.promise;\n    }\n    /**\n     * Activate a widget in its area.\n     */\n    activateById(id) {\n        if (this._leftHandler.has(id)) {\n            this._leftHandler.activate(id);\n            return;\n        }\n        if (this._rightHandler.has(id)) {\n            this._rightHandler.activate(id);\n            return;\n        }\n        const tabIndex = this._downPanel.tabBar.titles.findIndex(title => title.owner.id === id);\n        if (tabIndex >= 0) {\n            this._downPanel.currentIndex = tabIndex;\n            return;\n        }\n        const dock = this._dockPanel;\n        const widget = find(dock.widgets(), value => value.id === id);\n        if (widget) {\n            dock.activateWidget(widget);\n        }\n    }\n    /*\n     * Activate the next Tab in the active TabBar.\n     */\n    activateNextTab() {\n        const current = this._currentTabBar();\n        if (!current) {\n            return;\n        }\n        const ci = current.currentIndex;\n        if (ci === -1) {\n            return;\n        }\n        if (ci < current.titles.length - 1) {\n            current.currentIndex += 1;\n            if (current.currentTitle) {\n                current.currentTitle.owner.activate();\n            }\n            return;\n        }\n        if (ci === current.titles.length - 1) {\n            const nextBar = this._adjacentBar('next');\n            if (nextBar) {\n                nextBar.currentIndex = 0;\n                if (nextBar.currentTitle) {\n                    nextBar.currentTitle.owner.activate();\n                }\n            }\n        }\n    }\n    /*\n     * Activate the previous Tab in the active TabBar.\n     */\n    activatePreviousTab() {\n        const current = this._currentTabBar();\n        if (!current) {\n            return;\n        }\n        const ci = current.currentIndex;\n        if (ci === -1) {\n            return;\n        }\n        if (ci > 0) {\n            current.currentIndex -= 1;\n            if (current.currentTitle) {\n                current.currentTitle.owner.activate();\n            }\n            return;\n        }\n        if (ci === 0) {\n            const prevBar = this._adjacentBar('previous');\n            if (prevBar) {\n                const len = prevBar.titles.length;\n                prevBar.currentIndex = len - 1;\n                if (prevBar.currentTitle) {\n                    prevBar.currentTitle.owner.activate();\n                }\n            }\n        }\n    }\n    /*\n     * Activate the next TabBar.\n     */\n    activateNextTabBar() {\n        const nextBar = this._adjacentBar('next');\n        if (nextBar) {\n            if (nextBar.currentTitle) {\n                nextBar.currentTitle.owner.activate();\n            }\n        }\n    }\n    /*\n     * Activate the next TabBar.\n     */\n    activatePreviousTabBar() {\n        const nextBar = this._adjacentBar('previous');\n        if (nextBar) {\n            if (nextBar.currentTitle) {\n                nextBar.currentTitle.owner.activate();\n            }\n        }\n    }\n    add(widget, area = 'main', options) {\n        switch (area || 'main') {\n            case 'bottom':\n                return this._addToBottomArea(widget, options);\n            case 'down':\n                return this._addToDownArea(widget, options);\n            case 'header':\n                return this._addToHeaderArea(widget, options);\n            case 'left':\n                return this._addToLeftArea(widget, options);\n            case 'main':\n                return this._addToMainArea(widget, options);\n            case 'menu':\n                return this._addToMenuArea(widget, options);\n            case 'right':\n                return this._addToRightArea(widget, options);\n            case 'top':\n                return this._addToTopArea(widget, options);\n            default:\n                throw new Error(`Invalid area: ${area}`);\n        }\n    }\n    /**\n     * Collapse the left area.\n     */\n    collapseLeft() {\n        this._leftHandler.collapse();\n        this._onLayoutModified();\n    }\n    /**\n     * Collapse the right area.\n     */\n    collapseRight() {\n        this._rightHandler.collapse();\n        this._onLayoutModified();\n    }\n    /**\n     * Dispose the shell.\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this._layoutDebouncer.dispose();\n        super.dispose();\n    }\n    /**\n     * Expand the left area.\n     *\n     * #### Notes\n     * This will open the most recently used tab,\n     * or the first tab if there is no most recently used.\n     */\n    expandLeft() {\n        this._leftHandler.expand();\n        this._onLayoutModified();\n    }\n    /**\n     * Expand the right area.\n     *\n     * #### Notes\n     * This will open the most recently used tab,\n     * or the first tab if there is no most recently used.\n     */\n    expandRight() {\n        this._rightHandler.expand();\n        this._onLayoutModified();\n    }\n    /**\n     * Close all widgets in the main and down area.\n     */\n    closeAll() {\n        // Make a copy of all the widget in the dock panel (using `toArray()`)\n        // before removing them because removing them while iterating through them\n        // modifies the underlying data of the iterator.\n        toArray(this._dockPanel.widgets()).forEach(widget => widget.close());\n        this._downPanel.stackedPanel.widgets.forEach(widget => widget.close());\n    }\n    /**\n     * True if the given area is empty.\n     */\n    isEmpty(area) {\n        switch (area) {\n            case 'bottom':\n                return this._bottomPanel.widgets.length === 0;\n            case 'down':\n                return this._downPanel.stackedPanel.widgets.length === 0;\n            case 'header':\n                return this._headerPanel.widgets.length === 0;\n            case 'left':\n                return this._leftHandler.stackedPanel.widgets.length === 0;\n            case 'main':\n                return this._dockPanel.isEmpty;\n            case 'menu':\n                return this._menuHandler.panel.widgets.length === 0;\n            case 'right':\n                return this._rightHandler.stackedPanel.widgets.length === 0;\n            case 'top':\n                return this._topHandler.panel.widgets.length === 0;\n            default:\n                return true;\n        }\n    }\n    /**\n     * Restore the layout state for the application shell.\n     */\n    restoreLayout(mode, layout) {\n        var _a, _b;\n        const { mainArea, downArea, leftArea, rightArea, relativeSizes } = layout;\n        // Rehydrate the main area.\n        if (mainArea) {\n            const { currentWidget, dock } = mainArea;\n            if (dock) {\n                this._dockPanel.restoreLayout(dock);\n            }\n            if (mode) {\n                this.mode = mode;\n            }\n            if (currentWidget) {\n                this.activateById(currentWidget.id);\n            }\n        }\n        else {\n            // This is needed when loading in an empty workspace in single doc mode\n            if (mode) {\n                this.mode = mode;\n            }\n        }\n        // Rehydrate the down area\n        if (downArea) {\n            const { currentWidget, widgets, size } = downArea;\n            const widgetIds = (_a = widgets === null || widgets === void 0 ? void 0 : widgets.map(widget => widget.id)) !== null && _a !== void 0 ? _a : [];\n            // Remove absent widgets\n            this._downPanel.tabBar.titles\n                .filter(title => !widgetIds.includes(title.owner.id))\n                .map(title => title.owner.close());\n            // Add new widgets\n            const titleIds = this._downPanel.tabBar.titles.map(title => title.owner.id);\n            widgets === null || widgets === void 0 ? void 0 : widgets.filter(widget => !titleIds.includes(widget.id)).map(widget => this._downPanel.addWidget(widget));\n            // Reorder tabs\n            while (!ArrayExt.shallowEqual(widgetIds, this._downPanel.tabBar.titles.map(title => title.owner.id))) {\n                this._downPanel.tabBar.titles.forEach((title, index) => {\n                    const position = widgetIds.findIndex(id => title.owner.id == id);\n                    if (position >= 0 && position != index) {\n                        this._downPanel.tabBar.insertTab(position, title);\n                    }\n                });\n            }\n            if (currentWidget) {\n                const index = this._downPanel.stackedPanel.widgets.findIndex(widget => widget.id === currentWidget.id);\n                if (index) {\n                    this._downPanel.currentIndex = index;\n                    (_b = this._downPanel.currentWidget) === null || _b === void 0 ? void 0 : _b.activate();\n                }\n            }\n            if (size && size > 0.0) {\n                this._vsplitPanel.setRelativeSizes([1.0 - size, size]);\n            }\n            else {\n                // Close all tabs and hide the panel\n                this._downPanel.stackedPanel.widgets.forEach(widget => widget.close());\n                this._downPanel.hide();\n            }\n        }\n        // Rehydrate the left area.\n        if (leftArea) {\n            this._leftHandler.rehydrate(leftArea);\n        }\n        else {\n            if (mode === 'single-document') {\n                this.collapseLeft();\n            }\n        }\n        // Rehydrate the right area.\n        if (rightArea) {\n            this._rightHandler.rehydrate(rightArea);\n        }\n        else {\n            if (mode === 'single-document') {\n                this.collapseRight();\n            }\n        }\n        // Restore the relative sizes.\n        if (relativeSizes) {\n            this._hsplitPanel.setRelativeSizes(relativeSizes);\n        }\n        if (!this._isRestored) {\n            // Make sure all messages in the queue are finished before notifying\n            // any extensions that are waiting for the promise that guarantees the\n            // application state has been restored.\n            MessageLoop.flush();\n            this._restored.resolve(layout);\n        }\n    }\n    /**\n     * Save the dehydrated state of the application shell.\n     */\n    saveLayout() {\n        // If the application is in single document mode, use the cached layout if\n        // available. Otherwise, default to querying the dock panel for layout.\n        const layout = {\n            mainArea: {\n                currentWidget: this._tracker.currentWidget,\n                dock: this.mode === 'single-document'\n                    ? this._cachedLayout || this._dockPanel.saveLayout()\n                    : this._dockPanel.saveLayout()\n            },\n            downArea: {\n                currentWidget: this._downPanel.currentWidget,\n                widgets: toArray(this._downPanel.stackedPanel.widgets),\n                size: this._vsplitPanel.relativeSizes()[1]\n            },\n            leftArea: this._leftHandler.dehydrate(),\n            rightArea: this._rightHandler.dehydrate(),\n            relativeSizes: this._hsplitPanel.relativeSizes()\n        };\n        return layout;\n    }\n    /**\n     * Returns the widgets for an application area.\n     */\n    widgets(area) {\n        switch (area !== null && area !== void 0 ? area : 'main') {\n            case 'main':\n                return this._dockPanel.widgets();\n            case 'left':\n                return iter(this._leftHandler.sideBar.titles.map(t => t.owner));\n            case 'right':\n                return iter(this._rightHandler.sideBar.titles.map(t => t.owner));\n            case 'header':\n                return this._headerPanel.children();\n            case 'top':\n                return this._topHandler.panel.children();\n            case 'menu':\n                return this._menuHandler.panel.children();\n            case 'bottom':\n                return this._bottomPanel.children();\n            default:\n                throw new Error(`Invalid area: ${area}`);\n        }\n    }\n    /**\n     * Handle `after-attach` messages for the application shell.\n     */\n    onAfterAttach(msg) {\n        this.node.dataset.shellMode = this.mode;\n    }\n    /**\n     * Update the title panel title based on the title of the current widget.\n     */\n    _updateTitlePanelTitle() {\n        let current = this.currentWidget;\n        const inputElement = this._titleHandler.inputElement;\n        inputElement.value = current ? current.title.label : '';\n        inputElement.title = current ? current.title.caption : '';\n    }\n    /**\n     * The path of the current widget changed, fire the _currentPathChanged signal.\n     */\n    _updateCurrentPath() {\n        let current = this.currentWidget;\n        let newValue = '';\n        if (current && current instanceof DocumentWidget) {\n            newValue = current.context.path;\n        }\n        this._currentPathChanged.emit({\n            newValue: newValue,\n            oldValue: this._currentPath\n        });\n        this._currentPath = newValue;\n    }\n    /**\n     * Add a widget to the left content area.\n     *\n     * #### Notes\n     * Widgets must have a unique `id` property, which will be used as the DOM id.\n     */\n    _addToLeftArea(widget, options) {\n        if (!widget.id) {\n            console.error('Widgets added to app shell must have unique id property.');\n            return;\n        }\n        options = options || this._sideOptionsCache.get(widget) || {};\n        this._sideOptionsCache.set(widget, options);\n        const rank = 'rank' in options ? options.rank : DEFAULT_RANK;\n        this._leftHandler.addWidget(widget, rank);\n        this._onLayoutModified();\n    }\n    /**\n     * Add a widget to the main content area.\n     *\n     * #### Notes\n     * Widgets must have a unique `id` property, which will be used as the DOM id.\n     * All widgets added to the main area should be disposed after removal\n     * (disposal before removal will remove the widget automatically).\n     *\n     * In the options, `ref` defaults to `null`, `mode` defaults to `'tab-after'`,\n     * and `activate` defaults to `true`.\n     */\n    _addToMainArea(widget, options) {\n        if (!widget.id) {\n            console.error('Widgets added to app shell must have unique id property.');\n            return;\n        }\n        options = options || {};\n        const dock = this._dockPanel;\n        const mode = options.mode || 'tab-after';\n        let ref = this.currentWidget;\n        if (options.ref) {\n            ref = find(dock.widgets(), value => value.id === options.ref) || null;\n        }\n        const { title } = widget;\n        // Add widget ID to tab so that we can get a handle on the tab's widget\n        // (for context menu support)\n        title.dataset = Object.assign(Object.assign({}, title.dataset), { id: widget.id });\n        if (title.icon instanceof LabIcon) {\n            // bind an appropriate style to the icon\n            title.icon = title.icon.bindprops({\n                stylesheet: 'mainAreaTab'\n            });\n        }\n        else if (typeof title.icon === 'string' || !title.icon) {\n            // add some classes to help with displaying css background imgs\n            title.iconClass = classes(title.iconClass, 'jp-Icon');\n        }\n        dock.addWidget(widget, { mode, ref });\n        // The dock panel doesn't account for placement information while\n        // in single document mode, so upon rehydrating any widgets that were\n        // added will not be in the correct place. Cache the placement information\n        // here so that we can later rehydrate correctly.\n        if (dock.mode === 'single-document') {\n            this._mainOptionsCache.set(widget, options);\n        }\n        if (options.activate !== false) {\n            dock.activateWidget(widget);\n        }\n    }\n    /**\n     * Add a widget to the right content area.\n     *\n     * #### Notes\n     * Widgets must have a unique `id` property, which will be used as the DOM id.\n     */\n    _addToRightArea(widget, options) {\n        if (!widget.id) {\n            console.error('Widgets added to app shell must have unique id property.');\n            return;\n        }\n        options = options || this._sideOptionsCache.get(widget) || {};\n        const rank = 'rank' in options ? options.rank : DEFAULT_RANK;\n        this._sideOptionsCache.set(widget, options);\n        this._rightHandler.addWidget(widget, rank);\n        this._onLayoutModified();\n    }\n    /**\n     * Add a widget to the top content area.\n     *\n     * #### Notes\n     * Widgets must have a unique `id` property, which will be used as the DOM id.\n     */\n    _addToTopArea(widget, options) {\n        var _a;\n        if (!widget.id) {\n            console.error('Widgets added to app shell must have unique id property.');\n            return;\n        }\n        options = options || {};\n        const rank = (_a = options.rank) !== null && _a !== void 0 ? _a : DEFAULT_RANK;\n        this._topHandler.addWidget(widget, rank);\n        this._onLayoutModified();\n        if (this._topHandler.panel.isHidden) {\n            this._topHandler.panel.show();\n        }\n    }\n    /**\n     * Add a widget to the title content area.\n     *\n     * #### Notes\n     * Widgets must have a unique `id` property, which will be used as the DOM id.\n     */\n    _addToMenuArea(widget, options) {\n        var _a;\n        if (!widget.id) {\n            console.error('Widgets added to app shell must have unique id property.');\n            return;\n        }\n        options = options || {};\n        const rank = (_a = options.rank) !== null && _a !== void 0 ? _a : DEFAULT_RANK;\n        this._menuHandler.addWidget(widget, rank);\n        this._onLayoutModified();\n        if (this._menuHandler.panel.isHidden) {\n            this._menuHandler.panel.show();\n        }\n    }\n    /**\n     * Add a widget to the header content area.\n     *\n     * #### Notes\n     * Widgets must have a unique `id` property, which will be used as the DOM id.\n     */\n    _addToHeaderArea(widget, options) {\n        if (!widget.id) {\n            console.error('Widgets added to app shell must have unique id property.');\n            return;\n        }\n        // Temporary: widgets are added to the panel in order of insertion.\n        this._headerPanel.addWidget(widget);\n        this._onLayoutModified();\n        if (this._headerPanel.isHidden) {\n            this._headerPanel.show();\n        }\n    }\n    /**\n     * Add a widget to the bottom content area.\n     *\n     * #### Notes\n     * Widgets must have a unique `id` property, which will be used as the DOM id.\n     */\n    _addToBottomArea(widget, options) {\n        if (!widget.id) {\n            console.error('Widgets added to app shell must have unique id property.');\n            return;\n        }\n        // Temporary: widgets are added to the panel in order of insertion.\n        this._bottomPanel.addWidget(widget);\n        this._onLayoutModified();\n        if (this._bottomPanel.isHidden) {\n            this._bottomPanel.show();\n        }\n    }\n    _addToDownArea(widget, options) {\n        if (!widget.id) {\n            console.error('Widgets added to app shell must have unique id property.');\n            return;\n        }\n        options = options || {};\n        const { title } = widget;\n        // Add widget ID to tab so that we can get a handle on the tab's widget\n        // (for context menu support)\n        title.dataset = Object.assign(Object.assign({}, title.dataset), { id: widget.id });\n        if (title.icon instanceof LabIcon) {\n            // bind an appropriate style to the icon\n            title.icon = title.icon.bindprops({\n                stylesheet: 'mainAreaTab'\n            });\n        }\n        else if (typeof title.icon === 'string' || !title.icon) {\n            // add some classes to help with displaying css background imgs\n            title.iconClass = classes(title.iconClass, 'jp-Icon');\n        }\n        this._downPanel.addWidget(widget);\n        this._onLayoutModified();\n        if (this._downPanel.isHidden) {\n            this._downPanel.show();\n        }\n    }\n    /*\n     * Return the tab bar adjacent to the current TabBar or `null`.\n     */\n    _adjacentBar(direction) {\n        const current = this._currentTabBar();\n        if (!current) {\n            return null;\n        }\n        const bars = toArray(this._dockPanel.tabBars());\n        const len = bars.length;\n        const index = bars.indexOf(current);\n        if (direction === 'previous') {\n            return index > 0 ? bars[index - 1] : index === 0 ? bars[len - 1] : null;\n        }\n        // Otherwise, direction is 'next'.\n        return index < len - 1\n            ? bars[index + 1]\n            : index === len - 1\n                ? bars[0]\n                : null;\n    }\n    /*\n     * Return the TabBar that has the currently active Widget or null.\n     */\n    _currentTabBar() {\n        const current = this._tracker.currentWidget;\n        if (!current) {\n            return null;\n        }\n        const title = current.title;\n        const bars = this._dockPanel.tabBars();\n        return find(bars, bar => bar.titles.indexOf(title) > -1) || null;\n    }\n    /**\n     * Handle a change to the dock area active widget.\n     */\n    _onActiveChanged(sender, args) {\n        if (args.newValue) {\n            args.newValue.title.className += ` ${ACTIVE_CLASS}`;\n        }\n        if (args.oldValue) {\n            args.oldValue.title.className = args.oldValue.title.className.replace(ACTIVE_CLASS, '');\n        }\n        this._activeChanged.emit(args);\n    }\n    /**\n     * Handle a change to the dock area current widget.\n     */\n    _onCurrentChanged(sender, args) {\n        if (args.newValue) {\n            args.newValue.title.className += ` ${CURRENT_CLASS}`;\n        }\n        if (args.oldValue) {\n            args.oldValue.title.className = args.oldValue.title.className.replace(CURRENT_CLASS, '');\n        }\n        this._currentChanged.emit(args);\n        this._onLayoutModified();\n    }\n    /**\n     * Handle a change on the down panel widgets\n     */\n    _onTabPanelChanged() {\n        if (this._downPanel.stackedPanel.widgets.length === 0) {\n            this._downPanel.hide();\n        }\n        this._onLayoutModified();\n    }\n    /**\n     * Handle a change to the layout.\n     */\n    _onLayoutModified() {\n        void this._layoutDebouncer.invoke();\n    }\n}\nvar Private;\n(function (Private) {\n    /**\n     * A less-than comparison function for side bar rank items.\n     */\n    function itemCmp(first, second) {\n        return first.rank - second.rank;\n    }\n    Private.itemCmp = itemCmp;\n    /**\n     * Removes widgets that have been disposed from an area config, mutates area.\n     */\n    function normalizeAreaConfig(parent, area) {\n        if (!area) {\n            return;\n        }\n        if (area.type === 'tab-area') {\n            area.widgets = area.widgets.filter(widget => !widget.isDisposed && widget.parent === parent);\n            return;\n        }\n        area.children.forEach(child => {\n            normalizeAreaConfig(parent, child);\n        });\n    }\n    Private.normalizeAreaConfig = normalizeAreaConfig;\n    /**\n     * A class which manages a panel and sorts its widgets by rank.\n     */\n    class PanelHandler {\n        constructor() {\n            /**\n             * A message hook for child add/remove messages on the main area dock panel.\n             */\n            this._panelChildHook = (handler, msg) => {\n                switch (msg.type) {\n                    case 'child-added':\n                        {\n                            const widget = msg.child;\n                            // If we already know about this widget, we're done\n                            if (this._items.find(v => v.widget === widget)) {\n                                break;\n                            }\n                            // Otherwise, add to the end by default\n                            const rank = this._items[this._items.length - 1].rank;\n                            this._items.push({ widget, rank });\n                        }\n                        break;\n                    case 'child-removed':\n                        {\n                            const widget = msg.child;\n                            ArrayExt.removeFirstWhere(this._items, v => v.widget === widget);\n                        }\n                        break;\n                    default:\n                        break;\n                }\n                return true;\n            };\n            this._items = new Array();\n            this._panel = new Panel();\n            MessageLoop.installMessageHook(this._panel, this._panelChildHook);\n        }\n        /**\n         * Get the panel managed by the handler.\n         */\n        get panel() {\n            return this._panel;\n        }\n        /**\n         * Add a widget to the panel.\n         *\n         * If the widget is already added, it will be moved.\n         */\n        addWidget(widget, rank) {\n            widget.parent = null;\n            const item = { widget, rank };\n            const index = ArrayExt.upperBound(this._items, item, Private.itemCmp);\n            ArrayExt.insert(this._items, index, item);\n            this._panel.insertWidget(index, widget);\n        }\n    }\n    Private.PanelHandler = PanelHandler;\n    /**\n     * A class which manages a side bar and related stacked panel.\n     */\n    class SideBarHandler {\n        /**\n         * Construct a new side bar handler.\n         */\n        constructor() {\n            this._items = new Array();\n            this._sideBar = new TabBar({\n                insertBehavior: 'none',\n                removeBehavior: 'none',\n                allowDeselect: true,\n                orientation: 'vertical'\n            });\n            this._stackedPanel = new StackedPanel();\n            this._sideBar.hide();\n            this._stackedPanel.hide();\n            this._lastCurrent = null;\n            this._sideBar.currentChanged.connect(this._onCurrentChanged, this);\n            this._sideBar.tabActivateRequested.connect(this._onTabActivateRequested, this);\n            this._stackedPanel.widgetRemoved.connect(this._onWidgetRemoved, this);\n        }\n        /**\n         * Get the tab bar managed by the handler.\n         */\n        get sideBar() {\n            return this._sideBar;\n        }\n        /**\n         * Get the stacked panel managed by the handler\n         */\n        get stackedPanel() {\n            return this._stackedPanel;\n        }\n        /**\n         * Expand the sidebar.\n         *\n         * #### Notes\n         * This will open the most recently used tab, or the first tab\n         * if there is no most recently used.\n         */\n        expand() {\n            const previous = this._lastCurrent || (this._items.length > 0 && this._items[0].widget);\n            if (previous) {\n                this.activate(previous.id);\n            }\n        }\n        /**\n         * Activate a widget residing in the side bar by ID.\n         *\n         * @param id - The widget's unique ID.\n         */\n        activate(id) {\n            const widget = this._findWidgetByID(id);\n            if (widget) {\n                this._sideBar.currentTitle = widget.title;\n                widget.activate();\n            }\n        }\n        /**\n         * Test whether the sidebar has the given widget by id.\n         */\n        has(id) {\n            return this._findWidgetByID(id) !== null;\n        }\n        /**\n         * Collapse the sidebar so no items are expanded.\n         */\n        collapse() {\n            this._sideBar.currentTitle = null;\n        }\n        /**\n         * Add a widget and its title to the stacked panel and side bar.\n         *\n         * If the widget is already added, it will be moved.\n         */\n        addWidget(widget, rank) {\n            widget.parent = null;\n            widget.hide();\n            const item = { widget, rank };\n            const index = this._findInsertIndex(item);\n            ArrayExt.insert(this._items, index, item);\n            this._stackedPanel.insertWidget(index, widget);\n            const title = this._sideBar.insertTab(index, widget.title);\n            // Store the parent id in the title dataset\n            // in order to dispatch click events to the right widget.\n            title.dataset = { id: widget.id };\n            if (title.icon instanceof LabIcon) {\n                // bind an appropriate style to the icon\n                title.icon = title.icon.bindprops({\n                    stylesheet: 'sideBar'\n                });\n            }\n            else if (typeof title.icon === 'string' || !title.icon) {\n                // add some classes to help with displaying css background imgs\n                title.iconClass = classes(title.iconClass, 'jp-Icon', 'jp-Icon-20');\n            }\n            this._refreshVisibility();\n        }\n        /**\n         * Dehydrate the side bar data.\n         */\n        dehydrate() {\n            const collapsed = this._sideBar.currentTitle === null;\n            const widgets = toArray(this._stackedPanel.widgets);\n            const currentWidget = widgets[this._sideBar.currentIndex];\n            return { collapsed, currentWidget, widgets };\n        }\n        /**\n         * Rehydrate the side bar.\n         */\n        rehydrate(data) {\n            if (data.currentWidget) {\n                this.activate(data.currentWidget.id);\n            }\n            if (data.collapsed) {\n                this.collapse();\n            }\n        }\n        /**\n         * Find the insertion index for a rank item.\n         */\n        _findInsertIndex(item) {\n            return ArrayExt.upperBound(this._items, item, Private.itemCmp);\n        }\n        /**\n         * Find the index of the item with the given widget, or `-1`.\n         */\n        _findWidgetIndex(widget) {\n            return ArrayExt.findFirstIndex(this._items, i => i.widget === widget);\n        }\n        /**\n         * Find the widget which owns the given title, or `null`.\n         */\n        _findWidgetByTitle(title) {\n            const item = find(this._items, value => value.widget.title === title);\n            return item ? item.widget : null;\n        }\n        /**\n         * Find the widget with the given id, or `null`.\n         */\n        _findWidgetByID(id) {\n            const item = find(this._items, value => value.widget.id === id);\n            return item ? item.widget : null;\n        }\n        /**\n         * Refresh the visibility of the side bar and stacked panel.\n         */\n        _refreshVisibility() {\n            this._sideBar.setHidden(this._sideBar.titles.length === 0);\n            this._stackedPanel.setHidden(this._sideBar.currentTitle === null);\n        }\n        /**\n         * Handle the `currentChanged` signal from the sidebar.\n         */\n        _onCurrentChanged(sender, args) {\n            const oldWidget = args.previousTitle\n                ? this._findWidgetByTitle(args.previousTitle)\n                : null;\n            const newWidget = args.currentTitle\n                ? this._findWidgetByTitle(args.currentTitle)\n                : null;\n            if (oldWidget) {\n                oldWidget.hide();\n            }\n            if (newWidget) {\n                newWidget.show();\n            }\n            this._lastCurrent = newWidget || oldWidget;\n            this._refreshVisibility();\n        }\n        /**\n         * Handle a `tabActivateRequest` signal from the sidebar.\n         */\n        _onTabActivateRequested(sender, args) {\n            args.title.owner.activate();\n        }\n        /*\n         * Handle the `widgetRemoved` signal from the stacked panel.\n         */\n        _onWidgetRemoved(sender, widget) {\n            if (widget === this._lastCurrent) {\n                this._lastCurrent = null;\n            }\n            ArrayExt.removeAt(this._items, this._findWidgetIndex(widget));\n            this._sideBar.removeTab(widget.title);\n            this._refreshVisibility();\n        }\n    }\n    Private.SideBarHandler = SideBarHandler;\n    class SkipLinkWidget extends Widget {\n        /**\n         * Construct a new skipLink widget.\n         */\n        constructor(shell) {\n            super();\n            this.addClass('jp-skiplink');\n            this.id = 'jp-skiplink';\n            this._shell = shell;\n            this._createSkipLink('Skip to left side bar');\n        }\n        handleEvent(event) {\n            switch (event.type) {\n                case 'click':\n                    this._focusLeftSideBar();\n                    break;\n            }\n        }\n        /**\n         * Handle `after-attach` messages for the widget.\n         */\n        onAfterAttach(msg) {\n            super.onAfterAttach(msg);\n            this.node.addEventListener('click', this);\n        }\n        /**\n         * A message handler invoked on a `'before-detach'`\n         * message\n         */\n        onBeforeDetach(msg) {\n            this.node.removeEventListener('click', this);\n            super.onBeforeDetach(msg);\n        }\n        _focusLeftSideBar() {\n            this._shell.expandLeft();\n        }\n        _createSkipLink(skipLinkText) {\n            const skipLink = document.createElement('a');\n            skipLink.href = '#';\n            skipLink.tabIndex = 1;\n            skipLink.text = skipLinkText;\n            skipLink.className = 'skip-link';\n            this.node.appendChild(skipLink);\n        }\n    }\n    Private.SkipLinkWidget = SkipLinkWidget;\n    class TitleHandler extends Widget {\n        /**\n         * Construct a new title handler.\n         */\n        constructor(shell) {\n            super();\n            this._selected = false;\n            const inputElement = document.createElement('input');\n            inputElement.type = 'text';\n            this.node.appendChild(inputElement);\n            this._shell = shell;\n            this.id = 'jp-title-panel-title';\n        }\n        /**\n         * Handle `after-attach` messages for the widget.\n         */\n        onAfterAttach(msg) {\n            super.onAfterAttach(msg);\n            this.inputElement.addEventListener('keyup', this);\n            this.inputElement.addEventListener('click', this);\n            this.inputElement.addEventListener('blur', this);\n        }\n        /**\n         * Handle `before-detach` messages for the widget.\n         */\n        onBeforeDetach(msg) {\n            super.onBeforeDetach(msg);\n            this.inputElement.removeEventListener('keyup', this);\n            this.inputElement.removeEventListener('click', this);\n            this.inputElement.removeEventListener('blur', this);\n        }\n        handleEvent(event) {\n            switch (event.type) {\n                case 'keyup':\n                    void this._evtKeyUp(event);\n                    break;\n                case 'click':\n                    this._evtClick(event);\n                    break;\n                case 'blur':\n                    this._selected = false;\n                    break;\n            }\n        }\n        /**\n         * Handle `keyup` events on the handler.\n         */\n        async _evtKeyUp(event) {\n            if (event.key == 'Enter') {\n                const widget = this._shell.currentWidget;\n                if (widget == null) {\n                    return;\n                }\n                const oldName = widget.title.label;\n                const inputElement = this.inputElement;\n                const newName = inputElement.value;\n                inputElement.blur();\n                if (newName !== oldName) {\n                    widget.title.label = newName;\n                }\n                else {\n                    inputElement.value = oldName;\n                }\n            }\n        }\n        /**\n         * Handle `click` events on the handler.\n         */\n        _evtClick(event) {\n            // only handle primary button clicks\n            if (event.button !== 0 || this._selected) {\n                return;\n            }\n            const inputElement = this.inputElement;\n            event.preventDefault();\n            event.stopPropagation();\n            this._selected = true;\n            const selectEnd = inputElement.value.indexOf('.');\n            if (selectEnd === -1) {\n                inputElement.select();\n            }\n            else {\n                inputElement.setSelectionRange(0, selectEnd);\n            }\n        }\n        /**\n         * The input element containing the parent widget's title.\n         */\n        get inputElement() {\n            return this.node.children[0];\n        }\n    }\n    Private.TitleHandler = TitleHandler;\n    class RestorableSplitPanel extends SplitPanel {\n        constructor(options = {}) {\n            super(options);\n            this.updated = new Signal(this);\n        }\n        /**\n         * Emit 'updated' signal on 'update' requests.\n         */\n        onUpdateRequest(msg) {\n            super.onUpdateRequest(msg);\n            this.updated.emit();\n        }\n    }\n    Private.RestorableSplitPanel = RestorableSplitPanel;\n})(Private || (Private = {}));\n//# sourceMappingURL=shell.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Token } from '@lumino/coreutils';\nimport { DisposableDelegate } from '@lumino/disposable';\nimport { Signal } from '@lumino/signaling';\n/* tslint:disable */\n/**\n * The application status token.\n */\nexport const ILabStatus = new Token('@jupyterlab/application:ILabStatus');\n/**\n * The application status signals and flags class.\n */\nexport class LabStatus {\n    /**\n     * Construct a new  status object.\n     */\n    constructor(app) {\n        this._busyCount = 0;\n        this._dirtyCount = 0;\n        this._busySignal = new Signal(app);\n        this._dirtySignal = new Signal(app);\n    }\n    /**\n     * Returns a signal for when application changes its busy status.\n     */\n    get busySignal() {\n        return this._busySignal;\n    }\n    /**\n     * Returns a signal for when application changes its dirty status.\n     */\n    get dirtySignal() {\n        return this._dirtySignal;\n    }\n    /**\n     * Whether the application is busy.\n     */\n    get isBusy() {\n        return this._busyCount > 0;\n    }\n    /**\n     * Whether the application is dirty.\n     */\n    get isDirty() {\n        return this._dirtyCount > 0;\n    }\n    /**\n     * Set the application state to dirty.\n     *\n     * @returns A disposable used to clear the dirty state for the caller.\n     */\n    setDirty() {\n        const oldDirty = this.isDirty;\n        this._dirtyCount++;\n        if (this.isDirty !== oldDirty) {\n            this._dirtySignal.emit(this.isDirty);\n        }\n        return new DisposableDelegate(() => {\n            const oldDirty = this.isDirty;\n            this._dirtyCount = Math.max(0, this._dirtyCount - 1);\n            if (this.isDirty !== oldDirty) {\n                this._dirtySignal.emit(this.isDirty);\n            }\n        });\n    }\n    /**\n     * Set the application state to busy.\n     *\n     * @returns A disposable used to clear the busy state for the caller.\n     */\n    setBusy() {\n        const oldBusy = this.isBusy;\n        this._busyCount++;\n        if (this.isBusy !== oldBusy) {\n            this._busySignal.emit(this.isBusy);\n        }\n        return new DisposableDelegate(() => {\n            const oldBusy = this.isBusy;\n            this._busyCount--;\n            if (this.isBusy !== oldBusy) {\n                this._busySignal.emit(this.isBusy);\n            }\n        });\n    }\n}\n//# sourceMappingURL=status.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { PageConfig } from '@jupyterlab/coreutils';\nimport { Base64ModelFactory } from '@jupyterlab/docregistry';\nimport { Token } from '@lumino/coreutils';\nimport { JupyterFrontEnd } from './frontend';\nimport { createRendermimePlugins } from './mimerenderers';\nimport { LabShell } from './shell';\nimport { LabStatus } from './status';\n/**\n * JupyterLab is the main application class. It is instantiated once and shared.\n */\nexport class JupyterLab extends JupyterFrontEnd {\n    /**\n     * Construct a new JupyterLab object.\n     */\n    constructor(options = { shell: new LabShell() }) {\n        super(Object.assign(Object.assign({}, options), { shell: options.shell || new LabShell() }));\n        /**\n         * The name of the JupyterLab application.\n         */\n        this.name = PageConfig.getOption('appName') || 'JupyterLab';\n        /**\n         * A namespace/prefix plugins may use to denote their provenance.\n         */\n        this.namespace = PageConfig.getOption('appNamespace') || this.name;\n        /**\n         * A list of all errors encountered when registering plugins.\n         */\n        this.registerPluginErrors = [];\n        /**\n         * The application busy and dirty status signals and flags.\n         */\n        this.status = new LabStatus(this);\n        /**\n         * The version of the JupyterLab application.\n         */\n        this.version = PageConfig.getOption('appVersion') || 'unknown';\n        this.restored = this.shell.restored\n            .then(() => undefined)\n            .catch(() => undefined);\n        // Create an IInfo dictionary from the options to override the defaults.\n        const info = Object.keys(JupyterLab.defaultInfo).reduce((acc, val) => {\n            if (val in options) {\n                acc[val] = JSON.parse(JSON.stringify(options[val]));\n            }\n            return acc;\n        }, {});\n        // Populate application info.\n        this._info = Object.assign(Object.assign({}, JupyterLab.defaultInfo), info);\n        // Populate application paths override the defaults if necessary.\n        const defaultURLs = JupyterLab.defaultPaths.urls;\n        const defaultDirs = JupyterLab.defaultPaths.directories;\n        const optionURLs = (options.paths && options.paths.urls) || {};\n        const optionDirs = (options.paths && options.paths.directories) || {};\n        this._paths = {\n            urls: Object.keys(defaultURLs).reduce((acc, key) => {\n                if (key in optionURLs) {\n                    const value = optionURLs[key];\n                    acc[key] = value;\n                }\n                else {\n                    acc[key] = defaultURLs[key];\n                }\n                return acc;\n            }, {}),\n            directories: Object.keys(JupyterLab.defaultPaths.directories).reduce((acc, key) => {\n                if (key in optionDirs) {\n                    const value = optionDirs[key];\n                    acc[key] = value;\n                }\n                else {\n                    acc[key] = defaultDirs[key];\n                }\n                return acc;\n            }, {})\n        };\n        if (this._info.devMode) {\n            this.shell.addClass('jp-mod-devMode');\n        }\n        // Add initial model factory.\n        this.docRegistry.addModelFactory(new Base64ModelFactory());\n        if (options.mimeExtensions) {\n            for (const plugin of createRendermimePlugins(options.mimeExtensions)) {\n                this.registerPlugin(plugin);\n            }\n        }\n    }\n    /**\n     * The JupyterLab application information dictionary.\n     */\n    get info() {\n        return this._info;\n    }\n    /**\n     * The JupyterLab application paths dictionary.\n     */\n    get paths() {\n        return this._paths;\n    }\n    /**\n     * Register plugins from a plugin module.\n     *\n     * @param mod - The plugin module to register.\n     */\n    registerPluginModule(mod) {\n        let data = mod.default;\n        // Handle commonjs exports.\n        if (!mod.hasOwnProperty('__esModule')) {\n            data = mod;\n        }\n        if (!Array.isArray(data)) {\n            data = [data];\n        }\n        data.forEach(item => {\n            try {\n                this.registerPlugin(item);\n            }\n            catch (error) {\n                this.registerPluginErrors.push(error);\n            }\n        });\n    }\n    /**\n     * Register the plugins from multiple plugin modules.\n     *\n     * @param mods - The plugin modules to register.\n     */\n    registerPluginModules(mods) {\n        mods.forEach(mod => {\n            this.registerPluginModule(mod);\n        });\n    }\n}\n/**\n * The namespace for `JupyterLab` class statics.\n */\n(function (JupyterLab) {\n    /**\n     * The layout restorer token.\n     */\n    JupyterLab.IInfo = new Token('@jupyterlab/application:IInfo');\n    /**\n     * The default JupyterLab application info.\n     */\n    JupyterLab.defaultInfo = {\n        devMode: PageConfig.getOption('devMode').toLowerCase() === 'true',\n        deferred: { patterns: [], matches: [] },\n        disabled: { patterns: [], matches: [] },\n        mimeExtensions: [],\n        filesCached: PageConfig.getOption('cacheFiles').toLowerCase() === 'true'\n    };\n    /**\n     * The default JupyterLab application paths.\n     */\n    JupyterLab.defaultPaths = {\n        urls: {\n            base: PageConfig.getOption('baseUrl'),\n            notFound: PageConfig.getOption('notFoundUrl'),\n            app: PageConfig.getOption('appUrl'),\n            doc: PageConfig.getOption('docUrl'),\n            static: PageConfig.getOption('staticUrl'),\n            settings: PageConfig.getOption('settingsUrl'),\n            themes: PageConfig.getOption('themesUrl'),\n            translations: PageConfig.getOption('translationsApiUrl'),\n            hubHost: PageConfig.getOption('hubHost') || undefined,\n            hubPrefix: PageConfig.getOption('hubPrefix') || undefined,\n            hubUser: PageConfig.getOption('hubUser') || undefined,\n            hubServerName: PageConfig.getOption('hubServerName') || undefined\n        },\n        directories: {\n            appSettings: PageConfig.getOption('appSettingsDir'),\n            schemas: PageConfig.getOption('schemasDir'),\n            static: PageConfig.getOption('staticDir'),\n            templates: PageConfig.getOption('templatesDir'),\n            themes: PageConfig.getOption('themesDir'),\n            userSettings: PageConfig.getOption('userSettingsDir'),\n            serverRoot: PageConfig.getOption('serverRoot'),\n            workspaces: PageConfig.getOption('workspacesDir')\n        }\n    };\n})(JupyterLab || (JupyterLab = {}));\n//# sourceMappingURL=lab.js.map","/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { PromiseDelegate, Token } from '@lumino/coreutils';\nimport { DisposableDelegate } from '@lumino/disposable';\nimport { Signal } from '@lumino/signaling';\n/**\n * A static class that routes URLs within the application.\n */\nexport class Router {\n    /**\n     * Create a URL router.\n     */\n    constructor(options) {\n        /**\n         * If a matching rule's command resolves with the `stop` token during routing,\n         * no further matches will execute.\n         */\n        this.stop = new Token('@jupyterlab/application:Router#stop');\n        this._routed = new Signal(this);\n        this._rules = new Map();\n        this.base = options.base;\n        this.commands = options.commands;\n    }\n    /**\n     * Returns the parsed current URL of the application.\n     */\n    get current() {\n        var _a, _b;\n        const { base } = this;\n        const parsed = URLExt.parse(window.location.href);\n        const { search, hash } = parsed;\n        const path = (_b = (_a = parsed.pathname) === null || _a === void 0 ? void 0 : _a.replace(base, '/')) !== null && _b !== void 0 ? _b : '';\n        const request = path + search + hash;\n        return { hash, path, request, search };\n    }\n    /**\n     * A signal emitted when the router routes a route.\n     */\n    get routed() {\n        return this._routed;\n    }\n    /**\n     * Navigate to a new path within the application.\n     *\n     * @param path - The new path or empty string if redirecting to root.\n     *\n     * @param options - The navigation options.\n     */\n    navigate(path, options = {}) {\n        const { base } = this;\n        const { history } = window;\n        const { hard } = options;\n        const old = document.location.href;\n        const url = path && path.indexOf(base) === 0 ? path : URLExt.join(base, path);\n        if (url === old) {\n            return hard ? this.reload() : undefined;\n        }\n        history.pushState({}, '', url);\n        if (hard) {\n            return this.reload();\n        }\n        if (!options.skipRouting) {\n            // Because a `route()` call may still be in the stack after having received\n            // a `stop` token, wait for the next stack frame before calling `route()`.\n            requestAnimationFrame(() => {\n                void this.route();\n            });\n        }\n    }\n    /**\n     * Register to route a path pattern to a command.\n     *\n     * @param options - The route registration options.\n     *\n     * @returns A disposable that removes the registered rule from the router.\n     */\n    register(options) {\n        var _a;\n        const { command, pattern } = options;\n        const rank = (_a = options.rank) !== null && _a !== void 0 ? _a : 100;\n        const rules = this._rules;\n        rules.set(pattern, { command, rank });\n        return new DisposableDelegate(() => {\n            rules.delete(pattern);\n        });\n    }\n    /**\n     * Cause a hard reload of the document.\n     */\n    reload() {\n        window.location.reload();\n    }\n    /**\n     * Route a specific path to an action.\n     *\n     * #### Notes\n     * If a pattern is matched, its command will be invoked with arguments that\n     * match the `IRouter.ILocation` interface.\n     */\n    route() {\n        const { commands, current, stop } = this;\n        const { request } = current;\n        const routed = this._routed;\n        const rules = this._rules;\n        const matches = [];\n        // Collect all rules that match the URL.\n        rules.forEach((rule, pattern) => {\n            if (request === null || request === void 0 ? void 0 : request.match(pattern)) {\n                matches.push(rule);\n            }\n        });\n        // Order the matching rules by rank and enqueue them.\n        const queue = matches.sort((a, b) => b.rank - a.rank);\n        const done = new PromiseDelegate();\n        // Process each enqueued command sequentially and short-circuit if a promise\n        // resolves with the `stop` token.\n        const next = async () => {\n            if (!queue.length) {\n                routed.emit(current);\n                done.resolve(undefined);\n                return;\n            }\n            const { command } = queue.pop();\n            try {\n                const request = this.current.request;\n                const result = await commands.execute(command, current);\n                if (result === stop) {\n                    queue.length = 0;\n                    console.debug(`Routing ${request} was short-circuited by ${command}`);\n                }\n            }\n            catch (reason) {\n                console.warn(`Routing ${request} to ${command} failed`, reason);\n            }\n            void next();\n        };\n        void next();\n        return done.promise;\n    }\n}\n//# sourceMappingURL=router.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Token } from '@lumino/coreutils';\n/**\n * A token for which a plugin can provide to respond to connection failures\n * to the application server.\n */\nexport const IConnectionLost = new Token('@jupyterlab/apputils:IConnectionLost');\n/**\n * The URL Router token.\n */\nexport const IRouter = new Token('@jupyterlab/application:IRouter');\n//# sourceMappingURL=tokens.js.map","/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\nimport { Token } from '@lumino/coreutils';\n/**\n * The tree path updater token.\n */\nexport const ITreePathUpdater = new Token('@jupyterlab/application:ITreePathUpdater');\n//# sourceMappingURL=treepathupdater.js.map"],"sourceRoot":""}