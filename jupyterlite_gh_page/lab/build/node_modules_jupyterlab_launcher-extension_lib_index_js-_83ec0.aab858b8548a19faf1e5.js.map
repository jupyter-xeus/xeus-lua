{"version":3,"sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../../node_modules/@jupyterlab/launcher-extension/lib/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACoD;AACmB;AACG;AACpB;AACG;AACb;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gEAAW;AAC1B,eAAe,8DAAS,EAAE,iEAAe;AACzC,cAAc,2DAAS;AACvB;AACA;AACA;AACA;AACA;AACA,iEAAe,MAAM,EAAC;AACtB;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B;AACA,sBAAsB,+DAAa;AACnC;AACA;AACA;AACA;AACA,mCAAmC,aAAa;AAChD;AACA,yCAAyC,UAAU;AACnD;AACA,iCAAiC,0DAAQ;AACzC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,kCAAkC,mEAAY;AAC9C;AACA,6BAA6B,gEAAc,EAAE,oBAAoB;AACjE;AACA,oCAAoC,0DAAO;AAC3C;AACA,qCAAqC,6BAA6B;AAClE;AACA;AACA;AACA,0CAA0C,0DAAO;AACjD,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0BAA0B;AAC3B,iC","file":"node_modules_jupyterlab_launcher-extension_lib_index_js-_83ec0.aab858b8548a19faf1e5.js","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * @packageDocumentation\n * @module launcher-extension\n */\nimport { ILabShell } from '@jupyterlab/application';\nimport { ICommandPalette, MainAreaWidget } from '@jupyterlab/apputils';\nimport { ILauncher, Launcher, LauncherModel } from '@jupyterlab/launcher';\nimport { ITranslator } from '@jupyterlab/translation';\nimport { launcherIcon } from '@jupyterlab/ui-components';\nimport { toArray } from '@lumino/algorithm';\n/**\n * The command IDs used by the launcher plugin.\n */\nvar CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.create = 'launcher:create';\n})(CommandIDs || (CommandIDs = {}));\n/**\n * A service providing an interface to the the launcher.\n */\nconst plugin = {\n    activate,\n    id: '@jupyterlab/launcher-extension:plugin',\n    requires: [ITranslator],\n    optional: [ILabShell, ICommandPalette],\n    provides: ILauncher,\n    autoStart: true\n};\n/**\n * Export the plugin as default.\n */\nexport default plugin;\n/**\n * Activate the launcher.\n */\nfunction activate(app, translator, labShell, palette) {\n    const { commands, shell } = app;\n    const trans = translator.load('jupyterlab');\n    const model = new LauncherModel();\n    commands.addCommand(CommandIDs.create, {\n        label: trans.__('New Launcher'),\n        execute: (args) => {\n            const cwd = args['cwd'] ? String(args['cwd']) : '';\n            const id = `launcher-${Private.id++}`;\n            const callback = (item) => {\n                shell.add(item, 'main', { ref: id });\n            };\n            const launcher = new Launcher({\n                model,\n                cwd,\n                callback,\n                commands,\n                translator\n            });\n            launcher.model = model;\n            launcher.title.icon = launcherIcon;\n            launcher.title.label = trans.__('Launcher');\n            const main = new MainAreaWidget({ content: launcher });\n            // If there are any other widgets open, remove the launcher close icon.\n            main.title.closable = !!toArray(shell.widgets('main')).length;\n            main.id = id;\n            shell.add(main, 'main', { activate: args['activate'] });\n            if (labShell) {\n                labShell.layoutModified.connect(() => {\n                    // If there is only a launcher open, remove the close icon.\n                    main.title.closable = toArray(labShell.widgets('main')).length > 1;\n                }, main);\n            }\n            return main;\n        }\n    });\n    if (palette) {\n        palette.addItem({\n            command: CommandIDs.create,\n            category: trans.__('Launcher')\n        });\n    }\n    return model;\n}\n/**\n * The namespace for module private data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * The incrementing id used for launcher widgets.\n     */\n    Private.id = 0;\n})(Private || (Private = {}));\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}