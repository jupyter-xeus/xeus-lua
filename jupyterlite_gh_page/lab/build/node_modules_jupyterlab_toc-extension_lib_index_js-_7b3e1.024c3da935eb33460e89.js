(self["webpackChunk_JUPYTERLAB_CORE_OUTPUT"] = self["webpackChunk_JUPYTERLAB_CORE_OUTPUT"] || []).push([["node_modules_jupyterlab_toc-extension_lib_index_js-_7b3e1"],{

/***/ 51132:
/*!*****************************************************************!*\
  !*** ../../node_modules/@jupyterlab/toc-extension/lib/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _jupyterlab_application__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @jupyterlab/application */ 67599);
/* harmony import */ var _jupyterlab_application__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_application__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _jupyterlab_docmanager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @jupyterlab/docmanager */ 60626);
/* harmony import */ var _jupyterlab_docmanager__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_docmanager__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _jupyterlab_fileeditor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @jupyterlab/fileeditor */ 86785);
/* harmony import */ var _jupyterlab_fileeditor__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_fileeditor__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _jupyterlab_markdownviewer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @jupyterlab/markdownviewer */ 86911);
/* harmony import */ var _jupyterlab_markdownviewer__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_markdownviewer__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _jupyterlab_notebook__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @jupyterlab/notebook */ 86944);
/* harmony import */ var _jupyterlab_notebook__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_notebook__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _jupyterlab_rendermime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @jupyterlab/rendermime */ 34410);
/* harmony import */ var _jupyterlab_rendermime__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_rendermime__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _jupyterlab_settingregistry__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @jupyterlab/settingregistry */ 2832);
/* harmony import */ var _jupyterlab_settingregistry__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_settingregistry__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _jupyterlab_toc__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @jupyterlab/toc */ 70095);
/* harmony import */ var _jupyterlab_toc__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_toc__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _jupyterlab_translation__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @jupyterlab/translation */ 57630);
/* harmony import */ var _jupyterlab_translation__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_translation__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _jupyterlab_ui_components__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @jupyterlab/ui-components */ 65995);
/* harmony import */ var _jupyterlab_ui_components__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_ui_components__WEBPACK_IMPORTED_MODULE_9__);
// Copyright (c) Jupyter Development Team.
// Distributed under the terms of the Modified BSD License.
/**
 * @packageDocumentation
 * @module toc-extension
 */











/**
 * The command IDs used by TOC item.
 */
var CommandIDs;
(function (CommandIDs) {
    CommandIDs.runCells = 'toc:run-cells';
})(CommandIDs || (CommandIDs = {}));
/**
 * Activates the ToC extension.
 *
 * @private
 * @param app - Jupyter application
 * @param docmanager - document manager
 * @param editorTracker - editor tracker
 * @param labShell - Jupyter lab shell
 * @param restorer - application layout restorer
 * @param markdownViewerTracker - Markdown viewer tracker
 * @param notebookTracker - notebook tracker
 * @param rendermime - rendered MIME registry
 * @param translator - translator
 * @param settingRegistry - setting registry
 * @returns table of contents registry
 */
async function activateTOC(app, docmanager, editorTracker, labShell, restorer, markdownViewerTracker, notebookTracker, rendermime, translator, settingRegistry) {
    const trans = translator.load('jupyterlab');
    // Create the ToC widget:
    const toc = new _jupyterlab_toc__WEBPACK_IMPORTED_MODULE_7__.TableOfContents({
        docmanager,
        rendermime,
        translator
    });
    // Create the ToC registry:
    const registry = new _jupyterlab_toc__WEBPACK_IMPORTED_MODULE_7__.TableOfContentsRegistry();
    // Add the ToC to the left area:
    toc.title.icon = _jupyterlab_ui_components__WEBPACK_IMPORTED_MODULE_9__.tocIcon;
    toc.title.caption = trans.__('Table of Contents');
    toc.id = 'table-of-contents';
    toc.node.setAttribute('role', 'region');
    toc.node.setAttribute('aria-label', trans.__('Table of Contents section'));
    labShell.add(toc, 'left', { rank: 400 });
    app.commands.addCommand(CommandIDs.runCells, {
        execute: args => {
            return (0,_jupyterlab_toc__WEBPACK_IMPORTED_MODULE_7__.runNestedCodeCells)(toc.headings, toc.activeEntry);
        },
        label: trans.__('Run Cell(s)')
    });
    app.contextMenu.addItem({
        selector: '.jp-tocItem',
        command: CommandIDs.runCells
    });
    // Add the ToC widget to the application restorer:
    restorer.add(toc, '@jupyterlab/toc:plugin');
    // Attempt to load plugin settings:
    let settings;
    if (settingRegistry) {
        try {
            settings = await settingRegistry.load('@jupyterlab/toc-extension:plugin');
        }
        catch (error) {
            console.error(`Failed to load settings for the Table of Contents extension.\n\n${error}`);
        }
    }
    // Create a notebook generator:
    const notebookGenerator = (0,_jupyterlab_toc__WEBPACK_IMPORTED_MODULE_7__.createNotebookGenerator)(notebookTracker, toc, rendermime.sanitizer, translator, settings);
    registry.add(notebookGenerator);
    // Create a Markdown generator:
    const markdownGenerator = (0,_jupyterlab_toc__WEBPACK_IMPORTED_MODULE_7__.createMarkdownGenerator)(editorTracker, toc, rendermime.sanitizer, translator, settings);
    registry.add(markdownGenerator);
    // Create a rendered Markdown generator:
    const renderedMarkdownGenerator = (0,_jupyterlab_toc__WEBPACK_IMPORTED_MODULE_7__.createRenderedMarkdownGenerator)(markdownViewerTracker, toc, rendermime.sanitizer, translator, settings);
    registry.add(renderedMarkdownGenerator);
    // Create a LaTeX generator:
    const latexGenerator = (0,_jupyterlab_toc__WEBPACK_IMPORTED_MODULE_7__.createLatexGenerator)(editorTracker);
    registry.add(latexGenerator);
    // Create a Python generator:
    const pythonGenerator = (0,_jupyterlab_toc__WEBPACK_IMPORTED_MODULE_7__.createPythonGenerator)(editorTracker);
    registry.add(pythonGenerator);
    // Update the ToC when the active widget changes:
    labShell.currentChanged.connect(onConnect);
    return registry;
    /**
     * Callback invoked when the active widget changes.
     *
     * @private
     */
    function onConnect() {
        let widget = app.shell.currentWidget;
        if (!widget) {
            return;
        }
        let generator = registry.find(widget);
        if (!generator) {
            // If the previously used widget is still available, stick with it.
            // Otherwise, set the current ToC widget to null.
            if (toc.current && toc.current.widget.isDisposed) {
                toc.current = null;
            }
            return;
        }
        toc.current = { widget, generator };
    }
}
/**
 * Initialization data for the ToC extension.
 *
 * @private
 */
const extension = {
    id: '@jupyterlab/toc:plugin',
    autoStart: true,
    provides: _jupyterlab_toc__WEBPACK_IMPORTED_MODULE_7__.ITableOfContentsRegistry,
    requires: [
        _jupyterlab_docmanager__WEBPACK_IMPORTED_MODULE_1__.IDocumentManager,
        _jupyterlab_fileeditor__WEBPACK_IMPORTED_MODULE_2__.IEditorTracker,
        _jupyterlab_application__WEBPACK_IMPORTED_MODULE_0__.ILabShell,
        _jupyterlab_application__WEBPACK_IMPORTED_MODULE_0__.ILayoutRestorer,
        _jupyterlab_markdownviewer__WEBPACK_IMPORTED_MODULE_3__.IMarkdownViewerTracker,
        _jupyterlab_notebook__WEBPACK_IMPORTED_MODULE_4__.INotebookTracker,
        _jupyterlab_rendermime__WEBPACK_IMPORTED_MODULE_5__.IRenderMimeRegistry,
        _jupyterlab_translation__WEBPACK_IMPORTED_MODULE_8__.ITranslator
    ],
    optional: [_jupyterlab_settingregistry__WEBPACK_IMPORTED_MODULE_6__.ISettingRegistry],
    activate: activateTOC
};
/**
 * Exports.
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (extension);
//# sourceMappingURL=index.js.map

/***/ })

}]);
//# sourceMappingURL=node_modules_jupyterlab_toc-extension_lib_index_js-_7b3e1.024c3da935eb33460e89.js.map